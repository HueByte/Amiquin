version: '3.8'

# Docker Compose file optimized for build caching
# Usage: docker-compose -f docker-compose.cached.yml build

services:
  # =============================================================================
  # Cached Dependencies Services - Built once and reused
  # =============================================================================
  
  # Service for caching libsodium build
  amiquin-libsodium-cache:
    build:
      context: ./source
      dockerfile: Amiquin.Bot/dockerfile
      target: libsodium-build
      args:
        - LIBSODIUM_VERSION=1.0.20
    image: amiquin-deps:libsodium-1.0.20
    profiles: 
      - dependencies

  # Service for caching opus build  
  amiquin-opus-cache:
    build:
      context: ./source
      dockerfile: Amiquin.Bot/dockerfile
      target: opus-build
      args:
        - OPUS_VERSION=1.5.2
    image: amiquin-deps:opus-1.5.2
    profiles: 
      - dependencies

  # Service for caching runtime dependencies
  amiquin-runtime-deps-cache:
    build:
      context: ./source
      dockerfile: Amiquin.Bot/dockerfile
      target: runtime-deps
      args:
        - PIPER_VERSION=1.2.0
    image: amiquin-deps:piper-1.2.0
    profiles: 
      - dependencies

  # =============================================================================
  # Main Application Service
  # =============================================================================
  amiquinbot:
    build:
      context: ./source
      dockerfile: Amiquin.Bot/dockerfile
      target: runtime
      cache_from:
        - amiquin-deps:libsodium-1.0.20
        - amiquin-deps:opus-1.5.2  
        - amiquin-deps:piper-1.2.0
      args:
        - MAIN_WORK_DIR=/home/app/amiquin
        - LIBSODIUM_VERSION=1.0.20
        - OPUS_VERSION=1.5.2
        - PIPER_VERSION=1.2.0
    image: amiquin:latest
    container_name: amiquin-bot
    restart: unless-stopped
    environment:
      # Database Configuration
      - AMQ_Database__Mode=1
      - AMQ_ConnectionStrings__AmiquinContext=Data Source=/home/app/amiquin/Data/Database/amiquin.db
      
      # Data Paths
      - AMQ_DataPaths__Logs=/home/app/amiquin/Data/Logs
      - AMQ_DataPaths__Database=/home/app/amiquin/Data/Database
      - AMQ_DataPaths__Messages=/home/app/amiquin/Data/Messages
      - AMQ_DataPaths__Sessions=/home/app/amiquin/Data/Sessions
      
      # Discord Configuration (override these)
      - AMQ_Bot__Token=${DISCORD_BOT_TOKEN}
      - AMQ_Bot__OpenAIKey=${OPENAI_API_KEY}
      
      # Optional: External API Keys
      - AMQ_External__NewsAPIKey=${NEWS_API_KEY:-}
      - AMQ_External__GrokAPIKey=${GROK_API_KEY:-}
      - AMQ_External__GeminiAPIKey=${GEMINI_API_KEY:-}
    volumes:
      # Persistent data storage
      - amiquin-data:/home/app/amiquin/Data
      
      # Optional: Custom configuration
      - ./config/appsettings.production.json:/home/app/amiquin/build/appsettings.json:ro
      
      # Optional: Custom persona and messages
      - ./config/Persona.md:/home/app/amiquin/build/Messages/Persona.md:ro
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    networks:
      - amiquin-network

volumes:
  amiquin-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data

networks:
  amiquin-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16