FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG MAIN_WORK_DIR=/home/app/amiquin
WORKDIR ${MAIN_WORK_DIR}

# Update and install required dependencies
RUN apt-get update && apt-get -y upgrade && apt-get install -y \
    build-essential gcc g++ curl tar pkg-config libtool m4

# Install libsodium and libopus
RUN curl -L https://download.libsodium.org/libsodium/releases/LATEST.tar.gz | tar xz && \
    cd libsodium-* && ./configure && make -j$(nproc) && make install && ldconfig && \
    cd .. && rm -rf libsodium-* && \
    curl -L https://ftp.osuosl.org/pub/xiph/releases/opus/opus-1.5.tar.gz | tar xz && \
    cd opus-1.5 && ./configure && make -j$(nproc) && make install && ldconfig && \
    cd .. && rm -rf opus-1.5

WORKDIR ${MAIN_WORK_DIR}

# Copy solution and project files for dependency caching
COPY source.sln ./ 
COPY Amiquin.Bot/Amiquin.Bot.csproj ./Amiquin.Bot/
COPY Amiquin.Core/Amiquin.Core.csproj ./Amiquin.Core/
COPY Amiquin.Infrastructure/Amiquin.Infrastructure.csproj ./Amiquin.Infrastructure/
COPY Migrations/Amiquin.Sqlite/Amiquin.Sqlite.csproj ./Migrations/Amiquin.Sqlite/
COPY Migrations/Amiquin.MySql/Amiquin.MySql.csproj ./Migrations/Amiquin.MySql/

# Restore dependencies
RUN dotnet restore source.sln

# Copy the rest of the source code and build the application
COPY . ./
RUN dotnet publish Amiquin.Bot/Amiquin.Bot.csproj -c Release -o build

# Stage 2: Runtime image
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
ARG MAIN_WORK_DIR=/home/app/amiquin
WORKDIR ${MAIN_WORK_DIR}

# Create a non-root user
RUN useradd -ms /bin/bash amiquin

# Install runtime dependencies
RUN apt-get update && apt-get install -y ffmpeg python3-full python3-pip pipx build-essential

# Install Piper TTS
RUN pipx install piper-tts && pipx ensurepath

# Copy build output and required libraries
COPY --from=build ${MAIN_WORK_DIR}/build ${MAIN_WORK_DIR}/build
COPY --from=build /usr/local/lib /usr/local/lib

# Set up log directory
ARG LOGS_PATH=${MAIN_WORK_DIR}/Data/Logs
ENV LOGS_PATH=${LOGS_PATH}
RUN mkdir -p ${LOGS_PATH}

WORKDIR ${MAIN_WORK_DIR}/build

# Update dynamic linker bindings
RUN ldconfig

# Switch to non-root user
USER amiquin
RUN pipx ensurepath

USER root

# Run the application
ENTRYPOINT ["dotnet", "Amiquin.Bot.dll"]