### YamlMime:XRefMap
sorted: true
references:
- uid: Amiquin.Bot
  name: Amiquin.Bot
  href: api/Amiquin.Bot.html
  commentId: N:Amiquin.Bot
  fullName: Amiquin.Bot
  nameWithType: Amiquin.Bot
- uid: Amiquin.Bot.AmiquinHost
  name: AmiquinHost
  href: api/Amiquin.Bot.AmiquinHost.html
  commentId: T:Amiquin.Bot.AmiquinHost
  fullName: Amiquin.Bot.AmiquinHost
  nameWithType: AmiquinHost
- uid: Amiquin.Bot.AmiquinHost.#ctor(Amiquin.Core.Services.EventHandler.IEventHandlerService,Discord.WebSocket.DiscordShardedClient,Discord.Interactions.InteractionService,Microsoft.Extensions.Logging.ILogger{Amiquin.Bot.AmiquinHost},Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions},Amiquin.Core.Services.CommandHandler.ICommandHandlerService,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.ExternalOptions},Amiquin.Core.Job.IJobService)
  name: AmiquinHost(IEventHandlerService, DiscordShardedClient, InteractionService, ILogger<AmiquinHost>, IOptions<BotOptions>, ICommandHandlerService, IServiceScopeFactory, IConfiguration, IOptions<ExternalOptions>, IJobService)
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost__ctor_Amiquin_Core_Services_EventHandler_IEventHandlerService_Discord_WebSocket_DiscordShardedClient_Discord_Interactions_InteractionService_Microsoft_Extensions_Logging_ILogger_Amiquin_Bot_AmiquinHost__Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_BotOptions__Amiquin_Core_Services_CommandHandler_ICommandHandlerService_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_ExternalOptions__Amiquin_Core_Job_IJobService_
  commentId: M:Amiquin.Bot.AmiquinHost.#ctor(Amiquin.Core.Services.EventHandler.IEventHandlerService,Discord.WebSocket.DiscordShardedClient,Discord.Interactions.InteractionService,Microsoft.Extensions.Logging.ILogger{Amiquin.Bot.AmiquinHost},Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions},Amiquin.Core.Services.CommandHandler.ICommandHandlerService,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.ExternalOptions},Amiquin.Core.Job.IJobService)
  name.vb: New(IEventHandlerService, DiscordShardedClient, InteractionService, ILogger(Of AmiquinHost), IOptions(Of BotOptions), ICommandHandlerService, IServiceScopeFactory, IConfiguration, IOptions(Of ExternalOptions), IJobService)
  fullName: Amiquin.Bot.AmiquinHost.AmiquinHost(Amiquin.Core.Services.EventHandler.IEventHandlerService, Discord.WebSocket.DiscordShardedClient, Discord.Interactions.InteractionService, Microsoft.Extensions.Logging.ILogger<Amiquin.Bot.AmiquinHost>, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.BotOptions>, Amiquin.Core.Services.CommandHandler.ICommandHandlerService, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.ExternalOptions>, Amiquin.Core.Job.IJobService)
  fullName.vb: Amiquin.Bot.AmiquinHost.New(Amiquin.Core.Services.EventHandler.IEventHandlerService, Discord.WebSocket.DiscordShardedClient, Discord.Interactions.InteractionService, Microsoft.Extensions.Logging.ILogger(Of Amiquin.Bot.AmiquinHost), Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.BotOptions), Amiquin.Core.Services.CommandHandler.ICommandHandlerService, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.ExternalOptions), Amiquin.Core.Job.IJobService)
  nameWithType: AmiquinHost.AmiquinHost(IEventHandlerService, DiscordShardedClient, InteractionService, ILogger<AmiquinHost>, IOptions<BotOptions>, ICommandHandlerService, IServiceScopeFactory, IConfiguration, IOptions<ExternalOptions>, IJobService)
  nameWithType.vb: AmiquinHost.New(IEventHandlerService, DiscordShardedClient, InteractionService, ILogger(Of AmiquinHost), IOptions(Of BotOptions), ICommandHandlerService, IServiceScopeFactory, IConfiguration, IOptions(Of ExternalOptions), IJobService)
- uid: Amiquin.Bot.AmiquinHost.#ctor*
  name: AmiquinHost
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost__ctor_
  commentId: Overload:Amiquin.Bot.AmiquinHost.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.AmiquinHost.AmiquinHost
  fullName.vb: Amiquin.Bot.AmiquinHost.New
  nameWithType: AmiquinHost.AmiquinHost
  nameWithType.vb: AmiquinHost.New
- uid: Amiquin.Bot.AmiquinHost.StartAsync(System.Threading.CancellationToken)
  name: StartAsync(CancellationToken)
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost_StartAsync_System_Threading_CancellationToken_
  commentId: M:Amiquin.Bot.AmiquinHost.StartAsync(System.Threading.CancellationToken)
  fullName: Amiquin.Bot.AmiquinHost.StartAsync(System.Threading.CancellationToken)
  nameWithType: AmiquinHost.StartAsync(CancellationToken)
- uid: Amiquin.Bot.AmiquinHost.StartAsync*
  name: StartAsync
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost_StartAsync_
  commentId: Overload:Amiquin.Bot.AmiquinHost.StartAsync
  isSpec: "True"
  fullName: Amiquin.Bot.AmiquinHost.StartAsync
  nameWithType: AmiquinHost.StartAsync
- uid: Amiquin.Bot.AmiquinHost.StopAsync(System.Threading.CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost_StopAsync_System_Threading_CancellationToken_
  commentId: M:Amiquin.Bot.AmiquinHost.StopAsync(System.Threading.CancellationToken)
  fullName: Amiquin.Bot.AmiquinHost.StopAsync(System.Threading.CancellationToken)
  nameWithType: AmiquinHost.StopAsync(CancellationToken)
- uid: Amiquin.Bot.AmiquinHost.StopAsync*
  name: StopAsync
  href: api/Amiquin.Bot.AmiquinHost.html#Amiquin_Bot_AmiquinHost_StopAsync_
  commentId: Overload:Amiquin.Bot.AmiquinHost.StopAsync
  isSpec: "True"
  fullName: Amiquin.Bot.AmiquinHost.StopAsync
  nameWithType: AmiquinHost.StopAsync
- uid: Amiquin.Bot.Commands
  name: Amiquin.Bot.Commands
  href: api/Amiquin.Bot.Commands.html
  commentId: N:Amiquin.Bot.Commands
  fullName: Amiquin.Bot.Commands
  nameWithType: Amiquin.Bot.Commands
- uid: Amiquin.Bot.Commands.AdminCommands
  name: AdminCommands
  href: api/Amiquin.Bot.Commands.AdminCommands.html
  commentId: T:Amiquin.Bot.Commands.AdminCommands
  fullName: Amiquin.Bot.Commands.AdminCommands
  nameWithType: AdminCommands
- uid: Amiquin.Bot.Commands.AdminCommands.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Bot.Commands.AdminCommands},Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.Services.Chat.Toggle.IToggleService,Amiquin.Core.Services.BotContext.BotContextAccessor)
  name: AdminCommands(ILogger<AdminCommands>, IServerMetaService, IToggleService, BotContextAccessor)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Bot_Commands_AdminCommands__Amiquin_Core_Services_Meta_IServerMetaService_Amiquin_Core_Services_Chat_Toggle_IToggleService_Amiquin_Core_Services_BotContext_BotContextAccessor_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Bot.Commands.AdminCommands},Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.Services.Chat.Toggle.IToggleService,Amiquin.Core.Services.BotContext.BotContextAccessor)
  name.vb: New(ILogger(Of AdminCommands), IServerMetaService, IToggleService, BotContextAccessor)
  fullName: Amiquin.Bot.Commands.AdminCommands.AdminCommands(Microsoft.Extensions.Logging.ILogger<Amiquin.Bot.Commands.AdminCommands>, Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.Services.Chat.Toggle.IToggleService, Amiquin.Core.Services.BotContext.BotContextAccessor)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Bot.Commands.AdminCommands), Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.Services.Chat.Toggle.IToggleService, Amiquin.Core.Services.BotContext.BotContextAccessor)
  nameWithType: AdminCommands.AdminCommands(ILogger<AdminCommands>, IServerMetaService, IToggleService, BotContextAccessor)
  nameWithType.vb: AdminCommands.New(ILogger(Of AdminCommands), IServerMetaService, IToggleService, BotContextAccessor)
- uid: Amiquin.Bot.Commands.AdminCommands.#ctor*
  name: AdminCommands
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands__ctor_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.Commands.AdminCommands.AdminCommands
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.New
  nameWithType: AdminCommands.AdminCommands
  nameWithType.vb: AdminCommands.New
- uid: Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync(System.String,System.String,System.String,System.Boolean)
  name: EmbedSayAsync(string, string, string, bool)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_EmbedSayAsync_System_String_System_String_System_String_System_Boolean_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync(System.String,System.String,System.String,System.Boolean)
  name.vb: EmbedSayAsync(String, String, String, Boolean)
  fullName: Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync(string, string, string, bool)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync(String, String, String, Boolean)
  nameWithType: AdminCommands.EmbedSayAsync(string, string, string, bool)
  nameWithType.vb: AdminCommands.EmbedSayAsync(String, String, String, Boolean)
- uid: Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync*
  name: EmbedSayAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_EmbedSayAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.EmbedSayAsync
  nameWithType: AdminCommands.EmbedSayAsync
- uid: Amiquin.Bot.Commands.AdminCommands.NukeAsync(System.Int32)
  name: NukeAsync(int)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_NukeAsync_System_Int32_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.NukeAsync(System.Int32)
  name.vb: NukeAsync(Integer)
  fullName: Amiquin.Bot.Commands.AdminCommands.NukeAsync(int)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.NukeAsync(Integer)
  nameWithType: AdminCommands.NukeAsync(int)
  nameWithType.vb: AdminCommands.NukeAsync(Integer)
- uid: Amiquin.Bot.Commands.AdminCommands.NukeAsync*
  name: NukeAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_NukeAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.NukeAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.NukeAsync
  nameWithType: AdminCommands.NukeAsync
- uid: Amiquin.Bot.Commands.AdminCommands.SayAsync(System.String)
  name: SayAsync(string)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_SayAsync_System_String_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.SayAsync(System.String)
  name.vb: SayAsync(String)
  fullName: Amiquin.Bot.Commands.AdminCommands.SayAsync(string)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.SayAsync(String)
  nameWithType: AdminCommands.SayAsync(string)
  nameWithType.vb: AdminCommands.SayAsync(String)
- uid: Amiquin.Bot.Commands.AdminCommands.SayAsync*
  name: SayAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_SayAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.SayAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.SayAsync
  nameWithType: AdminCommands.SayAsync
- uid: Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync
  name: ServerTogglesAsync()
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_ServerTogglesAsync
  commentId: M:Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync
  fullName: Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync()
  nameWithType: AdminCommands.ServerTogglesAsync()
- uid: Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync*
  name: ServerTogglesAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_ServerTogglesAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.ServerTogglesAsync
  nameWithType: AdminCommands.ServerTogglesAsync
- uid: Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync(System.String)
  name: SetServerPersonaAsync(string)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_SetServerPersonaAsync_System_String_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync(System.String)
  name.vb: SetServerPersonaAsync(String)
  fullName: Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync(string)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync(String)
  nameWithType: AdminCommands.SetServerPersonaAsync(string)
  nameWithType.vb: AdminCommands.SetServerPersonaAsync(String)
- uid: Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync*
  name: SetServerPersonaAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_SetServerPersonaAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.SetServerPersonaAsync
  nameWithType: AdminCommands.SetServerPersonaAsync
- uid: Amiquin.Bot.Commands.AdminCommands.ToggleAsync(System.String,System.Boolean,System.String)
  name: ToggleAsync(string, bool, string?)
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_ToggleAsync_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Bot.Commands.AdminCommands.ToggleAsync(System.String,System.Boolean,System.String)
  name.vb: ToggleAsync(String, Boolean, String)
  fullName: Amiquin.Bot.Commands.AdminCommands.ToggleAsync(string, bool, string?)
  fullName.vb: Amiquin.Bot.Commands.AdminCommands.ToggleAsync(String, Boolean, String)
  nameWithType: AdminCommands.ToggleAsync(string, bool, string?)
  nameWithType.vb: AdminCommands.ToggleAsync(String, Boolean, String)
- uid: Amiquin.Bot.Commands.AdminCommands.ToggleAsync*
  name: ToggleAsync
  href: api/Amiquin.Bot.Commands.AdminCommands.html#Amiquin_Bot_Commands_AdminCommands_ToggleAsync_
  commentId: Overload:Amiquin.Bot.Commands.AdminCommands.ToggleAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.AdminCommands.ToggleAsync
  nameWithType: AdminCommands.ToggleAsync
- uid: Amiquin.Bot.Commands.DevCommands
  name: DevCommands
  href: api/Amiquin.Bot.Commands.DevCommands.html
  commentId: T:Amiquin.Bot.Commands.DevCommands
  fullName: Amiquin.Bot.Commands.DevCommands
  nameWithType: DevCommands
- uid: Amiquin.Bot.Commands.DevCommands.#ctor(Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Persona.IPersonaService,Discord.WebSocket.DiscordShardedClient,Amiquin.Core.Services.Voice.IVoiceService,Amiquin.Core.Services.Voice.IVoiceStateManager,Amiquin.Core.Services.Chat.IPersonaChatService,Amiquin.Core.Services.Chat.Toggle.IToggleService)
  name: DevCommands(IChatCoreService, IMessageCacheService, IPersonaService, DiscordShardedClient, IVoiceService, IVoiceStateManager, IPersonaChatService, IToggleService)
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands__ctor_Amiquin_Core_Services_Chat_IChatCoreService_Amiquin_Core_Services_MessageCache_IMessageCacheService_Amiquin_Core_Services_Persona_IPersonaService_Discord_WebSocket_DiscordShardedClient_Amiquin_Core_Services_Voice_IVoiceService_Amiquin_Core_Services_Voice_IVoiceStateManager_Amiquin_Core_Services_Chat_IPersonaChatService_Amiquin_Core_Services_Chat_Toggle_IToggleService_
  commentId: M:Amiquin.Bot.Commands.DevCommands.#ctor(Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Persona.IPersonaService,Discord.WebSocket.DiscordShardedClient,Amiquin.Core.Services.Voice.IVoiceService,Amiquin.Core.Services.Voice.IVoiceStateManager,Amiquin.Core.Services.Chat.IPersonaChatService,Amiquin.Core.Services.Chat.Toggle.IToggleService)
  name.vb: New(IChatCoreService, IMessageCacheService, IPersonaService, DiscordShardedClient, IVoiceService, IVoiceStateManager, IPersonaChatService, IToggleService)
  fullName: Amiquin.Bot.Commands.DevCommands.DevCommands(Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Persona.IPersonaService, Discord.WebSocket.DiscordShardedClient, Amiquin.Core.Services.Voice.IVoiceService, Amiquin.Core.Services.Voice.IVoiceStateManager, Amiquin.Core.Services.Chat.IPersonaChatService, Amiquin.Core.Services.Chat.Toggle.IToggleService)
  fullName.vb: Amiquin.Bot.Commands.DevCommands.New(Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Persona.IPersonaService, Discord.WebSocket.DiscordShardedClient, Amiquin.Core.Services.Voice.IVoiceService, Amiquin.Core.Services.Voice.IVoiceStateManager, Amiquin.Core.Services.Chat.IPersonaChatService, Amiquin.Core.Services.Chat.Toggle.IToggleService)
  nameWithType: DevCommands.DevCommands(IChatCoreService, IMessageCacheService, IPersonaService, DiscordShardedClient, IVoiceService, IVoiceStateManager, IPersonaChatService, IToggleService)
  nameWithType.vb: DevCommands.New(IChatCoreService, IMessageCacheService, IPersonaService, DiscordShardedClient, IVoiceService, IVoiceStateManager, IPersonaChatService, IToggleService)
- uid: Amiquin.Bot.Commands.DevCommands.#ctor*
  name: DevCommands
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands__ctor_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.Commands.DevCommands.DevCommands
  fullName.vb: Amiquin.Bot.Commands.DevCommands.New
  nameWithType: DevCommands.DevCommands
  nameWithType.vb: DevCommands.New
- uid: Amiquin.Bot.Commands.DevCommands.CreateNachoSquad
  name: CreateNachoSquad()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_CreateNachoSquad
  commentId: M:Amiquin.Bot.Commands.DevCommands.CreateNachoSquad
  fullName: Amiquin.Bot.Commands.DevCommands.CreateNachoSquad()
  nameWithType: DevCommands.CreateNachoSquad()
- uid: Amiquin.Bot.Commands.DevCommands.CreateNachoSquad*
  name: CreateNachoSquad
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_CreateNachoSquad_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.CreateNachoSquad
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.CreateNachoSquad
  nameWithType: DevCommands.CreateNachoSquad
- uid: Amiquin.Bot.Commands.DevCommands.JoinAsync
  name: JoinAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_JoinAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.JoinAsync
  fullName: Amiquin.Bot.Commands.DevCommands.JoinAsync()
  nameWithType: DevCommands.JoinAsync()
- uid: Amiquin.Bot.Commands.DevCommands.JoinAsync*
  name: JoinAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_JoinAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.JoinAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.JoinAsync
  nameWithType: DevCommands.JoinAsync
- uid: Amiquin.Bot.Commands.DevCommands.LeaveAsync
  name: LeaveAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_LeaveAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.LeaveAsync
  fullName: Amiquin.Bot.Commands.DevCommands.LeaveAsync()
  nameWithType: DevCommands.LeaveAsync()
- uid: Amiquin.Bot.Commands.DevCommands.LeaveAsync*
  name: LeaveAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_LeaveAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.LeaveAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.LeaveAsync
  nameWithType: DevCommands.LeaveAsync
- uid: Amiquin.Bot.Commands.DevCommands.PersonaAsync
  name: PersonaAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_PersonaAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.PersonaAsync
  fullName: Amiquin.Bot.Commands.DevCommands.PersonaAsync()
  nameWithType: DevCommands.PersonaAsync()
- uid: Amiquin.Bot.Commands.DevCommands.PersonaAsync*
  name: PersonaAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_PersonaAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.PersonaAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.PersonaAsync
  nameWithType: DevCommands.PersonaAsync
- uid: Amiquin.Bot.Commands.DevCommands.PingAsync
  name: PingAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_PingAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.PingAsync
  fullName: Amiquin.Bot.Commands.DevCommands.PingAsync()
  nameWithType: DevCommands.PingAsync()
- uid: Amiquin.Bot.Commands.DevCommands.PingAsync*
  name: PingAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_PingAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.PingAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.PingAsync
  nameWithType: DevCommands.PingAsync
- uid: Amiquin.Bot.Commands.DevCommands.RestartAsync
  name: RestartAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_RestartAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.RestartAsync
  fullName: Amiquin.Bot.Commands.DevCommands.RestartAsync()
  nameWithType: DevCommands.RestartAsync()
- uid: Amiquin.Bot.Commands.DevCommands.RestartAsync*
  name: RestartAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_RestartAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.RestartAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.RestartAsync
  nameWithType: DevCommands.RestartAsync
- uid: Amiquin.Bot.Commands.DevCommands.SaySomethingAsync(System.String)
  name: SaySomethingAsync(string)
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_SaySomethingAsync_System_String_
  commentId: M:Amiquin.Bot.Commands.DevCommands.SaySomethingAsync(System.String)
  name.vb: SaySomethingAsync(String)
  fullName: Amiquin.Bot.Commands.DevCommands.SaySomethingAsync(string)
  fullName.vb: Amiquin.Bot.Commands.DevCommands.SaySomethingAsync(String)
  nameWithType: DevCommands.SaySomethingAsync(string)
  nameWithType.vb: DevCommands.SaySomethingAsync(String)
- uid: Amiquin.Bot.Commands.DevCommands.SaySomethingAsync*
  name: SaySomethingAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_SaySomethingAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.SaySomethingAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.SaySomethingAsync
  nameWithType: DevCommands.SaySomethingAsync
- uid: Amiquin.Bot.Commands.DevCommands.ToggleAsync(System.String,System.Boolean,System.String)
  name: ToggleAsync(string, bool, string?)
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_ToggleAsync_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Bot.Commands.DevCommands.ToggleAsync(System.String,System.Boolean,System.String)
  name.vb: ToggleAsync(String, Boolean, String)
  fullName: Amiquin.Bot.Commands.DevCommands.ToggleAsync(string, bool, string?)
  fullName.vb: Amiquin.Bot.Commands.DevCommands.ToggleAsync(String, Boolean, String)
  nameWithType: DevCommands.ToggleAsync(string, bool, string?)
  nameWithType.vb: DevCommands.ToggleAsync(String, Boolean, String)
- uid: Amiquin.Bot.Commands.DevCommands.ToggleAsync*
  name: ToggleAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_ToggleAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.ToggleAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.ToggleAsync
  nameWithType: DevCommands.ToggleAsync
- uid: Amiquin.Bot.Commands.DevCommands.VoiceChatAsync(System.String)
  name: VoiceChatAsync(string)
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_VoiceChatAsync_System_String_
  commentId: M:Amiquin.Bot.Commands.DevCommands.VoiceChatAsync(System.String)
  name.vb: VoiceChatAsync(String)
  fullName: Amiquin.Bot.Commands.DevCommands.VoiceChatAsync(string)
  fullName.vb: Amiquin.Bot.Commands.DevCommands.VoiceChatAsync(String)
  nameWithType: DevCommands.VoiceChatAsync(string)
  nameWithType.vb: DevCommands.VoiceChatAsync(String)
- uid: Amiquin.Bot.Commands.DevCommands.VoiceChatAsync*
  name: VoiceChatAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_VoiceChatAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.VoiceChatAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.VoiceChatAsync
  nameWithType: DevCommands.VoiceChatAsync
- uid: Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync
  name: VoiceDebugAsync()
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_VoiceDebugAsync
  commentId: M:Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync
  fullName: Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync()
  nameWithType: DevCommands.VoiceDebugAsync()
- uid: Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync*
  name: VoiceDebugAsync
  href: api/Amiquin.Bot.Commands.DevCommands.html#Amiquin_Bot_Commands_DevCommands_VoiceDebugAsync_
  commentId: Overload:Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.DevCommands.VoiceDebugAsync
  nameWithType: DevCommands.VoiceDebugAsync
- uid: Amiquin.Bot.Commands.MainCommands
  name: MainCommands
  href: api/Amiquin.Bot.Commands.MainCommands.html
  commentId: T:Amiquin.Bot.Commands.MainCommands
  fullName: Amiquin.Bot.Commands.MainCommands
  nameWithType: MainCommands
- uid: Amiquin.Bot.Commands.MainCommands.#ctor(Amiquin.Core.Services.Chat.IPersonaChatService,Amiquin.Core.Services.MessageCache.IMessageCacheService)
  name: MainCommands(IPersonaChatService, IMessageCacheService)
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands__ctor_Amiquin_Core_Services_Chat_IPersonaChatService_Amiquin_Core_Services_MessageCache_IMessageCacheService_
  commentId: M:Amiquin.Bot.Commands.MainCommands.#ctor(Amiquin.Core.Services.Chat.IPersonaChatService,Amiquin.Core.Services.MessageCache.IMessageCacheService)
  name.vb: New(IPersonaChatService, IMessageCacheService)
  fullName: Amiquin.Bot.Commands.MainCommands.MainCommands(Amiquin.Core.Services.Chat.IPersonaChatService, Amiquin.Core.Services.MessageCache.IMessageCacheService)
  fullName.vb: Amiquin.Bot.Commands.MainCommands.New(Amiquin.Core.Services.Chat.IPersonaChatService, Amiquin.Core.Services.MessageCache.IMessageCacheService)
  nameWithType: MainCommands.MainCommands(IPersonaChatService, IMessageCacheService)
  nameWithType.vb: MainCommands.New(IPersonaChatService, IMessageCacheService)
- uid: Amiquin.Bot.Commands.MainCommands.#ctor*
  name: MainCommands
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands__ctor_
  commentId: Overload:Amiquin.Bot.Commands.MainCommands.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.Commands.MainCommands.MainCommands
  fullName.vb: Amiquin.Bot.Commands.MainCommands.New
  nameWithType: MainCommands.MainCommands
  nameWithType.vb: MainCommands.New
- uid: Amiquin.Bot.Commands.MainCommands.ChatAsync(System.String)
  name: ChatAsync(string)
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands_ChatAsync_System_String_
  commentId: M:Amiquin.Bot.Commands.MainCommands.ChatAsync(System.String)
  name.vb: ChatAsync(String)
  fullName: Amiquin.Bot.Commands.MainCommands.ChatAsync(string)
  fullName.vb: Amiquin.Bot.Commands.MainCommands.ChatAsync(String)
  nameWithType: MainCommands.ChatAsync(string)
  nameWithType.vb: MainCommands.ChatAsync(String)
- uid: Amiquin.Bot.Commands.MainCommands.ChatAsync*
  name: ChatAsync
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands_ChatAsync_
  commentId: Overload:Amiquin.Bot.Commands.MainCommands.ChatAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.MainCommands.ChatAsync
  nameWithType: MainCommands.ChatAsync
- uid: Amiquin.Bot.Commands.MainCommands.InfoAsync
  name: InfoAsync()
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands_InfoAsync
  commentId: M:Amiquin.Bot.Commands.MainCommands.InfoAsync
  fullName: Amiquin.Bot.Commands.MainCommands.InfoAsync()
  nameWithType: MainCommands.InfoAsync()
- uid: Amiquin.Bot.Commands.MainCommands.InfoAsync*
  name: InfoAsync
  href: api/Amiquin.Bot.Commands.MainCommands.html#Amiquin_Bot_Commands_MainCommands_InfoAsync_
  commentId: Overload:Amiquin.Bot.Commands.MainCommands.InfoAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Commands.MainCommands.InfoAsync
  nameWithType: MainCommands.InfoAsync
- uid: Amiquin.Bot.Configurators
  name: Amiquin.Bot.Configurators
  href: api/Amiquin.Bot.Configurators.html
  commentId: N:Amiquin.Bot.Configurators
  fullName: Amiquin.Bot.Configurators
  nameWithType: Amiquin.Bot.Configurators
- uid: Amiquin.Bot.Configurators.InjectionConfigurator
  name: InjectionConfigurator
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html
  commentId: T:Amiquin.Bot.Configurators.InjectionConfigurator
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator
  nameWithType: InjectionConfigurator
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: InjectionConfigurator(IConfiguration, IServiceCollection)
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator__ctor_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: New(IConfiguration, IServiceCollection)
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.InjectionConfigurator(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName.vb: Amiquin.Bot.Configurators.InjectionConfigurator.New(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: InjectionConfigurator.InjectionConfigurator(IConfiguration, IServiceCollection)
  nameWithType.vb: InjectionConfigurator.New(IConfiguration, IServiceCollection)
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.#ctor*
  name: InjectionConfigurator
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator__ctor_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.InjectionConfigurator
  fullName.vb: Amiquin.Bot.Configurators.InjectionConfigurator.New
  nameWithType: InjectionConfigurator.InjectionConfigurator
  nameWithType.vb: InjectionConfigurator.New
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore
  name: AddAmiquinCore()
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddAmiquinCore
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore()
  nameWithType: InjectionConfigurator.AddAmiquinCore()
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore*
  name: AddAmiquinCore
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddAmiquinCore_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore
  isSpec: "True"
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddAmiquinCore
  nameWithType: InjectionConfigurator.AddAmiquinCore
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions
  name: AddOptions()
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddOptions
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions()
  nameWithType: InjectionConfigurator.AddOptions()
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions*
  name: AddOptions
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddOptions_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions
  isSpec: "True"
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddOptions
  nameWithType: InjectionConfigurator.AddOptions
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories
  name: AddRepositories()
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddRepositories
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories()
  nameWithType: InjectionConfigurator.AddRepositories()
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories*
  name: AddRepositories
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddRepositories_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories
  isSpec: "True"
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddRepositories
  nameWithType: InjectionConfigurator.AddRepositories
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs
  name: AddRunnableJobs()
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddRunnableJobs
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs()
  nameWithType: InjectionConfigurator.AddRunnableJobs()
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs*
  name: AddRunnableJobs
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddRunnableJobs_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs
  isSpec: "True"
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddRunnableJobs
  nameWithType: InjectionConfigurator.AddRunnableJobs
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddServices
  name: AddServices()
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddServices
  commentId: M:Amiquin.Bot.Configurators.InjectionConfigurator.AddServices
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddServices()
  nameWithType: InjectionConfigurator.AddServices()
- uid: Amiquin.Bot.Configurators.InjectionConfigurator.AddServices*
  name: AddServices
  href: api/Amiquin.Bot.Configurators.InjectionConfigurator.html#Amiquin_Bot_Configurators_InjectionConfigurator_AddServices_
  commentId: Overload:Amiquin.Bot.Configurators.InjectionConfigurator.AddServices
  isSpec: "True"
  fullName: Amiquin.Bot.Configurators.InjectionConfigurator.AddServices
  nameWithType: InjectionConfigurator.AddServices
- uid: Amiquin.Bot.Console
  name: Amiquin.Bot.Console
  href: api/Amiquin.Bot.Console.html
  commentId: N:Amiquin.Bot.Console
  fullName: Amiquin.Bot.Console
  nameWithType: Amiquin.Bot.Console
- uid: Amiquin.Bot.Console.Writer
  name: Writer
  href: api/Amiquin.Bot.Console.Writer.html
  commentId: T:Amiquin.Bot.Console.Writer
  fullName: Amiquin.Bot.Console.Writer
  nameWithType: Writer
- uid: Amiquin.Bot.Console.Writer.WriteDictionaryData*
  name: WriteDictionaryData
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteDictionaryData_
  commentId: Overload:Amiquin.Bot.Console.Writer.WriteDictionaryData
  isSpec: "True"
  fullName: Amiquin.Bot.Console.Writer.WriteDictionaryData
  nameWithType: Writer.WriteDictionaryData
- uid: Amiquin.Bot.Console.Writer.WriteDictionaryData``2(System.String,System.Collections.Generic.Dictionary{``0,``1})
  name: WriteDictionaryData<K, V>(string, Dictionary<K, V>)
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteDictionaryData__2_System_String_System_Collections_Generic_Dictionary___0___1__
  commentId: M:Amiquin.Bot.Console.Writer.WriteDictionaryData``2(System.String,System.Collections.Generic.Dictionary{``0,``1})
  name.vb: WriteDictionaryData(Of K, V)(String, Dictionary(Of K, V))
  fullName: Amiquin.Bot.Console.Writer.WriteDictionaryData<K, V>(string, System.Collections.Generic.Dictionary<K, V>)
  fullName.vb: Amiquin.Bot.Console.Writer.WriteDictionaryData(Of K, V)(String, System.Collections.Generic.Dictionary(Of K, V))
  nameWithType: Writer.WriteDictionaryData<K, V>(string, Dictionary<K, V>)
  nameWithType.vb: Writer.WriteDictionaryData(Of K, V)(String, Dictionary(Of K, V))
- uid: Amiquin.Bot.Console.Writer.WriteJsonData*
  name: WriteJsonData
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteJsonData_
  commentId: Overload:Amiquin.Bot.Console.Writer.WriteJsonData
  isSpec: "True"
  fullName: Amiquin.Bot.Console.Writer.WriteJsonData
  nameWithType: Writer.WriteJsonData
- uid: Amiquin.Bot.Console.Writer.WriteJsonData``1(System.String,``0)
  name: WriteJsonData<T>(string, T)
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteJsonData__1_System_String___0_
  commentId: M:Amiquin.Bot.Console.Writer.WriteJsonData``1(System.String,``0)
  name.vb: WriteJsonData(Of T)(String, T)
  fullName: Amiquin.Bot.Console.Writer.WriteJsonData<T>(string, T)
  fullName.vb: Amiquin.Bot.Console.Writer.WriteJsonData(Of T)(String, T)
  nameWithType: Writer.WriteJsonData<T>(string, T)
  nameWithType.vb: Writer.WriteJsonData(Of T)(String, T)
- uid: Amiquin.Bot.Console.Writer.WriteList(System.String,System.Collections.Generic.IEnumerable{System.String})
  name: WriteList(string, IEnumerable<string>)
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteList_System_String_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Amiquin.Bot.Console.Writer.WriteList(System.String,System.Collections.Generic.IEnumerable{System.String})
  name.vb: WriteList(String, IEnumerable(Of String))
  fullName: Amiquin.Bot.Console.Writer.WriteList(string, System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Amiquin.Bot.Console.Writer.WriteList(String, System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Writer.WriteList(string, IEnumerable<string>)
  nameWithType.vb: Writer.WriteList(String, IEnumerable(Of String))
- uid: Amiquin.Bot.Console.Writer.WriteList*
  name: WriteList
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteList_
  commentId: Overload:Amiquin.Bot.Console.Writer.WriteList
  isSpec: "True"
  fullName: Amiquin.Bot.Console.Writer.WriteList
  nameWithType: Writer.WriteList
- uid: Amiquin.Bot.Console.Writer.WriteLogo
  name: WriteLogo()
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteLogo
  commentId: M:Amiquin.Bot.Console.Writer.WriteLogo
  fullName: Amiquin.Bot.Console.Writer.WriteLogo()
  nameWithType: Writer.WriteLogo()
- uid: Amiquin.Bot.Console.Writer.WriteLogo*
  name: WriteLogo
  href: api/Amiquin.Bot.Console.Writer.html#Amiquin_Bot_Console_Writer_WriteLogo_
  commentId: Overload:Amiquin.Bot.Console.Writer.WriteLogo
  isSpec: "True"
  fullName: Amiquin.Bot.Console.Writer.WriteLogo
  nameWithType: Writer.WriteLogo
- uid: Amiquin.Bot.Preconditions
  name: Amiquin.Bot.Preconditions
  href: api/Amiquin.Bot.Preconditions.html
  commentId: N:Amiquin.Bot.Preconditions
  fullName: Amiquin.Bot.Preconditions
  nameWithType: Amiquin.Bot.Preconditions
- uid: Amiquin.Bot.Preconditions.RequireServerMeta
  name: RequireServerMeta
  href: api/Amiquin.Bot.Preconditions.RequireServerMeta.html
  commentId: T:Amiquin.Bot.Preconditions.RequireServerMeta
  fullName: Amiquin.Bot.Preconditions.RequireServerMeta
  nameWithType: RequireServerMeta
- uid: Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync(Discord.IInteractionContext,Discord.Interactions.ICommandInfo,System.IServiceProvider)
  name: CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider)
  href: api/Amiquin.Bot.Preconditions.RequireServerMeta.html#Amiquin_Bot_Preconditions_RequireServerMeta_CheckRequirementsAsync_Discord_IInteractionContext_Discord_Interactions_ICommandInfo_System_IServiceProvider_
  commentId: M:Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync(Discord.IInteractionContext,Discord.Interactions.ICommandInfo,System.IServiceProvider)
  fullName: Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync(Discord.IInteractionContext, Discord.Interactions.ICommandInfo, System.IServiceProvider)
  nameWithType: RequireServerMeta.CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider)
- uid: Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync*
  name: CheckRequirementsAsync
  href: api/Amiquin.Bot.Preconditions.RequireServerMeta.html#Amiquin_Bot_Preconditions_RequireServerMeta_CheckRequirementsAsync_
  commentId: Overload:Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Preconditions.RequireServerMeta.CheckRequirementsAsync
  nameWithType: RequireServerMeta.CheckRequirementsAsync
- uid: Amiquin.Bot.Preconditions.RequireToggle
  name: RequireToggle
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html
  commentId: T:Amiquin.Bot.Preconditions.RequireToggle
  fullName: Amiquin.Bot.Preconditions.RequireToggle
  nameWithType: RequireToggle
- uid: Amiquin.Bot.Preconditions.RequireToggle.#ctor(System.String)
  name: RequireToggle(string)
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle__ctor_System_String_
  commentId: M:Amiquin.Bot.Preconditions.RequireToggle.#ctor(System.String)
  name.vb: New(String)
  fullName: Amiquin.Bot.Preconditions.RequireToggle.RequireToggle(string)
  fullName.vb: Amiquin.Bot.Preconditions.RequireToggle.New(String)
  nameWithType: RequireToggle.RequireToggle(string)
  nameWithType.vb: RequireToggle.New(String)
- uid: Amiquin.Bot.Preconditions.RequireToggle.#ctor*
  name: RequireToggle
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle__ctor_
  commentId: Overload:Amiquin.Bot.Preconditions.RequireToggle.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Bot.Preconditions.RequireToggle.RequireToggle
  fullName.vb: Amiquin.Bot.Preconditions.RequireToggle.New
  nameWithType: RequireToggle.RequireToggle
  nameWithType.vb: RequireToggle.New
- uid: Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync(Discord.IInteractionContext,Discord.Interactions.ICommandInfo,System.IServiceProvider)
  name: CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider)
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle_CheckRequirementsAsync_Discord_IInteractionContext_Discord_Interactions_ICommandInfo_System_IServiceProvider_
  commentId: M:Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync(Discord.IInteractionContext,Discord.Interactions.ICommandInfo,System.IServiceProvider)
  fullName: Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync(Discord.IInteractionContext, Discord.Interactions.ICommandInfo, System.IServiceProvider)
  nameWithType: RequireToggle.CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider)
- uid: Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync*
  name: CheckRequirementsAsync
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle_CheckRequirementsAsync_
  commentId: Overload:Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync
  isSpec: "True"
  fullName: Amiquin.Bot.Preconditions.RequireToggle.CheckRequirementsAsync
  nameWithType: RequireToggle.CheckRequirementsAsync
- uid: Amiquin.Bot.Preconditions.RequireToggle.ToggleName
  name: ToggleName
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle_ToggleName
  commentId: P:Amiquin.Bot.Preconditions.RequireToggle.ToggleName
  fullName: Amiquin.Bot.Preconditions.RequireToggle.ToggleName
  nameWithType: RequireToggle.ToggleName
- uid: Amiquin.Bot.Preconditions.RequireToggle.ToggleName*
  name: ToggleName
  href: api/Amiquin.Bot.Preconditions.RequireToggle.html#Amiquin_Bot_Preconditions_RequireToggle_ToggleName_
  commentId: Overload:Amiquin.Bot.Preconditions.RequireToggle.ToggleName
  isSpec: "True"
  fullName: Amiquin.Bot.Preconditions.RequireToggle.ToggleName
  nameWithType: RequireToggle.ToggleName
- uid: Amiquin.Core
  name: Amiquin.Core
  href: api/Amiquin.Core.html
  commentId: N:Amiquin.Core
  fullName: Amiquin.Core
  nameWithType: Amiquin.Core
- uid: Amiquin.Core.Abstraction
  name: Amiquin.Core.Abstraction
  href: api/Amiquin.Core.Abstraction.html
  commentId: N:Amiquin.Core.Abstraction
  fullName: Amiquin.Core.Abstraction
  nameWithType: Amiquin.Core.Abstraction
- uid: Amiquin.Core.Abstraction.BaseRepository`3
  name: BaseRepository<TKeyType, TEntity, TContext>
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html
  commentId: T:Amiquin.Core.Abstraction.BaseRepository`3
  name.vb: BaseRepository(Of TKeyType, TEntity, TContext)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.#ctor(`2)
  name: BaseRepository(TContext)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3__ctor__2_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.#ctor(`2)
  name.vb: New(TContext)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.BaseRepository(TContext)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).New(TContext)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.BaseRepository(TContext)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).New(TContext)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.#ctor*
  name: BaseRepository
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3__ctor_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.BaseRepository
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).New
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.BaseRepository
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).New
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AddAsync(`1)
  name: AddAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AddAsync__1_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.AddAsync(`1)
  name.vb: AddAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AddAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AddAsync(TEntity)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AddAsync(TEntity?)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AddAsync(TEntity)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AddAsync*
  name: AddAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AddAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.AddAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AddAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AddAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AddAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AddAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AddRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name: AddRangeAsync(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AddRangeAsync_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.AddRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name.vb: AddRangeAsync(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AddRangeAsync(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AddRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AddRangeAsync(IEnumerable<TEntity>)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AddRangeAsync(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AddRangeAsync*
  name: AddRangeAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AddRangeAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.AddRangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AddRangeAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AddRangeAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AddRangeAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AddRangeAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AsQueryable
  name: AsQueryable()
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AsQueryable
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.AsQueryable
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AsQueryable()
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AsQueryable()
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AsQueryable()
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AsQueryable()
- uid: Amiquin.Core.Abstraction.BaseRepository`3.AsQueryable*
  name: AsQueryable
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_AsQueryable_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.AsQueryable
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.AsQueryable
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).AsQueryable
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.AsQueryable
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).AsQueryable
- uid: Amiquin.Core.Abstraction.BaseRepository`3.GetAsync(`0)
  name: GetAsync(TKeyType)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_GetAsync__0_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.GetAsync(`0)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.GetAsync(TKeyType)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).GetAsync(TKeyType)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.GetAsync(TKeyType)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).GetAsync(TKeyType)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.GetAsync*
  name: GetAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_GetAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.GetAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.GetAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).GetAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.GetAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).GetAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync(`0)
  name: RemoveAsync(TKeyType)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_RemoveAsync__0_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync(`0)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync(TKeyType)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync(TKeyType)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync(TKeyType)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync(TKeyType)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync(`1)
  name: RemoveAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_RemoveAsync__1_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync(`1)
  name.vb: RemoveAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync(TEntity)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync(TEntity?)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync(TEntity)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync*
  name: RemoveAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_RemoveAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.RemoveAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.RemoveAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).RemoveAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.RemoveRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name: RemoveRangeAsync(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_RemoveRangeAsync_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.RemoveRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name.vb: RemoveRangeAsync(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.RemoveRangeAsync(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).RemoveRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.RemoveRangeAsync(IEnumerable<TEntity>)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).RemoveRangeAsync(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.BaseRepository`3.RemoveRangeAsync*
  name: RemoveRangeAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_RemoveRangeAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.RemoveRangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.RemoveRangeAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).RemoveRangeAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.RemoveRangeAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).RemoveRangeAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_SaveChangesAsync
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.SaveChangesAsync
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.SaveChangesAsync()
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).SaveChangesAsync()
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.SaveChangesAsync()
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).SaveChangesAsync()
- uid: Amiquin.Core.Abstraction.BaseRepository`3.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_SaveChangesAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.SaveChangesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.SaveChangesAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).SaveChangesAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.SaveChangesAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).SaveChangesAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.UpdateAsync(`1)
  name: UpdateAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_UpdateAsync__1_
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.UpdateAsync(`1)
  name.vb: UpdateAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.UpdateAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).UpdateAsync(TEntity)
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.UpdateAsync(TEntity?)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).UpdateAsync(TEntity)
- uid: Amiquin.Core.Abstraction.BaseRepository`3.UpdateAsync*
  name: UpdateAsync
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_UpdateAsync_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.UpdateAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.UpdateAsync
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).UpdateAsync
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.UpdateAsync
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).UpdateAsync
- uid: Amiquin.Core.Abstraction.BaseRepository`3.UpdateRange(System.Collections.Generic.IEnumerable{`1})
  name: UpdateRange(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_UpdateRange_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.BaseRepository`3.UpdateRange(System.Collections.Generic.IEnumerable{`1})
  name.vb: UpdateRange(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.UpdateRange(IEnumerable<TEntity>)
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).UpdateRange(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.BaseRepository`3.UpdateRange*
  name: UpdateRange
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3_UpdateRange_
  commentId: Overload:Amiquin.Core.Abstraction.BaseRepository`3.UpdateRange
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>.UpdateRange
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext).UpdateRange
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>.UpdateRange
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext).UpdateRange
- uid: Amiquin.Core.Abstraction.BaseRepository`3._context
  name: _context
  href: api/Amiquin.Core.Abstraction.BaseRepository-3.html#Amiquin_Core_Abstraction_BaseRepository_3__context
  commentId: F:Amiquin.Core.Abstraction.BaseRepository`3._context
  fullName: Amiquin.Core.Abstraction.BaseRepository<TKeyType, TEntity, TContext>._context
  fullName.vb: Amiquin.Core.Abstraction.BaseRepository(Of TKeyType, TEntity, TContext)._context
  nameWithType: BaseRepository<TKeyType, TEntity, TContext>._context
  nameWithType.vb: BaseRepository(Of TKeyType, TEntity, TContext)._context
- uid: Amiquin.Core.Abstraction.DbModel`1
  name: DbModel<TKey>
  href: api/Amiquin.Core.Abstraction.DbModel-1.html
  commentId: T:Amiquin.Core.Abstraction.DbModel`1
  name.vb: DbModel(Of TKey)
  fullName: Amiquin.Core.Abstraction.DbModel<TKey>
  fullName.vb: Amiquin.Core.Abstraction.DbModel(Of TKey)
  nameWithType: DbModel<TKey>
  nameWithType.vb: DbModel(Of TKey)
- uid: Amiquin.Core.Abstraction.DbModel`1.Id
  name: Id
  href: api/Amiquin.Core.Abstraction.DbModel-1.html#Amiquin_Core_Abstraction_DbModel_1_Id
  commentId: P:Amiquin.Core.Abstraction.DbModel`1.Id
  fullName: Amiquin.Core.Abstraction.DbModel<TKey>.Id
  fullName.vb: Amiquin.Core.Abstraction.DbModel(Of TKey).Id
  nameWithType: DbModel<TKey>.Id
  nameWithType.vb: DbModel(Of TKey).Id
- uid: Amiquin.Core.Abstraction.DbModel`1.Id*
  name: Id
  href: api/Amiquin.Core.Abstraction.DbModel-1.html#Amiquin_Core_Abstraction_DbModel_1_Id_
  commentId: Overload:Amiquin.Core.Abstraction.DbModel`1.Id
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.DbModel<TKey>.Id
  fullName.vb: Amiquin.Core.Abstraction.DbModel(Of TKey).Id
  nameWithType: DbModel<TKey>.Id
  nameWithType.vb: DbModel(Of TKey).Id
- uid: Amiquin.Core.Abstraction.IQueryableRepository`2
  name: IQueryableRepository<TKey, TEntity>
  href: api/Amiquin.Core.Abstraction.IQueryableRepository-2.html
  commentId: T:Amiquin.Core.Abstraction.IQueryableRepository`2
  name.vb: IQueryableRepository(Of TKey, TEntity)
  fullName: Amiquin.Core.Abstraction.IQueryableRepository<TKey, TEntity>
  fullName.vb: Amiquin.Core.Abstraction.IQueryableRepository(Of TKey, TEntity)
  nameWithType: IQueryableRepository<TKey, TEntity>
  nameWithType.vb: IQueryableRepository(Of TKey, TEntity)
- uid: Amiquin.Core.Abstraction.IQueryableRepository`2.AsQueryable
  name: AsQueryable()
  href: api/Amiquin.Core.Abstraction.IQueryableRepository-2.html#Amiquin_Core_Abstraction_IQueryableRepository_2_AsQueryable
  commentId: M:Amiquin.Core.Abstraction.IQueryableRepository`2.AsQueryable
  fullName: Amiquin.Core.Abstraction.IQueryableRepository<TKey, TEntity>.AsQueryable()
  fullName.vb: Amiquin.Core.Abstraction.IQueryableRepository(Of TKey, TEntity).AsQueryable()
  nameWithType: IQueryableRepository<TKey, TEntity>.AsQueryable()
  nameWithType.vb: IQueryableRepository(Of TKey, TEntity).AsQueryable()
- uid: Amiquin.Core.Abstraction.IQueryableRepository`2.AsQueryable*
  name: AsQueryable
  href: api/Amiquin.Core.Abstraction.IQueryableRepository-2.html#Amiquin_Core_Abstraction_IQueryableRepository_2_AsQueryable_
  commentId: Overload:Amiquin.Core.Abstraction.IQueryableRepository`2.AsQueryable
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IQueryableRepository<TKey, TEntity>.AsQueryable
  fullName.vb: Amiquin.Core.Abstraction.IQueryableRepository(Of TKey, TEntity).AsQueryable
  nameWithType: IQueryableRepository<TKey, TEntity>.AsQueryable
  nameWithType.vb: IQueryableRepository(Of TKey, TEntity).AsQueryable
- uid: Amiquin.Core.Abstraction.IRepository`2
  name: IRepository<Tkey, TEntity>
  href: api/Amiquin.Core.Abstraction.IRepository-2.html
  commentId: T:Amiquin.Core.Abstraction.IRepository`2
  name.vb: IRepository(Of Tkey, TEntity)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity)
  nameWithType: IRepository<Tkey, TEntity>
  nameWithType.vb: IRepository(Of Tkey, TEntity)
- uid: Amiquin.Core.Abstraction.IRepository`2.AddAsync(`1)
  name: AddAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_AddAsync__1_
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.AddAsync(`1)
  name.vb: AddAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.AddAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).AddAsync(TEntity)
  nameWithType: IRepository<Tkey, TEntity>.AddAsync(TEntity?)
  nameWithType.vb: IRepository(Of Tkey, TEntity).AddAsync(TEntity)
- uid: Amiquin.Core.Abstraction.IRepository`2.AddAsync*
  name: AddAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_AddAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.AddAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.AddAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).AddAsync
  nameWithType: IRepository<Tkey, TEntity>.AddAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).AddAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.AddRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name: AddRangeAsync(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_AddRangeAsync_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.AddRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name.vb: AddRangeAsync(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.AddRangeAsync(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).AddRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: IRepository<Tkey, TEntity>.AddRangeAsync(IEnumerable<TEntity>)
  nameWithType.vb: IRepository(Of Tkey, TEntity).AddRangeAsync(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.IRepository`2.AddRangeAsync*
  name: AddRangeAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_AddRangeAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.AddRangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.AddRangeAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).AddRangeAsync
  nameWithType: IRepository<Tkey, TEntity>.AddRangeAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).AddRangeAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.GetAsync(`0)
  name: GetAsync(Tkey)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_GetAsync__0_
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.GetAsync(`0)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.GetAsync(Tkey)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).GetAsync(Tkey)
  nameWithType: IRepository<Tkey, TEntity>.GetAsync(Tkey)
  nameWithType.vb: IRepository(Of Tkey, TEntity).GetAsync(Tkey)
- uid: Amiquin.Core.Abstraction.IRepository`2.GetAsync*
  name: GetAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_GetAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.GetAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.GetAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).GetAsync
  nameWithType: IRepository<Tkey, TEntity>.GetAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).GetAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.RemoveAsync(`0)
  name: RemoveAsync(Tkey)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_RemoveAsync__0_
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.RemoveAsync(`0)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.RemoveAsync(Tkey)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).RemoveAsync(Tkey)
  nameWithType: IRepository<Tkey, TEntity>.RemoveAsync(Tkey)
  nameWithType.vb: IRepository(Of Tkey, TEntity).RemoveAsync(Tkey)
- uid: Amiquin.Core.Abstraction.IRepository`2.RemoveAsync(`1)
  name: RemoveAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_RemoveAsync__1_
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.RemoveAsync(`1)
  name.vb: RemoveAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.RemoveAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).RemoveAsync(TEntity)
  nameWithType: IRepository<Tkey, TEntity>.RemoveAsync(TEntity?)
  nameWithType.vb: IRepository(Of Tkey, TEntity).RemoveAsync(TEntity)
- uid: Amiquin.Core.Abstraction.IRepository`2.RemoveAsync*
  name: RemoveAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_RemoveAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.RemoveAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.RemoveAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).RemoveAsync
  nameWithType: IRepository<Tkey, TEntity>.RemoveAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).RemoveAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.RemoveRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name: RemoveRangeAsync(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_RemoveRangeAsync_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.RemoveRangeAsync(System.Collections.Generic.IEnumerable{`1})
  name.vb: RemoveRangeAsync(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.RemoveRangeAsync(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).RemoveRangeAsync(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: IRepository<Tkey, TEntity>.RemoveRangeAsync(IEnumerable<TEntity>)
  nameWithType.vb: IRepository(Of Tkey, TEntity).RemoveRangeAsync(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.IRepository`2.RemoveRangeAsync*
  name: RemoveRangeAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_RemoveRangeAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.RemoveRangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.RemoveRangeAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).RemoveRangeAsync
  nameWithType: IRepository<Tkey, TEntity>.RemoveRangeAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).RemoveRangeAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_SaveChangesAsync
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.SaveChangesAsync
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.SaveChangesAsync()
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).SaveChangesAsync()
  nameWithType: IRepository<Tkey, TEntity>.SaveChangesAsync()
  nameWithType.vb: IRepository(Of Tkey, TEntity).SaveChangesAsync()
- uid: Amiquin.Core.Abstraction.IRepository`2.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_SaveChangesAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.SaveChangesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.SaveChangesAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).SaveChangesAsync
  nameWithType: IRepository<Tkey, TEntity>.SaveChangesAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).SaveChangesAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.UpdateAsync(`1)
  name: UpdateAsync(TEntity?)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_UpdateAsync__1_
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.UpdateAsync(`1)
  name.vb: UpdateAsync(TEntity)
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.UpdateAsync(TEntity?)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).UpdateAsync(TEntity)
  nameWithType: IRepository<Tkey, TEntity>.UpdateAsync(TEntity?)
  nameWithType.vb: IRepository(Of Tkey, TEntity).UpdateAsync(TEntity)
- uid: Amiquin.Core.Abstraction.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_UpdateAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.UpdateAsync
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).UpdateAsync
  nameWithType: IRepository<Tkey, TEntity>.UpdateAsync
  nameWithType.vb: IRepository(Of Tkey, TEntity).UpdateAsync
- uid: Amiquin.Core.Abstraction.IRepository`2.UpdateRange(System.Collections.Generic.IEnumerable{`1})
  name: UpdateRange(IEnumerable<TEntity>)
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_UpdateRange_System_Collections_Generic_IEnumerable__1__
  commentId: M:Amiquin.Core.Abstraction.IRepository`2.UpdateRange(System.Collections.Generic.IEnumerable{`1})
  name.vb: UpdateRange(IEnumerable(Of TEntity))
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.UpdateRange(System.Collections.Generic.IEnumerable<TEntity>)
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).UpdateRange(System.Collections.Generic.IEnumerable(Of TEntity))
  nameWithType: IRepository<Tkey, TEntity>.UpdateRange(IEnumerable<TEntity>)
  nameWithType.vb: IRepository(Of Tkey, TEntity).UpdateRange(IEnumerable(Of TEntity))
- uid: Amiquin.Core.Abstraction.IRepository`2.UpdateRange*
  name: UpdateRange
  href: api/Amiquin.Core.Abstraction.IRepository-2.html#Amiquin_Core_Abstraction_IRepository_2_UpdateRange_
  commentId: Overload:Amiquin.Core.Abstraction.IRepository`2.UpdateRange
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRepository<Tkey, TEntity>.UpdateRange
  fullName.vb: Amiquin.Core.Abstraction.IRepository(Of Tkey, TEntity).UpdateRange
  nameWithType: IRepository<Tkey, TEntity>.UpdateRange
  nameWithType.vb: IRepository(Of Tkey, TEntity).UpdateRange
- uid: Amiquin.Core.Abstraction.IRunnableJob
  name: IRunnableJob
  href: api/Amiquin.Core.Abstraction.IRunnableJob.html
  commentId: T:Amiquin.Core.Abstraction.IRunnableJob
  fullName: Amiquin.Core.Abstraction.IRunnableJob
  nameWithType: IRunnableJob
- uid: Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Abstraction.IRunnableJob.html#Amiquin_Core_Abstraction_IRunnableJob_FrequencyInSeconds
  commentId: P:Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds
  fullName: Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds
  nameWithType: IRunnableJob.FrequencyInSeconds
- uid: Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds*
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Abstraction.IRunnableJob.html#Amiquin_Core_Abstraction_IRunnableJob_FrequencyInSeconds_
  commentId: Overload:Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRunnableJob.FrequencyInSeconds
  nameWithType: IRunnableJob.FrequencyInSeconds
- uid: Amiquin.Core.Abstraction.IRunnableJob.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  name: RunAsync(IServiceScopeFactory, CancellationToken)
  href: api/Amiquin.Core.Abstraction.IRunnableJob.html#Amiquin_Core_Abstraction_IRunnableJob_RunAsync_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_System_Threading_CancellationToken_
  commentId: M:Amiquin.Core.Abstraction.IRunnableJob.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  fullName: Amiquin.Core.Abstraction.IRunnableJob.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, System.Threading.CancellationToken)
  nameWithType: IRunnableJob.RunAsync(IServiceScopeFactory, CancellationToken)
- uid: Amiquin.Core.Abstraction.IRunnableJob.RunAsync*
  name: RunAsync
  href: api/Amiquin.Core.Abstraction.IRunnableJob.html#Amiquin_Core_Abstraction_IRunnableJob_RunAsync_
  commentId: Overload:Amiquin.Core.Abstraction.IRunnableJob.RunAsync
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.IRunnableJob.RunAsync
  nameWithType: IRunnableJob.RunAsync
- uid: Amiquin.Core.Abstraction.QueryableBaseRepository`3
  name: QueryableBaseRepository<TKeyType, TEntity, TContext>
  href: api/Amiquin.Core.Abstraction.QueryableBaseRepository-3.html
  commentId: T:Amiquin.Core.Abstraction.QueryableBaseRepository`3
  name.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext)
  fullName: Amiquin.Core.Abstraction.QueryableBaseRepository<TKeyType, TEntity, TContext>
  fullName.vb: Amiquin.Core.Abstraction.QueryableBaseRepository(Of TKeyType, TEntity, TContext)
  nameWithType: QueryableBaseRepository<TKeyType, TEntity, TContext>
  nameWithType.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext)
- uid: Amiquin.Core.Abstraction.QueryableBaseRepository`3.#ctor(`2)
  name: QueryableBaseRepository(TContext)
  href: api/Amiquin.Core.Abstraction.QueryableBaseRepository-3.html#Amiquin_Core_Abstraction_QueryableBaseRepository_3__ctor__2_
  commentId: M:Amiquin.Core.Abstraction.QueryableBaseRepository`3.#ctor(`2)
  name.vb: New(TContext)
  fullName: Amiquin.Core.Abstraction.QueryableBaseRepository<TKeyType, TEntity, TContext>.QueryableBaseRepository(TContext)
  fullName.vb: Amiquin.Core.Abstraction.QueryableBaseRepository(Of TKeyType, TEntity, TContext).New(TContext)
  nameWithType: QueryableBaseRepository<TKeyType, TEntity, TContext>.QueryableBaseRepository(TContext)
  nameWithType.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext).New(TContext)
- uid: Amiquin.Core.Abstraction.QueryableBaseRepository`3.#ctor*
  name: QueryableBaseRepository
  href: api/Amiquin.Core.Abstraction.QueryableBaseRepository-3.html#Amiquin_Core_Abstraction_QueryableBaseRepository_3__ctor_
  commentId: Overload:Amiquin.Core.Abstraction.QueryableBaseRepository`3.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Abstraction.QueryableBaseRepository<TKeyType, TEntity, TContext>.QueryableBaseRepository
  fullName.vb: Amiquin.Core.Abstraction.QueryableBaseRepository(Of TKeyType, TEntity, TContext).New
  nameWithType: QueryableBaseRepository<TKeyType, TEntity, TContext>.QueryableBaseRepository
  nameWithType.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext).New
- uid: Amiquin.Core.Abstraction.QueryableBaseRepository`3.AsQueryable
  name: AsQueryable()
  href: api/Amiquin.Core.Abstraction.QueryableBaseRepository-3.html#Amiquin_Core_Abstraction_QueryableBaseRepository_3_AsQueryable
  commentId: M:Amiquin.Core.Abstraction.QueryableBaseRepository`3.AsQueryable
  fullName: Amiquin.Core.Abstraction.QueryableBaseRepository<TKeyType, TEntity, TContext>.AsQueryable()
  fullName.vb: Amiquin.Core.Abstraction.QueryableBaseRepository(Of TKeyType, TEntity, TContext).AsQueryable()
  nameWithType: QueryableBaseRepository<TKeyType, TEntity, TContext>.AsQueryable()
  nameWithType.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext).AsQueryable()
- uid: Amiquin.Core.Abstraction.QueryableBaseRepository`3.AsQueryable*
  name: AsQueryable
  href: api/Amiquin.Core.Abstraction.QueryableBaseRepository-3.html#Amiquin_Core_Abstraction_QueryableBaseRepository_3_AsQueryable_
  commentId: Overload:Amiquin.Core.Abstraction.QueryableBaseRepository`3.AsQueryable
  isSpec: "True"
  fullName: Amiquin.Core.Abstraction.QueryableBaseRepository<TKeyType, TEntity, TContext>.AsQueryable
  fullName.vb: Amiquin.Core.Abstraction.QueryableBaseRepository(Of TKeyType, TEntity, TContext).AsQueryable
  nameWithType: QueryableBaseRepository<TKeyType, TEntity, TContext>.AsQueryable
  nameWithType.vb: QueryableBaseRepository(Of TKeyType, TEntity, TContext).AsQueryable
- uid: Amiquin.Core.Attributes
  name: Amiquin.Core.Attributes
  href: api/Amiquin.Core.Attributes.html
  commentId: N:Amiquin.Core.Attributes
  fullName: Amiquin.Core.Attributes
  nameWithType: Amiquin.Core.Attributes
- uid: Amiquin.Core.Attributes.AnomifyAttribute
  name: AnomifyAttribute
  href: api/Amiquin.Core.Attributes.AnomifyAttribute.html
  commentId: T:Amiquin.Core.Attributes.AnomifyAttribute
  fullName: Amiquin.Core.Attributes.AnomifyAttribute
  nameWithType: AnomifyAttribute
- uid: Amiquin.Core.Attributes.EphemeralAttribute
  name: EphemeralAttribute
  href: api/Amiquin.Core.Attributes.EphemeralAttribute.html
  commentId: T:Amiquin.Core.Attributes.EphemeralAttribute
  fullName: Amiquin.Core.Attributes.EphemeralAttribute
  nameWithType: EphemeralAttribute
- uid: Amiquin.Core.Cleaner
  name: Amiquin.Core.Cleaner
  href: api/Amiquin.Core.Cleaner.html
  commentId: N:Amiquin.Core.Cleaner
  fullName: Amiquin.Core.Cleaner
  nameWithType: Amiquin.Core.Cleaner
- uid: Amiquin.Core.Cleaner.CleanerService
  name: CleanerService
  href: api/Amiquin.Core.Cleaner.CleanerService.html
  commentId: T:Amiquin.Core.Cleaner.CleanerService
  fullName: Amiquin.Core.Cleaner.CleanerService
  nameWithType: CleanerService
- uid: Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Cleaner.CleanerService.html#Amiquin_Core_Cleaner_CleanerService_FrequencyInSeconds
  commentId: P:Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds
  fullName: Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds
  nameWithType: CleanerService.FrequencyInSeconds
- uid: Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds*
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Cleaner.CleanerService.html#Amiquin_Core_Cleaner_CleanerService_FrequencyInSeconds_
  commentId: Overload:Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds
  isSpec: "True"
  fullName: Amiquin.Core.Cleaner.CleanerService.FrequencyInSeconds
  nameWithType: CleanerService.FrequencyInSeconds
- uid: Amiquin.Core.Cleaner.CleanerService.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  name: RunAsync(IServiceScopeFactory, CancellationToken)
  href: api/Amiquin.Core.Cleaner.CleanerService.html#Amiquin_Core_Cleaner_CleanerService_RunAsync_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_System_Threading_CancellationToken_
  commentId: M:Amiquin.Core.Cleaner.CleanerService.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  fullName: Amiquin.Core.Cleaner.CleanerService.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, System.Threading.CancellationToken)
  nameWithType: CleanerService.RunAsync(IServiceScopeFactory, CancellationToken)
- uid: Amiquin.Core.Cleaner.CleanerService.RunAsync*
  name: RunAsync
  href: api/Amiquin.Core.Cleaner.CleanerService.html#Amiquin_Core_Cleaner_CleanerService_RunAsync_
  commentId: Overload:Amiquin.Core.Cleaner.CleanerService.RunAsync
  isSpec: "True"
  fullName: Amiquin.Core.Cleaner.CleanerService.RunAsync
  nameWithType: CleanerService.RunAsync
- uid: Amiquin.Core.Cleaner.ICleanerService
  name: ICleanerService
  href: api/Amiquin.Core.Cleaner.ICleanerService.html
  commentId: T:Amiquin.Core.Cleaner.ICleanerService
  fullName: Amiquin.Core.Cleaner.ICleanerService
  nameWithType: ICleanerService
- uid: Amiquin.Core.Constants
  name: Constants
  href: api/Amiquin.Core.Constants.html
  commentId: T:Amiquin.Core.Constants
  fullName: Amiquin.Core.Constants
  nameWithType: Constants
- uid: Amiquin.Core.Constants.AI
  name: Constants.AI
  href: api/Amiquin.Core.Constants.AI.html
  commentId: T:Amiquin.Core.Constants.AI
  fullName: Amiquin.Core.Constants.AI
  nameWithType: Constants.AI
- uid: Amiquin.Core.Constants.AI.Gpt3Model
  name: Gpt3Model
  href: api/Amiquin.Core.Constants.AI.html#Amiquin_Core_Constants_AI_Gpt3Model
  commentId: F:Amiquin.Core.Constants.AI.Gpt3Model
  fullName: Amiquin.Core.Constants.AI.Gpt3Model
  nameWithType: Constants.AI.Gpt3Model
- uid: Amiquin.Core.Constants.AI.Gpt4Model
  name: Gpt4Model
  href: api/Amiquin.Core.Constants.AI.html#Amiquin_Core_Constants_AI_Gpt4Model
  commentId: F:Amiquin.Core.Constants.AI.Gpt4Model
  fullName: Amiquin.Core.Constants.AI.Gpt4Model
  nameWithType: Constants.AI.Gpt4Model
- uid: Amiquin.Core.Constants.AI.Gpt4oMiniModel
  name: Gpt4oMiniModel
  href: api/Amiquin.Core.Constants.AI.html#Amiquin_Core_Constants_AI_Gpt4oMiniModel
  commentId: F:Amiquin.Core.Constants.AI.Gpt4oMiniModel
  fullName: Amiquin.Core.Constants.AI.Gpt4oMiniModel
  nameWithType: Constants.AI.Gpt4oMiniModel
- uid: Amiquin.Core.Constants.AI.Gpt4oModel
  name: Gpt4oModel
  href: api/Amiquin.Core.Constants.AI.html#Amiquin_Core_Constants_AI_Gpt4oModel
  commentId: F:Amiquin.Core.Constants.AI.Gpt4oModel
  fullName: Amiquin.Core.Constants.AI.Gpt4oModel
  nameWithType: Constants.AI.Gpt4oModel
- uid: Amiquin.Core.Constants.APIs
  name: Constants.APIs
  href: api/Amiquin.Core.Constants.APIs.html
  commentId: T:Amiquin.Core.Constants.APIs
  fullName: Amiquin.Core.Constants.APIs
  nameWithType: Constants.APIs
- uid: Amiquin.Core.Constants.APIs.NewsApi
  name: Constants.APIs.NewsApi
  href: api/Amiquin.Core.Constants.APIs.NewsApi.html
  commentId: T:Amiquin.Core.Constants.APIs.NewsApi
  fullName: Amiquin.Core.Constants.APIs.NewsApi
  nameWithType: Constants.APIs.NewsApi
- uid: Amiquin.Core.Constants.APIs.NewsApi.Category
  name: Category
  href: api/Amiquin.Core.Constants.APIs.NewsApi.html#Amiquin_Core_Constants_APIs_NewsApi_Category
  commentId: F:Amiquin.Core.Constants.APIs.NewsApi.Category
  fullName: Amiquin.Core.Constants.APIs.NewsApi.Category
  nameWithType: Constants.APIs.NewsApi.Category
- uid: Amiquin.Core.Constants.APIs.NewsApi.IncludeCard
  name: IncludeCard
  href: api/Amiquin.Core.Constants.APIs.NewsApi.html#Amiquin_Core_Constants_APIs_NewsApi_IncludeCard
  commentId: F:Amiquin.Core.Constants.APIs.NewsApi.IncludeCard
  fullName: Amiquin.Core.Constants.APIs.NewsApi.IncludeCard
  nameWithType: Constants.APIs.NewsApi.IncludeCard
- uid: Amiquin.Core.Constants.APIs.NewsApi.MaxLimit
  name: MaxLimit
  href: api/Amiquin.Core.Constants.APIs.NewsApi.html#Amiquin_Core_Constants_APIs_NewsApi_MaxLimit
  commentId: F:Amiquin.Core.Constants.APIs.NewsApi.MaxLimit
  fullName: Amiquin.Core.Constants.APIs.NewsApi.MaxLimit
  nameWithType: Constants.APIs.NewsApi.MaxLimit
- uid: Amiquin.Core.Constants.CacheKeys
  name: Constants.CacheKeys
  href: api/Amiquin.Core.Constants.CacheKeys.html
  commentId: T:Amiquin.Core.Constants.CacheKeys
  fullName: Amiquin.Core.Constants.CacheKeys
  nameWithType: Constants.CacheKeys
- uid: Amiquin.Core.Constants.CacheKeys.ComputedPersonaMessageKey
  name: ComputedPersonaMessageKey
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_ComputedPersonaMessageKey
  commentId: F:Amiquin.Core.Constants.CacheKeys.ComputedPersonaMessageKey
  fullName: Amiquin.Core.Constants.CacheKeys.ComputedPersonaMessageKey
  nameWithType: Constants.CacheKeys.ComputedPersonaMessageKey
- uid: Amiquin.Core.Constants.CacheKeys.CorePersonaMessageKey
  name: CorePersonaMessageKey
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_CorePersonaMessageKey
  commentId: F:Amiquin.Core.Constants.CacheKeys.CorePersonaMessageKey
  fullName: Amiquin.Core.Constants.CacheKeys.CorePersonaMessageKey
  nameWithType: Constants.CacheKeys.CorePersonaMessageKey
- uid: Amiquin.Core.Constants.CacheKeys.GlobalToggles
  name: GlobalToggles
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_GlobalToggles
  commentId: F:Amiquin.Core.Constants.CacheKeys.GlobalToggles
  fullName: Amiquin.Core.Constants.CacheKeys.GlobalToggles
  nameWithType: Constants.CacheKeys.GlobalToggles
- uid: Amiquin.Core.Constants.CacheKeys.JoinMessageKey
  name: JoinMessageKey
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_JoinMessageKey
  commentId: F:Amiquin.Core.Constants.CacheKeys.JoinMessageKey
  fullName: Amiquin.Core.Constants.CacheKeys.JoinMessageKey
  nameWithType: Constants.CacheKeys.JoinMessageKey
- uid: Amiquin.Core.Constants.CacheKeys.ServerMeta
  name: ServerMeta
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_ServerMeta
  commentId: F:Amiquin.Core.Constants.CacheKeys.ServerMeta
  fullName: Amiquin.Core.Constants.CacheKeys.ServerMeta
  nameWithType: Constants.CacheKeys.ServerMeta
- uid: Amiquin.Core.Constants.CacheKeys.ServerToggles
  name: ServerToggles
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_ServerToggles
  commentId: F:Amiquin.Core.Constants.CacheKeys.ServerToggles
  fullName: Amiquin.Core.Constants.CacheKeys.ServerToggles
  nameWithType: Constants.CacheKeys.ServerToggles
- uid: Amiquin.Core.Constants.CacheKeys.ServerTogglesCreated
  name: ServerTogglesCreated
  href: api/Amiquin.Core.Constants.CacheKeys.html#Amiquin_Core_Constants_CacheKeys_ServerTogglesCreated
  commentId: F:Amiquin.Core.Constants.CacheKeys.ServerTogglesCreated
  fullName: Amiquin.Core.Constants.CacheKeys.ServerTogglesCreated
  nameWithType: Constants.CacheKeys.ServerTogglesCreated
- uid: Amiquin.Core.Constants.Emoji
  name: Constants.Emoji
  href: api/Amiquin.Core.Constants.Emoji.html
  commentId: T:Amiquin.Core.Constants.Emoji
  fullName: Amiquin.Core.Constants.Emoji
  nameWithType: Constants.Emoji
- uid: Amiquin.Core.Constants.Emoji.Amiquin
  name: Amiquin
  href: api/Amiquin.Core.Constants.Emoji.html#Amiquin_Core_Constants_Emoji_Amiquin
  commentId: F:Amiquin.Core.Constants.Emoji.Amiquin
  fullName: Amiquin.Core.Constants.Emoji.Amiquin
  nameWithType: Constants.Emoji.Amiquin
- uid: Amiquin.Core.Constants.Emoji.AmiquinR
  name: AmiquinR
  href: api/Amiquin.Core.Constants.Emoji.html#Amiquin_Core_Constants_Emoji_AmiquinR
  commentId: F:Amiquin.Core.Constants.Emoji.AmiquinR
  fullName: Amiquin.Core.Constants.Emoji.AmiquinR
  nameWithType: Constants.Emoji.AmiquinR
- uid: Amiquin.Core.Constants.Emoji.Blank
  name: Blank
  href: api/Amiquin.Core.Constants.Emoji.html#Amiquin_Core_Constants_Emoji_Blank
  commentId: F:Amiquin.Core.Constants.Emoji.Blank
  fullName: Amiquin.Core.Constants.Emoji.Blank
  nameWithType: Constants.Emoji.Blank
- uid: Amiquin.Core.Constants.Emoji.Nacho
  name: Nacho
  href: api/Amiquin.Core.Constants.Emoji.html#Amiquin_Core_Constants_Emoji_Nacho
  commentId: F:Amiquin.Core.Constants.Emoji.Nacho
  fullName: Amiquin.Core.Constants.Emoji.Nacho
  nameWithType: Constants.Emoji.Nacho
- uid: Amiquin.Core.Constants.Emoji.SlugParty
  name: SlugParty
  href: api/Amiquin.Core.Constants.Emoji.html#Amiquin_Core_Constants_Emoji_SlugParty
  commentId: F:Amiquin.Core.Constants.Emoji.SlugParty
  fullName: Amiquin.Core.Constants.Emoji.SlugParty
  nameWithType: Constants.Emoji.SlugParty
- uid: Amiquin.Core.Constants.Environment
  name: Constants.Environment
  href: api/Amiquin.Core.Constants.Environment.html
  commentId: T:Amiquin.Core.Constants.Environment
  fullName: Amiquin.Core.Constants.Environment
  nameWithType: Constants.Environment
- uid: Amiquin.Core.Constants.Environment.BotName
  name: BotName
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_BotName
  commentId: F:Amiquin.Core.Constants.Environment.BotName
  fullName: Amiquin.Core.Constants.Environment.BotName
  nameWithType: Constants.Environment.BotName
- uid: Amiquin.Core.Constants.Environment.BotToken
  name: BotToken
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_BotToken
  commentId: F:Amiquin.Core.Constants.Environment.BotToken
  fullName: Amiquin.Core.Constants.Environment.BotToken
  nameWithType: Constants.Environment.BotToken
- uid: Amiquin.Core.Constants.Environment.BotVersion
  name: BotVersion
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_BotVersion
  commentId: F:Amiquin.Core.Constants.Environment.BotVersion
  fullName: Amiquin.Core.Constants.Environment.BotVersion
  nameWithType: Constants.Environment.BotVersion
- uid: Amiquin.Core.Constants.Environment.DatabaseMode
  name: DatabaseMode
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DatabaseMode
  commentId: F:Amiquin.Core.Constants.Environment.DatabaseMode
  fullName: Amiquin.Core.Constants.Environment.DatabaseMode
  nameWithType: Constants.Environment.DatabaseMode
- uid: Amiquin.Core.Constants.Environment.DbConnectionString
  name: DbConnectionString
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DbConnectionString
  commentId: F:Amiquin.Core.Constants.Environment.DbConnectionString
  fullName: Amiquin.Core.Constants.Environment.DbConnectionString
  nameWithType: Constants.Environment.DbConnectionString
- uid: Amiquin.Core.Constants.Environment.DbName
  name: DbName
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DbName
  commentId: F:Amiquin.Core.Constants.Environment.DbName
  fullName: Amiquin.Core.Constants.Environment.DbName
  nameWithType: Constants.Environment.DbName
- uid: Amiquin.Core.Constants.Environment.DbRootPassword
  name: DbRootPassword
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DbRootPassword
  commentId: F:Amiquin.Core.Constants.Environment.DbRootPassword
  fullName: Amiquin.Core.Constants.Environment.DbRootPassword
  nameWithType: Constants.Environment.DbRootPassword
- uid: Amiquin.Core.Constants.Environment.DbUserName
  name: DbUserName
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DbUserName
  commentId: F:Amiquin.Core.Constants.Environment.DbUserName
  fullName: Amiquin.Core.Constants.Environment.DbUserName
  nameWithType: Constants.Environment.DbUserName
- uid: Amiquin.Core.Constants.Environment.DbUserPassword
  name: DbUserPassword
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_DbUserPassword
  commentId: F:Amiquin.Core.Constants.Environment.DbUserPassword
  fullName: Amiquin.Core.Constants.Environment.DbUserPassword
  nameWithType: Constants.Environment.DbUserPassword
- uid: Amiquin.Core.Constants.Environment.LogsPath
  name: LogsPath
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_LogsPath
  commentId: F:Amiquin.Core.Constants.Environment.LogsPath
  fullName: Amiquin.Core.Constants.Environment.LogsPath
  nameWithType: Constants.Environment.LogsPath
- uid: Amiquin.Core.Constants.Environment.MessageFetchCount
  name: MessageFetchCount
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_MessageFetchCount
  commentId: F:Amiquin.Core.Constants.Environment.MessageFetchCount
  fullName: Amiquin.Core.Constants.Environment.MessageFetchCount
  nameWithType: Constants.Environment.MessageFetchCount
- uid: Amiquin.Core.Constants.Environment.OpenAiKey
  name: OpenAiKey
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_OpenAiKey
  commentId: F:Amiquin.Core.Constants.Environment.OpenAiKey
  fullName: Amiquin.Core.Constants.Environment.OpenAiKey
  nameWithType: Constants.Environment.OpenAiKey
- uid: Amiquin.Core.Constants.Environment.PiperCommand
  name: PiperCommand
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_PiperCommand
  commentId: F:Amiquin.Core.Constants.Environment.PiperCommand
  fullName: Amiquin.Core.Constants.Environment.PiperCommand
  nameWithType: Constants.Environment.PiperCommand
- uid: Amiquin.Core.Constants.Environment.PrintLogo
  name: PrintLogo
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_PrintLogo
  commentId: F:Amiquin.Core.Constants.Environment.PrintLogo
  fullName: Amiquin.Core.Constants.Environment.PrintLogo
  nameWithType: Constants.Environment.PrintLogo
- uid: Amiquin.Core.Constants.Environment.SQLitePath
  name: SQLitePath
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_SQLitePath
  commentId: F:Amiquin.Core.Constants.Environment.SQLitePath
  fullName: Amiquin.Core.Constants.Environment.SQLitePath
  nameWithType: Constants.Environment.SQLitePath
- uid: Amiquin.Core.Constants.Environment.TTSModelName
  name: TTSModelName
  href: api/Amiquin.Core.Constants.Environment.html#Amiquin_Core_Constants_Environment_TTSModelName
  commentId: F:Amiquin.Core.Constants.Environment.TTSModelName
  fullName: Amiquin.Core.Constants.Environment.TTSModelName
  nameWithType: Constants.Environment.TTSModelName
- uid: Amiquin.Core.Constants.Paths
  name: Constants.Paths
  href: api/Amiquin.Core.Constants.Paths.html
  commentId: T:Amiquin.Core.Constants.Paths
  fullName: Amiquin.Core.Constants.Paths
  nameWithType: Constants.Paths
- uid: Amiquin.Core.Constants.Paths.Assets
  name: Assets
  href: api/Amiquin.Core.Constants.Paths.html#Amiquin_Core_Constants_Paths_Assets
  commentId: F:Amiquin.Core.Constants.Paths.Assets
  fullName: Amiquin.Core.Constants.Paths.Assets
  nameWithType: Constants.Paths.Assets
- uid: Amiquin.Core.Constants.Paths.TTSBaseOutputPath
  name: TTSBaseOutputPath
  href: api/Amiquin.Core.Constants.Paths.html#Amiquin_Core_Constants_Paths_TTSBaseOutputPath
  commentId: F:Amiquin.Core.Constants.Paths.TTSBaseOutputPath
  fullName: Amiquin.Core.Constants.Paths.TTSBaseOutputPath
  nameWithType: Constants.Paths.TTSBaseOutputPath
- uid: Amiquin.Core.Constants.Paths.TTSBasePath
  name: TTSBasePath
  href: api/Amiquin.Core.Constants.Paths.html#Amiquin_Core_Constants_Paths_TTSBasePath
  commentId: F:Amiquin.Core.Constants.Paths.TTSBasePath
  fullName: Amiquin.Core.Constants.Paths.TTSBasePath
  nameWithType: Constants.Paths.TTSBasePath
- uid: Amiquin.Core.Constants.PersonaKeywordsCache
  name: Constants.PersonaKeywordsCache
  href: api/Amiquin.Core.Constants.PersonaKeywordsCache.html
  commentId: T:Amiquin.Core.Constants.PersonaKeywordsCache
  fullName: Amiquin.Core.Constants.PersonaKeywordsCache
  nameWithType: Constants.PersonaKeywordsCache
- uid: Amiquin.Core.Constants.PersonaKeywordsCache.Mood
  name: Mood
  href: api/Amiquin.Core.Constants.PersonaKeywordsCache.html#Amiquin_Core_Constants_PersonaKeywordsCache_Mood
  commentId: F:Amiquin.Core.Constants.PersonaKeywordsCache.Mood
  fullName: Amiquin.Core.Constants.PersonaKeywordsCache.Mood
  nameWithType: Constants.PersonaKeywordsCache.Mood
- uid: Amiquin.Core.Constants.PersonaKeywordsCache.Name
  name: Name
  href: api/Amiquin.Core.Constants.PersonaKeywordsCache.html#Amiquin_Core_Constants_PersonaKeywordsCache_Name
  commentId: F:Amiquin.Core.Constants.PersonaKeywordsCache.Name
  fullName: Amiquin.Core.Constants.PersonaKeywordsCache.Name
  nameWithType: Constants.PersonaKeywordsCache.Name
- uid: Amiquin.Core.Constants.PersonaKeywordsCache.Version
  name: Version
  href: api/Amiquin.Core.Constants.PersonaKeywordsCache.html#Amiquin_Core_Constants_PersonaKeywordsCache_Version
  commentId: F:Amiquin.Core.Constants.PersonaKeywordsCache.Version
  fullName: Amiquin.Core.Constants.PersonaKeywordsCache.Version
  nameWithType: Constants.PersonaKeywordsCache.Version
- uid: Amiquin.Core.Constants.ToggleNames
  name: Constants.ToggleNames
  href: api/Amiquin.Core.Constants.ToggleNames.html
  commentId: T:Amiquin.Core.Constants.ToggleNames
  fullName: Amiquin.Core.Constants.ToggleNames
  nameWithType: Constants.ToggleNames
- uid: Amiquin.Core.Constants.ToggleNames.EnableChat
  name: EnableChat
  href: api/Amiquin.Core.Constants.ToggleNames.html#Amiquin_Core_Constants_ToggleNames_EnableChat
  commentId: F:Amiquin.Core.Constants.ToggleNames.EnableChat
  fullName: Amiquin.Core.Constants.ToggleNames.EnableChat
  nameWithType: Constants.ToggleNames.EnableChat
- uid: Amiquin.Core.Constants.ToggleNames.EnableJoinMessage
  name: EnableJoinMessage
  href: api/Amiquin.Core.Constants.ToggleNames.html#Amiquin_Core_Constants_ToggleNames_EnableJoinMessage
  commentId: F:Amiquin.Core.Constants.ToggleNames.EnableJoinMessage
  fullName: Amiquin.Core.Constants.ToggleNames.EnableJoinMessage
  nameWithType: Constants.ToggleNames.EnableJoinMessage
- uid: Amiquin.Core.Constants.ToggleNames.EnableTTS
  name: EnableTTS
  href: api/Amiquin.Core.Constants.ToggleNames.html#Amiquin_Core_Constants_ToggleNames_EnableTTS
  commentId: F:Amiquin.Core.Constants.ToggleNames.EnableTTS
  fullName: Amiquin.Core.Constants.ToggleNames.EnableTTS
  nameWithType: Constants.ToggleNames.EnableTTS
- uid: Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles
  name: Constants.ToggleNames.SystemExclusiveToggles
  href: api/Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles.html
  commentId: T:Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles
  fullName: Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles
  nameWithType: Constants.ToggleNames.SystemExclusiveToggles
- uid: Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles.EnableNews
  name: EnableNews
  href: api/Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles.html#Amiquin_Core_Constants_ToggleNames_SystemExclusiveToggles_EnableNews
  commentId: F:Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles.EnableNews
  fullName: Amiquin.Core.Constants.ToggleNames.SystemExclusiveToggles.EnableNews
  nameWithType: Constants.ToggleNames.SystemExclusiveToggles.EnableNews
- uid: Amiquin.Core.Constants.ToggleNames.SystemExlusiveToggles
  name: SystemExlusiveToggles
  href: api/Amiquin.Core.Constants.ToggleNames.html#Amiquin_Core_Constants_ToggleNames_SystemExlusiveToggles
  commentId: F:Amiquin.Core.Constants.ToggleNames.SystemExlusiveToggles
  fullName: Amiquin.Core.Constants.ToggleNames.SystemExlusiveToggles
  nameWithType: Constants.ToggleNames.SystemExlusiveToggles
- uid: Amiquin.Core.Constants.ToggleNames.Toggles
  name: Toggles
  href: api/Amiquin.Core.Constants.ToggleNames.html#Amiquin_Core_Constants_ToggleNames_Toggles
  commentId: F:Amiquin.Core.Constants.ToggleNames.Toggles
  fullName: Amiquin.Core.Constants.ToggleNames.Toggles
  nameWithType: Constants.ToggleNames.Toggles
- uid: Amiquin.Core.DiscordExtensions
  name: Amiquin.Core.DiscordExtensions
  href: api/Amiquin.Core.DiscordExtensions.html
  commentId: N:Amiquin.Core.DiscordExtensions
  fullName: Amiquin.Core.DiscordExtensions
  nameWithType: Amiquin.Core.DiscordExtensions
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext
  name: ExtendedShardedInteractionContext
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html
  commentId: T:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext
  nameWithType: ExtendedShardedInteractionContext
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.#ctor(Discord.WebSocket.DiscordShardedClient,Discord.WebSocket.SocketInteraction,Microsoft.Extensions.DependencyInjection.AsyncServiceScope)
  name: ExtendedShardedInteractionContext(DiscordShardedClient, SocketInteraction, AsyncServiceScope)
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext__ctor_Discord_WebSocket_DiscordShardedClient_Discord_WebSocket_SocketInteraction_Microsoft_Extensions_DependencyInjection_AsyncServiceScope_
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.#ctor(Discord.WebSocket.DiscordShardedClient,Discord.WebSocket.SocketInteraction,Microsoft.Extensions.DependencyInjection.AsyncServiceScope)
  name.vb: New(DiscordShardedClient, SocketInteraction, AsyncServiceScope)
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.ExtendedShardedInteractionContext(Discord.WebSocket.DiscordShardedClient, Discord.WebSocket.SocketInteraction, Microsoft.Extensions.DependencyInjection.AsyncServiceScope)
  fullName.vb: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.New(Discord.WebSocket.DiscordShardedClient, Discord.WebSocket.SocketInteraction, Microsoft.Extensions.DependencyInjection.AsyncServiceScope)
  nameWithType: ExtendedShardedInteractionContext.ExtendedShardedInteractionContext(DiscordShardedClient, SocketInteraction, AsyncServiceScope)
  nameWithType.vb: ExtendedShardedInteractionContext.New(DiscordShardedClient, SocketInteraction, AsyncServiceScope)
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.#ctor*
  name: ExtendedShardedInteractionContext
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext__ctor_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.ExtendedShardedInteractionContext
  fullName.vb: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.New
  nameWithType: ExtendedShardedInteractionContext.ExtendedShardedInteractionContext
  nameWithType.vb: ExtendedShardedInteractionContext.New
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope
  name: AsyncScope
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_AsyncScope
  commentId: P:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope
  nameWithType: ExtendedShardedInteractionContext.AsyncScope
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope*
  name: AsyncScope
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_AsyncScope_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope
  isSpec: "True"
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.AsyncScope
  nameWithType: ExtendedShardedInteractionContext.AsyncScope
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose
  name: Dispose()
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Dispose
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose()
  nameWithType: ExtendedShardedInteractionContext.Dispose()
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Dispose_System_Boolean_
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose(bool)
  fullName.vb: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose(Boolean)
  nameWithType: ExtendedShardedInteractionContext.Dispose(bool)
  nameWithType.vb: ExtendedShardedInteractionContext.Dispose(Boolean)
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose*
  name: Dispose
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Dispose_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose
  isSpec: "True"
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Dispose
  nameWithType: ExtendedShardedInteractionContext.Dispose
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync
  name: DisposeAsync()
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_DisposeAsync
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync()
  nameWithType: ExtendedShardedInteractionContext.DisposeAsync()
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync*
  name: DisposeAsync
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_DisposeAsync_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync
  isSpec: "True"
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsync
  nameWithType: ExtendedShardedInteractionContext.DisposeAsync
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore
  name: DisposeAsyncCore()
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_DisposeAsyncCore
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore()
  nameWithType: ExtendedShardedInteractionContext.DisposeAsyncCore()
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore*
  name: DisposeAsyncCore
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_DisposeAsyncCore_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore
  isSpec: "True"
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.DisposeAsyncCore
  nameWithType: ExtendedShardedInteractionContext.DisposeAsyncCore
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Finalize
  name: ~ExtendedShardedInteractionContext()
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Finalize
  commentId: M:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Finalize
  name.vb: ''
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.~ExtendedShardedInteractionContext()
  fullName.vb: ''
  nameWithType: ExtendedShardedInteractionContext.~ExtendedShardedInteractionContext()
  nameWithType.vb: ''
- uid: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Finalize*
  name: ~ExtendedShardedInteractionContext
  href: api/Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.html#Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Finalize_
  commentId: Overload:Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.Finalize
  isSpec: "True"
  fullName: Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext.~ExtendedShardedInteractionContext
  nameWithType: ExtendedShardedInteractionContext.~ExtendedShardedInteractionContext
- uid: Amiquin.Core.Exceptions
  name: Amiquin.Core.Exceptions
  href: api/Amiquin.Core.Exceptions.html
  commentId: N:Amiquin.Core.Exceptions
  fullName: Amiquin.Core.Exceptions
  nameWithType: Amiquin.Core.Exceptions
- uid: Amiquin.Core.Exceptions.DatabaseNotImplementedException
  name: DatabaseNotImplementedException
  href: api/Amiquin.Core.Exceptions.DatabaseNotImplementedException.html
  commentId: T:Amiquin.Core.Exceptions.DatabaseNotImplementedException
  fullName: Amiquin.Core.Exceptions.DatabaseNotImplementedException
  nameWithType: DatabaseNotImplementedException
- uid: Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor
  name: DatabaseNotImplementedException()
  href: api/Amiquin.Core.Exceptions.DatabaseNotImplementedException.html#Amiquin_Core_Exceptions_DatabaseNotImplementedException__ctor
  commentId: M:Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor
  name.vb: New()
  fullName: Amiquin.Core.Exceptions.DatabaseNotImplementedException.DatabaseNotImplementedException()
  fullName.vb: Amiquin.Core.Exceptions.DatabaseNotImplementedException.New()
  nameWithType: DatabaseNotImplementedException.DatabaseNotImplementedException()
  nameWithType.vb: DatabaseNotImplementedException.New()
- uid: Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor(System.String)
  name: DatabaseNotImplementedException(string)
  href: api/Amiquin.Core.Exceptions.DatabaseNotImplementedException.html#Amiquin_Core_Exceptions_DatabaseNotImplementedException__ctor_System_String_
  commentId: M:Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor(System.String)
  name.vb: New(String)
  fullName: Amiquin.Core.Exceptions.DatabaseNotImplementedException.DatabaseNotImplementedException(string)
  fullName.vb: Amiquin.Core.Exceptions.DatabaseNotImplementedException.New(String)
  nameWithType: DatabaseNotImplementedException.DatabaseNotImplementedException(string)
  nameWithType.vb: DatabaseNotImplementedException.New(String)
- uid: Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor(System.String,System.Exception)
  name: DatabaseNotImplementedException(string, Exception)
  href: api/Amiquin.Core.Exceptions.DatabaseNotImplementedException.html#Amiquin_Core_Exceptions_DatabaseNotImplementedException__ctor_System_String_System_Exception_
  commentId: M:Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Amiquin.Core.Exceptions.DatabaseNotImplementedException.DatabaseNotImplementedException(string, System.Exception)
  fullName.vb: Amiquin.Core.Exceptions.DatabaseNotImplementedException.New(String, System.Exception)
  nameWithType: DatabaseNotImplementedException.DatabaseNotImplementedException(string, Exception)
  nameWithType.vb: DatabaseNotImplementedException.New(String, Exception)
- uid: Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor*
  name: DatabaseNotImplementedException
  href: api/Amiquin.Core.Exceptions.DatabaseNotImplementedException.html#Amiquin_Core_Exceptions_DatabaseNotImplementedException__ctor_
  commentId: Overload:Amiquin.Core.Exceptions.DatabaseNotImplementedException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Exceptions.DatabaseNotImplementedException.DatabaseNotImplementedException
  fullName.vb: Amiquin.Core.Exceptions.DatabaseNotImplementedException.New
  nameWithType: DatabaseNotImplementedException.DatabaseNotImplementedException
  nameWithType.vb: DatabaseNotImplementedException.New
- uid: Amiquin.Core.IRepositories
  name: Amiquin.Core.IRepositories
  href: api/Amiquin.Core.IRepositories.html
  commentId: N:Amiquin.Core.IRepositories
  fullName: Amiquin.Core.IRepositories
  nameWithType: Amiquin.Core.IRepositories
- uid: Amiquin.Core.IRepositories.IBotStatisticsRepository
  name: IBotStatisticsRepository
  href: api/Amiquin.Core.IRepositories.IBotStatisticsRepository.html
  commentId: T:Amiquin.Core.IRepositories.IBotStatisticsRepository
  fullName: Amiquin.Core.IRepositories.IBotStatisticsRepository
  nameWithType: IBotStatisticsRepository
- uid: Amiquin.Core.IRepositories.ICommandLogRepository
  name: ICommandLogRepository
  href: api/Amiquin.Core.IRepositories.ICommandLogRepository.html
  commentId: T:Amiquin.Core.IRepositories.ICommandLogRepository
  fullName: Amiquin.Core.IRepositories.ICommandLogRepository
  nameWithType: ICommandLogRepository
- uid: Amiquin.Core.IRepositories.IMessageRepository
  name: IMessageRepository
  href: api/Amiquin.Core.IRepositories.IMessageRepository.html
  commentId: T:Amiquin.Core.IRepositories.IMessageRepository
  fullName: Amiquin.Core.IRepositories.IMessageRepository
  nameWithType: IMessageRepository
- uid: Amiquin.Core.IRepositories.INachoRepository
  name: INachoRepository
  href: api/Amiquin.Core.IRepositories.INachoRepository.html
  commentId: T:Amiquin.Core.IRepositories.INachoRepository
  fullName: Amiquin.Core.IRepositories.INachoRepository
  nameWithType: INachoRepository
- uid: Amiquin.Core.IRepositories.IServerMetaRepository
  name: IServerMetaRepository
  href: api/Amiquin.Core.IRepositories.IServerMetaRepository.html
  commentId: T:Amiquin.Core.IRepositories.IServerMetaRepository
  fullName: Amiquin.Core.IRepositories.IServerMetaRepository
  nameWithType: IServerMetaRepository
- uid: Amiquin.Core.IRepositories.IToggleRepository
  name: IToggleRepository
  href: api/Amiquin.Core.IRepositories.IToggleRepository.html
  commentId: T:Amiquin.Core.IRepositories.IToggleRepository
  fullName: Amiquin.Core.IRepositories.IToggleRepository
  nameWithType: IToggleRepository
- uid: Amiquin.Core.Job
  name: Amiquin.Core.Job
  href: api/Amiquin.Core.Job.html
  commentId: N:Amiquin.Core.Job
  fullName: Amiquin.Core.Job
  nameWithType: Amiquin.Core.Job
- uid: Amiquin.Core.Job.IJobService
  name: IJobService
  href: api/Amiquin.Core.Job.IJobService.html
  commentId: T:Amiquin.Core.Job.IJobService
  fullName: Amiquin.Core.Job.IJobService
  nameWithType: IJobService
- uid: Amiquin.Core.Job.IJobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  name: CreateDynamicJob(AmiquinJob)
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_CreateDynamicJob_Amiquin_Core_Job_Models_AmiquinJob_
  commentId: M:Amiquin.Core.Job.IJobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  fullName: Amiquin.Core.Job.IJobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  nameWithType: IJobService.CreateDynamicJob(AmiquinJob)
- uid: Amiquin.Core.Job.IJobService.CreateDynamicJob*
  name: CreateDynamicJob
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_CreateDynamicJob_
  commentId: Overload:Amiquin.Core.Job.IJobService.CreateDynamicJob
  isSpec: "True"
  fullName: Amiquin.Core.Job.IJobService.CreateDynamicJob
  nameWithType: IJobService.CreateDynamicJob
- uid: Amiquin.Core.Job.IJobService.DisposeAsync
  name: DisposeAsync()
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_DisposeAsync
  commentId: M:Amiquin.Core.Job.IJobService.DisposeAsync
  fullName: Amiquin.Core.Job.IJobService.DisposeAsync()
  nameWithType: IJobService.DisposeAsync()
- uid: Amiquin.Core.Job.IJobService.DisposeAsync*
  name: DisposeAsync
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_DisposeAsync_
  commentId: Overload:Amiquin.Core.Job.IJobService.DisposeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Job.IJobService.DisposeAsync
  nameWithType: IJobService.DisposeAsync
- uid: Amiquin.Core.Job.IJobService.StartRunnableJobs
  name: StartRunnableJobs()
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_StartRunnableJobs
  commentId: M:Amiquin.Core.Job.IJobService.StartRunnableJobs
  fullName: Amiquin.Core.Job.IJobService.StartRunnableJobs()
  nameWithType: IJobService.StartRunnableJobs()
- uid: Amiquin.Core.Job.IJobService.StartRunnableJobs*
  name: StartRunnableJobs
  href: api/Amiquin.Core.Job.IJobService.html#Amiquin_Core_Job_IJobService_StartRunnableJobs_
  commentId: Overload:Amiquin.Core.Job.IJobService.StartRunnableJobs
  isSpec: "True"
  fullName: Amiquin.Core.Job.IJobService.StartRunnableJobs
  nameWithType: IJobService.StartRunnableJobs
- uid: Amiquin.Core.Job.JobService
  name: JobService
  href: api/Amiquin.Core.Job.JobService.html
  commentId: T:Amiquin.Core.Job.JobService
  fullName: Amiquin.Core.Job.JobService
  nameWithType: JobService
- uid: Amiquin.Core.Job.JobService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Job.JobService},Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  name: JobService(ILogger<JobService>, IServiceScopeFactory)
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Job_JobService__Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_
  commentId: M:Amiquin.Core.Job.JobService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Job.JobService},Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  name.vb: New(ILogger(Of JobService), IServiceScopeFactory)
  fullName: Amiquin.Core.Job.JobService.JobService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Job.JobService>, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  fullName.vb: Amiquin.Core.Job.JobService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Job.JobService), Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  nameWithType: JobService.JobService(ILogger<JobService>, IServiceScopeFactory)
  nameWithType.vb: JobService.New(ILogger(Of JobService), IServiceScopeFactory)
- uid: Amiquin.Core.Job.JobService.#ctor*
  name: JobService
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService__ctor_
  commentId: Overload:Amiquin.Core.Job.JobService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Job.JobService.JobService
  fullName.vb: Amiquin.Core.Job.JobService.New
  nameWithType: JobService.JobService
  nameWithType.vb: JobService.New
- uid: Amiquin.Core.Job.JobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  name: CreateDynamicJob(AmiquinJob)
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_CreateDynamicJob_Amiquin_Core_Job_Models_AmiquinJob_
  commentId: M:Amiquin.Core.Job.JobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  fullName: Amiquin.Core.Job.JobService.CreateDynamicJob(Amiquin.Core.Job.Models.AmiquinJob)
  nameWithType: JobService.CreateDynamicJob(AmiquinJob)
- uid: Amiquin.Core.Job.JobService.CreateDynamicJob*
  name: CreateDynamicJob
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_CreateDynamicJob_
  commentId: Overload:Amiquin.Core.Job.JobService.CreateDynamicJob
  isSpec: "True"
  fullName: Amiquin.Core.Job.JobService.CreateDynamicJob
  nameWithType: JobService.CreateDynamicJob
- uid: Amiquin.Core.Job.JobService.DisposeAsync
  name: DisposeAsync()
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_DisposeAsync
  commentId: M:Amiquin.Core.Job.JobService.DisposeAsync
  fullName: Amiquin.Core.Job.JobService.DisposeAsync()
  nameWithType: JobService.DisposeAsync()
- uid: Amiquin.Core.Job.JobService.DisposeAsync*
  name: DisposeAsync
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_DisposeAsync_
  commentId: Overload:Amiquin.Core.Job.JobService.DisposeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Job.JobService.DisposeAsync
  nameWithType: JobService.DisposeAsync
- uid: Amiquin.Core.Job.JobService.StartRunnableJobs
  name: StartRunnableJobs()
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_StartRunnableJobs
  commentId: M:Amiquin.Core.Job.JobService.StartRunnableJobs
  fullName: Amiquin.Core.Job.JobService.StartRunnableJobs()
  nameWithType: JobService.StartRunnableJobs()
- uid: Amiquin.Core.Job.JobService.StartRunnableJobs*
  name: StartRunnableJobs
  href: api/Amiquin.Core.Job.JobService.html#Amiquin_Core_Job_JobService_StartRunnableJobs_
  commentId: Overload:Amiquin.Core.Job.JobService.StartRunnableJobs
  isSpec: "True"
  fullName: Amiquin.Core.Job.JobService.StartRunnableJobs
  nameWithType: JobService.StartRunnableJobs
- uid: Amiquin.Core.Job.Models
  name: Amiquin.Core.Job.Models
  href: api/Amiquin.Core.Job.Models.html
  commentId: N:Amiquin.Core.Job.Models
  fullName: Amiquin.Core.Job.Models
  nameWithType: Amiquin.Core.Job.Models
- uid: Amiquin.Core.Job.Models.AmiquinJob
  name: AmiquinJob
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html
  commentId: T:Amiquin.Core.Job.Models.AmiquinJob
  fullName: Amiquin.Core.Job.Models.AmiquinJob
  nameWithType: AmiquinJob
- uid: Amiquin.Core.Job.Models.AmiquinJob.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_CreatedAt
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.CreatedAt
  fullName: Amiquin.Core.Job.Models.AmiquinJob.CreatedAt
  nameWithType: AmiquinJob.CreatedAt
- uid: Amiquin.Core.Job.Models.AmiquinJob.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_CreatedAt_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.CreatedAt
  nameWithType: AmiquinJob.CreatedAt
- uid: Amiquin.Core.Job.Models.AmiquinJob.Description
  name: Description
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Description
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.Description
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Description
  nameWithType: AmiquinJob.Description
- uid: Amiquin.Core.Job.Models.AmiquinJob.Description*
  name: Description
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Description_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.Description
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Description
  nameWithType: AmiquinJob.Description
- uid: Amiquin.Core.Job.Models.AmiquinJob.GuildId
  name: GuildId
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_GuildId
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.GuildId
  fullName: Amiquin.Core.Job.Models.AmiquinJob.GuildId
  nameWithType: AmiquinJob.GuildId
- uid: Amiquin.Core.Job.Models.AmiquinJob.GuildId*
  name: GuildId
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_GuildId_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.GuildId
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.GuildId
  nameWithType: AmiquinJob.GuildId
- uid: Amiquin.Core.Job.Models.AmiquinJob.Id
  name: Id
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Id
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.Id
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Id
  nameWithType: AmiquinJob.Id
- uid: Amiquin.Core.Job.Models.AmiquinJob.Id*
  name: Id
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Id_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.Id
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Id
  nameWithType: AmiquinJob.Id
- uid: Amiquin.Core.Job.Models.AmiquinJob.Interval
  name: Interval
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Interval
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.Interval
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Interval
  nameWithType: AmiquinJob.Interval
- uid: Amiquin.Core.Job.Models.AmiquinJob.Interval*
  name: Interval
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Interval_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.Interval
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Interval
  nameWithType: AmiquinJob.Interval
- uid: Amiquin.Core.Job.Models.AmiquinJob.Name
  name: Name
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Name
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.Name
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Name
  nameWithType: AmiquinJob.Name
- uid: Amiquin.Core.Job.Models.AmiquinJob.Name*
  name: Name
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Name_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.Name
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Name
  nameWithType: AmiquinJob.Name
- uid: Amiquin.Core.Job.Models.AmiquinJob.Task
  name: Task
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Task
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.Task
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Task
  nameWithType: AmiquinJob.Task
- uid: Amiquin.Core.Job.Models.AmiquinJob.Task*
  name: Task
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_Task_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.Task
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.Task
  nameWithType: AmiquinJob.Task
- uid: Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt
  name: UpdatedAt
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_UpdatedAt
  commentId: P:Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt
  fullName: Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt
  nameWithType: AmiquinJob.UpdatedAt
- uid: Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt*
  name: UpdatedAt
  href: api/Amiquin.Core.Job.Models.AmiquinJob.html#Amiquin_Core_Job_Models_AmiquinJob_UpdatedAt_
  commentId: Overload:Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Job.Models.AmiquinJob.UpdatedAt
  nameWithType: AmiquinJob.UpdatedAt
- uid: Amiquin.Core.Models
  name: Amiquin.Core.Models
  href: api/Amiquin.Core.Models.html
  commentId: N:Amiquin.Core.Models
  fullName: Amiquin.Core.Models
  nameWithType: Amiquin.Core.Models
- uid: Amiquin.Core.Models.BotStatistics
  name: BotStatistics
  href: api/Amiquin.Core.Models.BotStatistics.html
  commentId: T:Amiquin.Core.Models.BotStatistics
  fullName: Amiquin.Core.Models.BotStatistics
  nameWithType: BotStatistics
- uid: Amiquin.Core.Models.BotStatistics.AvailableMemoryMB
  name: AvailableMemoryMB
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_AvailableMemoryMB
  commentId: P:Amiquin.Core.Models.BotStatistics.AvailableMemoryMB
  fullName: Amiquin.Core.Models.BotStatistics.AvailableMemoryMB
  nameWithType: BotStatistics.AvailableMemoryMB
- uid: Amiquin.Core.Models.BotStatistics.AvailableMemoryMB*
  name: AvailableMemoryMB
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_AvailableMemoryMB_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.AvailableMemoryMB
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.AvailableMemoryMB
  nameWithType: BotStatistics.AvailableMemoryMB
- uid: Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs
  name: AverageCommandExecutionTimeInMs
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_AverageCommandExecutionTimeInMs
  commentId: P:Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs
  fullName: Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs
  nameWithType: BotStatistics.AverageCommandExecutionTimeInMs
- uid: Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs*
  name: AverageCommandExecutionTimeInMs
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_AverageCommandExecutionTimeInMs_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.AverageCommandExecutionTimeInMs
  nameWithType: BotStatistics.AverageCommandExecutionTimeInMs
- uid: Amiquin.Core.Models.BotStatistics.BotName
  name: BotName
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_BotName
  commentId: P:Amiquin.Core.Models.BotStatistics.BotName
  fullName: Amiquin.Core.Models.BotStatistics.BotName
  nameWithType: BotStatistics.BotName
- uid: Amiquin.Core.Models.BotStatistics.BotName*
  name: BotName
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_BotName_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.BotName
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.BotName
  nameWithType: BotStatistics.BotName
- uid: Amiquin.Core.Models.BotStatistics.CacheItems
  name: CacheItems
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CacheItems
  commentId: P:Amiquin.Core.Models.BotStatistics.CacheItems
  fullName: Amiquin.Core.Models.BotStatistics.CacheItems
  nameWithType: BotStatistics.CacheItems
- uid: Amiquin.Core.Models.BotStatistics.CacheItems*
  name: CacheItems
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CacheItems_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.CacheItems
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.CacheItems
  nameWithType: BotStatistics.CacheItems
- uid: Amiquin.Core.Models.BotStatistics.CpuUsage
  name: CpuUsage
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CpuUsage
  commentId: P:Amiquin.Core.Models.BotStatistics.CpuUsage
  fullName: Amiquin.Core.Models.BotStatistics.CpuUsage
  nameWithType: BotStatistics.CpuUsage
- uid: Amiquin.Core.Models.BotStatistics.CpuUsage*
  name: CpuUsage
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CpuUsage_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.CpuUsage
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.CpuUsage
  nameWithType: BotStatistics.CpuUsage
- uid: Amiquin.Core.Models.BotStatistics.CreatedDate
  name: CreatedDate
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CreatedDate
  commentId: P:Amiquin.Core.Models.BotStatistics.CreatedDate
  fullName: Amiquin.Core.Models.BotStatistics.CreatedDate
  nameWithType: BotStatistics.CreatedDate
- uid: Amiquin.Core.Models.BotStatistics.CreatedDate*
  name: CreatedDate
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_CreatedDate_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.CreatedDate
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.CreatedDate
  nameWithType: BotStatistics.CreatedDate
- uid: Amiquin.Core.Models.BotStatistics.Latency
  name: Latency
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_Latency
  commentId: P:Amiquin.Core.Models.BotStatistics.Latency
  fullName: Amiquin.Core.Models.BotStatistics.Latency
  nameWithType: BotStatistics.Latency
- uid: Amiquin.Core.Models.BotStatistics.Latency*
  name: Latency
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_Latency_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.Latency
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.Latency
  nameWithType: BotStatistics.Latency
- uid: Amiquin.Core.Models.BotStatistics.ShardCount
  name: ShardCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_ShardCount
  commentId: P:Amiquin.Core.Models.BotStatistics.ShardCount
  fullName: Amiquin.Core.Models.BotStatistics.ShardCount
  nameWithType: BotStatistics.ShardCount
- uid: Amiquin.Core.Models.BotStatistics.ShardCount*
  name: ShardCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_ShardCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.ShardCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.ShardCount
  nameWithType: BotStatistics.ShardCount
- uid: Amiquin.Core.Models.BotStatistics.TotalChannelsCount
  name: TotalChannelsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalChannelsCount
  commentId: P:Amiquin.Core.Models.BotStatistics.TotalChannelsCount
  fullName: Amiquin.Core.Models.BotStatistics.TotalChannelsCount
  nameWithType: BotStatistics.TotalChannelsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalChannelsCount*
  name: TotalChannelsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalChannelsCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.TotalChannelsCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.TotalChannelsCount
  nameWithType: BotStatistics.TotalChannelsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalCommandsCount
  name: TotalCommandsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalCommandsCount
  commentId: P:Amiquin.Core.Models.BotStatistics.TotalCommandsCount
  fullName: Amiquin.Core.Models.BotStatistics.TotalCommandsCount
  nameWithType: BotStatistics.TotalCommandsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalCommandsCount*
  name: TotalCommandsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalCommandsCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.TotalCommandsCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.TotalCommandsCount
  nameWithType: BotStatistics.TotalCommandsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalErrorsCount
  name: TotalErrorsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalErrorsCount
  commentId: P:Amiquin.Core.Models.BotStatistics.TotalErrorsCount
  fullName: Amiquin.Core.Models.BotStatistics.TotalErrorsCount
  nameWithType: BotStatistics.TotalErrorsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalErrorsCount*
  name: TotalErrorsCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalErrorsCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.TotalErrorsCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.TotalErrorsCount
  nameWithType: BotStatistics.TotalErrorsCount
- uid: Amiquin.Core.Models.BotStatistics.TotalServersCount
  name: TotalServersCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalServersCount
  commentId: P:Amiquin.Core.Models.BotStatistics.TotalServersCount
  fullName: Amiquin.Core.Models.BotStatistics.TotalServersCount
  nameWithType: BotStatistics.TotalServersCount
- uid: Amiquin.Core.Models.BotStatistics.TotalServersCount*
  name: TotalServersCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalServersCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.TotalServersCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.TotalServersCount
  nameWithType: BotStatistics.TotalServersCount
- uid: Amiquin.Core.Models.BotStatistics.TotalUsersCount
  name: TotalUsersCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalUsersCount
  commentId: P:Amiquin.Core.Models.BotStatistics.TotalUsersCount
  fullName: Amiquin.Core.Models.BotStatistics.TotalUsersCount
  nameWithType: BotStatistics.TotalUsersCount
- uid: Amiquin.Core.Models.BotStatistics.TotalUsersCount*
  name: TotalUsersCount
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_TotalUsersCount_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.TotalUsersCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.TotalUsersCount
  nameWithType: BotStatistics.TotalUsersCount
- uid: Amiquin.Core.Models.BotStatistics.UpTimeInSeconds
  name: UpTimeInSeconds
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UpTimeInSeconds
  commentId: P:Amiquin.Core.Models.BotStatistics.UpTimeInSeconds
  fullName: Amiquin.Core.Models.BotStatistics.UpTimeInSeconds
  nameWithType: BotStatistics.UpTimeInSeconds
- uid: Amiquin.Core.Models.BotStatistics.UpTimeInSeconds*
  name: UpTimeInSeconds
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UpTimeInSeconds_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.UpTimeInSeconds
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.UpTimeInSeconds
  nameWithType: BotStatistics.UpTimeInSeconds
- uid: Amiquin.Core.Models.BotStatistics.UsedMemoryMB
  name: UsedMemoryMB
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UsedMemoryMB
  commentId: P:Amiquin.Core.Models.BotStatistics.UsedMemoryMB
  fullName: Amiquin.Core.Models.BotStatistics.UsedMemoryMB
  nameWithType: BotStatistics.UsedMemoryMB
- uid: Amiquin.Core.Models.BotStatistics.UsedMemoryMB*
  name: UsedMemoryMB
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UsedMemoryMB_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.UsedMemoryMB
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.UsedMemoryMB
  nameWithType: BotStatistics.UsedMemoryMB
- uid: Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage
  name: UsedMemoryPercentage
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UsedMemoryPercentage
  commentId: P:Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage
  fullName: Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage
  nameWithType: BotStatistics.UsedMemoryPercentage
- uid: Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage*
  name: UsedMemoryPercentage
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_UsedMemoryPercentage_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.UsedMemoryPercentage
  nameWithType: BotStatistics.UsedMemoryPercentage
- uid: Amiquin.Core.Models.BotStatistics.Version
  name: Version
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_Version
  commentId: P:Amiquin.Core.Models.BotStatistics.Version
  fullName: Amiquin.Core.Models.BotStatistics.Version
  nameWithType: BotStatistics.Version
- uid: Amiquin.Core.Models.BotStatistics.Version*
  name: Version
  href: api/Amiquin.Core.Models.BotStatistics.html#Amiquin_Core_Models_BotStatistics_Version_
  commentId: Overload:Amiquin.Core.Models.BotStatistics.Version
  isSpec: "True"
  fullName: Amiquin.Core.Models.BotStatistics.Version
  nameWithType: BotStatistics.Version
- uid: Amiquin.Core.Models.CommandLog
  name: CommandLog
  href: api/Amiquin.Core.Models.CommandLog.html
  commentId: T:Amiquin.Core.Models.CommandLog
  fullName: Amiquin.Core.Models.CommandLog
  nameWithType: CommandLog
- uid: Amiquin.Core.Models.CommandLog.Command
  name: Command
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Command
  commentId: P:Amiquin.Core.Models.CommandLog.Command
  fullName: Amiquin.Core.Models.CommandLog.Command
  nameWithType: CommandLog.Command
- uid: Amiquin.Core.Models.CommandLog.Command*
  name: Command
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Command_
  commentId: Overload:Amiquin.Core.Models.CommandLog.Command
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.Command
  nameWithType: CommandLog.Command
- uid: Amiquin.Core.Models.CommandLog.CommandDate
  name: CommandDate
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_CommandDate
  commentId: P:Amiquin.Core.Models.CommandLog.CommandDate
  fullName: Amiquin.Core.Models.CommandLog.CommandDate
  nameWithType: CommandLog.CommandDate
- uid: Amiquin.Core.Models.CommandLog.CommandDate*
  name: CommandDate
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_CommandDate_
  commentId: Overload:Amiquin.Core.Models.CommandLog.CommandDate
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.CommandDate
  nameWithType: CommandLog.CommandDate
- uid: Amiquin.Core.Models.CommandLog.Duration
  name: Duration
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Duration
  commentId: P:Amiquin.Core.Models.CommandLog.Duration
  fullName: Amiquin.Core.Models.CommandLog.Duration
  nameWithType: CommandLog.Duration
- uid: Amiquin.Core.Models.CommandLog.Duration*
  name: Duration
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Duration_
  commentId: Overload:Amiquin.Core.Models.CommandLog.Duration
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.Duration
  nameWithType: CommandLog.Duration
- uid: Amiquin.Core.Models.CommandLog.ErrorMessage
  name: ErrorMessage
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_ErrorMessage
  commentId: P:Amiquin.Core.Models.CommandLog.ErrorMessage
  fullName: Amiquin.Core.Models.CommandLog.ErrorMessage
  nameWithType: CommandLog.ErrorMessage
- uid: Amiquin.Core.Models.CommandLog.ErrorMessage*
  name: ErrorMessage
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_ErrorMessage_
  commentId: Overload:Amiquin.Core.Models.CommandLog.ErrorMessage
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.ErrorMessage
  nameWithType: CommandLog.ErrorMessage
- uid: Amiquin.Core.Models.CommandLog.Id
  name: Id
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Id
  commentId: P:Amiquin.Core.Models.CommandLog.Id
  fullName: Amiquin.Core.Models.CommandLog.Id
  nameWithType: CommandLog.Id
- uid: Amiquin.Core.Models.CommandLog.Id*
  name: Id
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Id_
  commentId: Overload:Amiquin.Core.Models.CommandLog.Id
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.Id
  nameWithType: CommandLog.Id
- uid: Amiquin.Core.Models.CommandLog.IsSuccess
  name: IsSuccess
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_IsSuccess
  commentId: P:Amiquin.Core.Models.CommandLog.IsSuccess
  fullName: Amiquin.Core.Models.CommandLog.IsSuccess
  nameWithType: CommandLog.IsSuccess
- uid: Amiquin.Core.Models.CommandLog.IsSuccess*
  name: IsSuccess
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_IsSuccess_
  commentId: Overload:Amiquin.Core.Models.CommandLog.IsSuccess
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.IsSuccess
  nameWithType: CommandLog.IsSuccess
- uid: Amiquin.Core.Models.CommandLog.Server
  name: Server
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Server
  commentId: P:Amiquin.Core.Models.CommandLog.Server
  fullName: Amiquin.Core.Models.CommandLog.Server
  nameWithType: CommandLog.Server
- uid: Amiquin.Core.Models.CommandLog.Server*
  name: Server
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Server_
  commentId: Overload:Amiquin.Core.Models.CommandLog.Server
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.Server
  nameWithType: CommandLog.Server
- uid: Amiquin.Core.Models.CommandLog.ServerId
  name: ServerId
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_ServerId
  commentId: P:Amiquin.Core.Models.CommandLog.ServerId
  fullName: Amiquin.Core.Models.CommandLog.ServerId
  nameWithType: CommandLog.ServerId
- uid: Amiquin.Core.Models.CommandLog.ServerId*
  name: ServerId
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_ServerId_
  commentId: Overload:Amiquin.Core.Models.CommandLog.ServerId
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.ServerId
  nameWithType: CommandLog.ServerId
- uid: Amiquin.Core.Models.CommandLog.UserId
  name: UserId
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_UserId
  commentId: P:Amiquin.Core.Models.CommandLog.UserId
  fullName: Amiquin.Core.Models.CommandLog.UserId
  nameWithType: CommandLog.UserId
- uid: Amiquin.Core.Models.CommandLog.UserId*
  name: UserId
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_UserId_
  commentId: Overload:Amiquin.Core.Models.CommandLog.UserId
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.UserId
  nameWithType: CommandLog.UserId
- uid: Amiquin.Core.Models.CommandLog.Username
  name: Username
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Username
  commentId: P:Amiquin.Core.Models.CommandLog.Username
  fullName: Amiquin.Core.Models.CommandLog.Username
  nameWithType: CommandLog.Username
- uid: Amiquin.Core.Models.CommandLog.Username*
  name: Username
  href: api/Amiquin.Core.Models.CommandLog.html#Amiquin_Core_Models_CommandLog_Username_
  commentId: Overload:Amiquin.Core.Models.CommandLog.Username
  isSpec: "True"
  fullName: Amiquin.Core.Models.CommandLog.Username
  nameWithType: CommandLog.Username
- uid: Amiquin.Core.Models.Message
  name: Message
  href: api/Amiquin.Core.Models.Message.html
  commentId: T:Amiquin.Core.Models.Message
  fullName: Amiquin.Core.Models.Message
  nameWithType: Message
- uid: Amiquin.Core.Models.Message.AuthorId
  name: AuthorId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_AuthorId
  commentId: P:Amiquin.Core.Models.Message.AuthorId
  fullName: Amiquin.Core.Models.Message.AuthorId
  nameWithType: Message.AuthorId
- uid: Amiquin.Core.Models.Message.AuthorId*
  name: AuthorId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_AuthorId_
  commentId: Overload:Amiquin.Core.Models.Message.AuthorId
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.AuthorId
  nameWithType: Message.AuthorId
- uid: Amiquin.Core.Models.Message.Content
  name: Content
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_Content
  commentId: P:Amiquin.Core.Models.Message.Content
  fullName: Amiquin.Core.Models.Message.Content
  nameWithType: Message.Content
- uid: Amiquin.Core.Models.Message.Content*
  name: Content
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_Content_
  commentId: Overload:Amiquin.Core.Models.Message.Content
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.Content
  nameWithType: Message.Content
- uid: Amiquin.Core.Models.Message.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_CreatedAt
  commentId: P:Amiquin.Core.Models.Message.CreatedAt
  fullName: Amiquin.Core.Models.Message.CreatedAt
  nameWithType: Message.CreatedAt
- uid: Amiquin.Core.Models.Message.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_CreatedAt_
  commentId: Overload:Amiquin.Core.Models.Message.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.CreatedAt
  nameWithType: Message.CreatedAt
- uid: Amiquin.Core.Models.Message.GuildId
  name: GuildId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_GuildId
  commentId: P:Amiquin.Core.Models.Message.GuildId
  fullName: Amiquin.Core.Models.Message.GuildId
  nameWithType: Message.GuildId
- uid: Amiquin.Core.Models.Message.GuildId*
  name: GuildId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_GuildId_
  commentId: Overload:Amiquin.Core.Models.Message.GuildId
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.GuildId
  nameWithType: Message.GuildId
- uid: Amiquin.Core.Models.Message.IsUser
  name: IsUser
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_IsUser
  commentId: P:Amiquin.Core.Models.Message.IsUser
  fullName: Amiquin.Core.Models.Message.IsUser
  nameWithType: Message.IsUser
- uid: Amiquin.Core.Models.Message.IsUser*
  name: IsUser
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_IsUser_
  commentId: Overload:Amiquin.Core.Models.Message.IsUser
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.IsUser
  nameWithType: Message.IsUser
- uid: Amiquin.Core.Models.Message.Server
  name: Server
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_Server
  commentId: P:Amiquin.Core.Models.Message.Server
  fullName: Amiquin.Core.Models.Message.Server
  nameWithType: Message.Server
- uid: Amiquin.Core.Models.Message.Server*
  name: Server
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_Server_
  commentId: Overload:Amiquin.Core.Models.Message.Server
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.Server
  nameWithType: Message.Server
- uid: Amiquin.Core.Models.Message.ServerId
  name: ServerId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_ServerId
  commentId: P:Amiquin.Core.Models.Message.ServerId
  fullName: Amiquin.Core.Models.Message.ServerId
  nameWithType: Message.ServerId
- uid: Amiquin.Core.Models.Message.ServerId*
  name: ServerId
  href: api/Amiquin.Core.Models.Message.html#Amiquin_Core_Models_Message_ServerId_
  commentId: Overload:Amiquin.Core.Models.Message.ServerId
  isSpec: "True"
  fullName: Amiquin.Core.Models.Message.ServerId
  nameWithType: Message.ServerId
- uid: Amiquin.Core.Models.NachoPack
  name: NachoPack
  href: api/Amiquin.Core.Models.NachoPack.html
  commentId: T:Amiquin.Core.Models.NachoPack
  fullName: Amiquin.Core.Models.NachoPack
  nameWithType: NachoPack
- uid: Amiquin.Core.Models.NachoPack.Id
  name: Id
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Id
  commentId: P:Amiquin.Core.Models.NachoPack.Id
  fullName: Amiquin.Core.Models.NachoPack.Id
  nameWithType: NachoPack.Id
- uid: Amiquin.Core.Models.NachoPack.Id*
  name: Id
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Id_
  commentId: Overload:Amiquin.Core.Models.NachoPack.Id
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.Id
  nameWithType: NachoPack.Id
- uid: Amiquin.Core.Models.NachoPack.NachoCount
  name: NachoCount
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_NachoCount
  commentId: P:Amiquin.Core.Models.NachoPack.NachoCount
  fullName: Amiquin.Core.Models.NachoPack.NachoCount
  nameWithType: NachoPack.NachoCount
- uid: Amiquin.Core.Models.NachoPack.NachoCount*
  name: NachoCount
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_NachoCount_
  commentId: Overload:Amiquin.Core.Models.NachoPack.NachoCount
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.NachoCount
  nameWithType: NachoPack.NachoCount
- uid: Amiquin.Core.Models.NachoPack.NachoReceivedDate
  name: NachoReceivedDate
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_NachoReceivedDate
  commentId: P:Amiquin.Core.Models.NachoPack.NachoReceivedDate
  fullName: Amiquin.Core.Models.NachoPack.NachoReceivedDate
  nameWithType: NachoPack.NachoReceivedDate
- uid: Amiquin.Core.Models.NachoPack.NachoReceivedDate*
  name: NachoReceivedDate
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_NachoReceivedDate_
  commentId: Overload:Amiquin.Core.Models.NachoPack.NachoReceivedDate
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.NachoReceivedDate
  nameWithType: NachoPack.NachoReceivedDate
- uid: Amiquin.Core.Models.NachoPack.Server
  name: Server
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Server
  commentId: P:Amiquin.Core.Models.NachoPack.Server
  fullName: Amiquin.Core.Models.NachoPack.Server
  nameWithType: NachoPack.Server
- uid: Amiquin.Core.Models.NachoPack.Server*
  name: Server
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Server_
  commentId: Overload:Amiquin.Core.Models.NachoPack.Server
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.Server
  nameWithType: NachoPack.Server
- uid: Amiquin.Core.Models.NachoPack.ServerId
  name: ServerId
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_ServerId
  commentId: P:Amiquin.Core.Models.NachoPack.ServerId
  fullName: Amiquin.Core.Models.NachoPack.ServerId
  nameWithType: NachoPack.ServerId
- uid: Amiquin.Core.Models.NachoPack.ServerId*
  name: ServerId
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_ServerId_
  commentId: Overload:Amiquin.Core.Models.NachoPack.ServerId
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.ServerId
  nameWithType: NachoPack.ServerId
- uid: Amiquin.Core.Models.NachoPack.UserId
  name: UserId
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_UserId
  commentId: P:Amiquin.Core.Models.NachoPack.UserId
  fullName: Amiquin.Core.Models.NachoPack.UserId
  nameWithType: NachoPack.UserId
- uid: Amiquin.Core.Models.NachoPack.UserId*
  name: UserId
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_UserId_
  commentId: Overload:Amiquin.Core.Models.NachoPack.UserId
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.UserId
  nameWithType: NachoPack.UserId
- uid: Amiquin.Core.Models.NachoPack.Username
  name: Username
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Username
  commentId: P:Amiquin.Core.Models.NachoPack.Username
  fullName: Amiquin.Core.Models.NachoPack.Username
  nameWithType: NachoPack.Username
- uid: Amiquin.Core.Models.NachoPack.Username*
  name: Username
  href: api/Amiquin.Core.Models.NachoPack.html#Amiquin_Core_Models_NachoPack_Username_
  commentId: Overload:Amiquin.Core.Models.NachoPack.Username
  isSpec: "True"
  fullName: Amiquin.Core.Models.NachoPack.Username
  nameWithType: NachoPack.Username
- uid: Amiquin.Core.Models.ServerMeta
  name: ServerMeta
  href: api/Amiquin.Core.Models.ServerMeta.html
  commentId: T:Amiquin.Core.Models.ServerMeta
  fullName: Amiquin.Core.Models.ServerMeta
  nameWithType: ServerMeta
- uid: Amiquin.Core.Models.ServerMeta.CommandLogs
  name: CommandLogs
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_CommandLogs
  commentId: P:Amiquin.Core.Models.ServerMeta.CommandLogs
  fullName: Amiquin.Core.Models.ServerMeta.CommandLogs
  nameWithType: ServerMeta.CommandLogs
- uid: Amiquin.Core.Models.ServerMeta.CommandLogs*
  name: CommandLogs
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_CommandLogs_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.CommandLogs
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.CommandLogs
  nameWithType: ServerMeta.CommandLogs
- uid: Amiquin.Core.Models.ServerMeta.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_CreatedAt
  commentId: P:Amiquin.Core.Models.ServerMeta.CreatedAt
  fullName: Amiquin.Core.Models.ServerMeta.CreatedAt
  nameWithType: ServerMeta.CreatedAt
- uid: Amiquin.Core.Models.ServerMeta.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_CreatedAt_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.CreatedAt
  nameWithType: ServerMeta.CreatedAt
- uid: Amiquin.Core.Models.ServerMeta.IsActive
  name: IsActive
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_IsActive
  commentId: P:Amiquin.Core.Models.ServerMeta.IsActive
  fullName: Amiquin.Core.Models.ServerMeta.IsActive
  nameWithType: ServerMeta.IsActive
- uid: Amiquin.Core.Models.ServerMeta.IsActive*
  name: IsActive
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_IsActive_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.IsActive
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.IsActive
  nameWithType: ServerMeta.IsActive
- uid: Amiquin.Core.Models.ServerMeta.LastUpdated
  name: LastUpdated
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_LastUpdated
  commentId: P:Amiquin.Core.Models.ServerMeta.LastUpdated
  fullName: Amiquin.Core.Models.ServerMeta.LastUpdated
  nameWithType: ServerMeta.LastUpdated
- uid: Amiquin.Core.Models.ServerMeta.LastUpdated*
  name: LastUpdated
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_LastUpdated_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.LastUpdated
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.LastUpdated
  nameWithType: ServerMeta.LastUpdated
- uid: Amiquin.Core.Models.ServerMeta.Messages
  name: Messages
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Messages
  commentId: P:Amiquin.Core.Models.ServerMeta.Messages
  fullName: Amiquin.Core.Models.ServerMeta.Messages
  nameWithType: ServerMeta.Messages
- uid: Amiquin.Core.Models.ServerMeta.Messages*
  name: Messages
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Messages_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.Messages
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.Messages
  nameWithType: ServerMeta.Messages
- uid: Amiquin.Core.Models.ServerMeta.NachoPacks
  name: NachoPacks
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_NachoPacks
  commentId: P:Amiquin.Core.Models.ServerMeta.NachoPacks
  fullName: Amiquin.Core.Models.ServerMeta.NachoPacks
  nameWithType: ServerMeta.NachoPacks
- uid: Amiquin.Core.Models.ServerMeta.NachoPacks*
  name: NachoPacks
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_NachoPacks_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.NachoPacks
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.NachoPacks
  nameWithType: ServerMeta.NachoPacks
- uid: Amiquin.Core.Models.ServerMeta.Persona
  name: Persona
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Persona
  commentId: P:Amiquin.Core.Models.ServerMeta.Persona
  fullName: Amiquin.Core.Models.ServerMeta.Persona
  nameWithType: ServerMeta.Persona
- uid: Amiquin.Core.Models.ServerMeta.Persona*
  name: Persona
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Persona_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.Persona
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.Persona
  nameWithType: ServerMeta.Persona
- uid: Amiquin.Core.Models.ServerMeta.ServerName
  name: ServerName
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_ServerName
  commentId: P:Amiquin.Core.Models.ServerMeta.ServerName
  fullName: Amiquin.Core.Models.ServerMeta.ServerName
  nameWithType: ServerMeta.ServerName
- uid: Amiquin.Core.Models.ServerMeta.ServerName*
  name: ServerName
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_ServerName_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.ServerName
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.ServerName
  nameWithType: ServerMeta.ServerName
- uid: Amiquin.Core.Models.ServerMeta.Toggles
  name: Toggles
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Toggles
  commentId: P:Amiquin.Core.Models.ServerMeta.Toggles
  fullName: Amiquin.Core.Models.ServerMeta.Toggles
  nameWithType: ServerMeta.Toggles
- uid: Amiquin.Core.Models.ServerMeta.Toggles*
  name: Toggles
  href: api/Amiquin.Core.Models.ServerMeta.html#Amiquin_Core_Models_ServerMeta_Toggles_
  commentId: Overload:Amiquin.Core.Models.ServerMeta.Toggles
  isSpec: "True"
  fullName: Amiquin.Core.Models.ServerMeta.Toggles
  nameWithType: ServerMeta.Toggles
- uid: Amiquin.Core.Models.Toggle
  name: Toggle
  href: api/Amiquin.Core.Models.Toggle.html
  commentId: T:Amiquin.Core.Models.Toggle
  fullName: Amiquin.Core.Models.Toggle
  nameWithType: Toggle
- uid: Amiquin.Core.Models.Toggle.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_CreatedAt
  commentId: P:Amiquin.Core.Models.Toggle.CreatedAt
  fullName: Amiquin.Core.Models.Toggle.CreatedAt
  nameWithType: Toggle.CreatedAt
- uid: Amiquin.Core.Models.Toggle.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_CreatedAt_
  commentId: Overload:Amiquin.Core.Models.Toggle.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.CreatedAt
  nameWithType: Toggle.CreatedAt
- uid: Amiquin.Core.Models.Toggle.Description
  name: Description
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Description
  commentId: P:Amiquin.Core.Models.Toggle.Description
  fullName: Amiquin.Core.Models.Toggle.Description
  nameWithType: Toggle.Description
- uid: Amiquin.Core.Models.Toggle.Description*
  name: Description
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Description_
  commentId: Overload:Amiquin.Core.Models.Toggle.Description
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.Description
  nameWithType: Toggle.Description
- uid: Amiquin.Core.Models.Toggle.Id
  name: Id
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Id
  commentId: P:Amiquin.Core.Models.Toggle.Id
  fullName: Amiquin.Core.Models.Toggle.Id
  nameWithType: Toggle.Id
- uid: Amiquin.Core.Models.Toggle.Id*
  name: Id
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Id_
  commentId: Overload:Amiquin.Core.Models.Toggle.Id
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.Id
  nameWithType: Toggle.Id
- uid: Amiquin.Core.Models.Toggle.IsEnabled
  name: IsEnabled
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_IsEnabled
  commentId: P:Amiquin.Core.Models.Toggle.IsEnabled
  fullName: Amiquin.Core.Models.Toggle.IsEnabled
  nameWithType: Toggle.IsEnabled
- uid: Amiquin.Core.Models.Toggle.IsEnabled*
  name: IsEnabled
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_IsEnabled_
  commentId: Overload:Amiquin.Core.Models.Toggle.IsEnabled
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.IsEnabled
  nameWithType: Toggle.IsEnabled
- uid: Amiquin.Core.Models.Toggle.Name
  name: Name
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Name
  commentId: P:Amiquin.Core.Models.Toggle.Name
  fullName: Amiquin.Core.Models.Toggle.Name
  nameWithType: Toggle.Name
- uid: Amiquin.Core.Models.Toggle.Name*
  name: Name
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Name_
  commentId: Overload:Amiquin.Core.Models.Toggle.Name
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.Name
  nameWithType: Toggle.Name
- uid: Amiquin.Core.Models.Toggle.Server
  name: Server
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Server
  commentId: P:Amiquin.Core.Models.Toggle.Server
  fullName: Amiquin.Core.Models.Toggle.Server
  nameWithType: Toggle.Server
- uid: Amiquin.Core.Models.Toggle.Server*
  name: Server
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_Server_
  commentId: Overload:Amiquin.Core.Models.Toggle.Server
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.Server
  nameWithType: Toggle.Server
- uid: Amiquin.Core.Models.Toggle.ServerId
  name: ServerId
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_ServerId
  commentId: P:Amiquin.Core.Models.Toggle.ServerId
  fullName: Amiquin.Core.Models.Toggle.ServerId
  nameWithType: Toggle.ServerId
- uid: Amiquin.Core.Models.Toggle.ServerId*
  name: ServerId
  href: api/Amiquin.Core.Models.Toggle.html#Amiquin_Core_Models_Toggle_ServerId_
  commentId: Overload:Amiquin.Core.Models.Toggle.ServerId
  isSpec: "True"
  fullName: Amiquin.Core.Models.Toggle.ServerId
  nameWithType: Toggle.ServerId
- uid: Amiquin.Core.Models.ToggleScope
  name: ToggleScope
  href: api/Amiquin.Core.Models.ToggleScope.html
  commentId: T:Amiquin.Core.Models.ToggleScope
  fullName: Amiquin.Core.Models.ToggleScope
  nameWithType: ToggleScope
- uid: Amiquin.Core.Models.ToggleScope.Global
  name: Global
  href: api/Amiquin.Core.Models.ToggleScope.html#Amiquin_Core_Models_ToggleScope_Global
  commentId: F:Amiquin.Core.Models.ToggleScope.Global
  fullName: Amiquin.Core.Models.ToggleScope.Global
  nameWithType: ToggleScope.Global
- uid: Amiquin.Core.Models.ToggleScope.Server
  name: Server
  href: api/Amiquin.Core.Models.ToggleScope.html#Amiquin_Core_Models_ToggleScope_Server
  commentId: F:Amiquin.Core.Models.ToggleScope.Server
  fullName: Amiquin.Core.Models.ToggleScope.Server
  nameWithType: ToggleScope.Server
- uid: Amiquin.Core.Options
  name: Amiquin.Core.Options
  href: api/Amiquin.Core.Options.html
  commentId: N:Amiquin.Core.Options
  fullName: Amiquin.Core.Options
  nameWithType: Amiquin.Core.Options
- uid: Amiquin.Core.Options.BotOptions
  name: BotOptions
  href: api/Amiquin.Core.Options.BotOptions.html
  commentId: T:Amiquin.Core.Options.BotOptions
  fullName: Amiquin.Core.Options.BotOptions
  nameWithType: BotOptions
- uid: Amiquin.Core.Options.BotOptions.Bot
  name: Bot
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_Bot
  commentId: F:Amiquin.Core.Options.BotOptions.Bot
  fullName: Amiquin.Core.Options.BotOptions.Bot
  nameWithType: BotOptions.Bot
- uid: Amiquin.Core.Options.BotOptions.BotName
  name: BotName
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_BotName
  commentId: P:Amiquin.Core.Options.BotOptions.BotName
  fullName: Amiquin.Core.Options.BotOptions.BotName
  nameWithType: BotOptions.BotName
- uid: Amiquin.Core.Options.BotOptions.BotName*
  name: BotName
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_BotName_
  commentId: Overload:Amiquin.Core.Options.BotOptions.BotName
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.BotName
  nameWithType: BotOptions.BotName
- uid: Amiquin.Core.Options.BotOptions.MaxTokens
  name: MaxTokens
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_MaxTokens
  commentId: P:Amiquin.Core.Options.BotOptions.MaxTokens
  fullName: Amiquin.Core.Options.BotOptions.MaxTokens
  nameWithType: BotOptions.MaxTokens
- uid: Amiquin.Core.Options.BotOptions.MaxTokens*
  name: MaxTokens
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_MaxTokens_
  commentId: Overload:Amiquin.Core.Options.BotOptions.MaxTokens
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.MaxTokens
  nameWithType: BotOptions.MaxTokens
- uid: Amiquin.Core.Options.BotOptions.MessageFetchCount
  name: MessageFetchCount
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_MessageFetchCount
  commentId: P:Amiquin.Core.Options.BotOptions.MessageFetchCount
  fullName: Amiquin.Core.Options.BotOptions.MessageFetchCount
  nameWithType: BotOptions.MessageFetchCount
- uid: Amiquin.Core.Options.BotOptions.MessageFetchCount*
  name: MessageFetchCount
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_MessageFetchCount_
  commentId: Overload:Amiquin.Core.Options.BotOptions.MessageFetchCount
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.MessageFetchCount
  nameWithType: BotOptions.MessageFetchCount
- uid: Amiquin.Core.Options.BotOptions.OpenAIKey
  name: OpenAIKey
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_OpenAIKey
  commentId: P:Amiquin.Core.Options.BotOptions.OpenAIKey
  fullName: Amiquin.Core.Options.BotOptions.OpenAIKey
  nameWithType: BotOptions.OpenAIKey
- uid: Amiquin.Core.Options.BotOptions.OpenAIKey*
  name: OpenAIKey
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_OpenAIKey_
  commentId: Overload:Amiquin.Core.Options.BotOptions.OpenAIKey
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.OpenAIKey
  nameWithType: BotOptions.OpenAIKey
- uid: Amiquin.Core.Options.BotOptions.Token
  name: Token
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_Token
  commentId: P:Amiquin.Core.Options.BotOptions.Token
  fullName: Amiquin.Core.Options.BotOptions.Token
  nameWithType: BotOptions.Token
- uid: Amiquin.Core.Options.BotOptions.Token*
  name: Token
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_Token_
  commentId: Overload:Amiquin.Core.Options.BotOptions.Token
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.Token
  nameWithType: BotOptions.Token
- uid: Amiquin.Core.Options.BotOptions.Version
  name: Version
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_Version
  commentId: P:Amiquin.Core.Options.BotOptions.Version
  fullName: Amiquin.Core.Options.BotOptions.Version
  nameWithType: BotOptions.Version
- uid: Amiquin.Core.Options.BotOptions.Version*
  name: Version
  href: api/Amiquin.Core.Options.BotOptions.html#Amiquin_Core_Options_BotOptions_Version_
  commentId: Overload:Amiquin.Core.Options.BotOptions.Version
  isSpec: "True"
  fullName: Amiquin.Core.Options.BotOptions.Version
  nameWithType: BotOptions.Version
- uid: Amiquin.Core.Options.DatabaseOptions
  name: DatabaseOptions
  href: api/Amiquin.Core.Options.DatabaseOptions.html
  commentId: T:Amiquin.Core.Options.DatabaseOptions
  fullName: Amiquin.Core.Options.DatabaseOptions
  nameWithType: DatabaseOptions
- uid: Amiquin.Core.Options.DatabaseOptions.ConnectionString
  name: ConnectionString
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_ConnectionString
  commentId: P:Amiquin.Core.Options.DatabaseOptions.ConnectionString
  fullName: Amiquin.Core.Options.DatabaseOptions.ConnectionString
  nameWithType: DatabaseOptions.ConnectionString
- uid: Amiquin.Core.Options.DatabaseOptions.ConnectionString*
  name: ConnectionString
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_ConnectionString_
  commentId: Overload:Amiquin.Core.Options.DatabaseOptions.ConnectionString
  isSpec: "True"
  fullName: Amiquin.Core.Options.DatabaseOptions.ConnectionString
  nameWithType: DatabaseOptions.ConnectionString
- uid: Amiquin.Core.Options.DatabaseOptions.Database
  name: Database
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_Database
  commentId: F:Amiquin.Core.Options.DatabaseOptions.Database
  fullName: Amiquin.Core.Options.DatabaseOptions.Database
  nameWithType: DatabaseOptions.Database
- uid: Amiquin.Core.Options.DatabaseOptions.LogsPath
  name: LogsPath
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_LogsPath
  commentId: P:Amiquin.Core.Options.DatabaseOptions.LogsPath
  fullName: Amiquin.Core.Options.DatabaseOptions.LogsPath
  nameWithType: DatabaseOptions.LogsPath
- uid: Amiquin.Core.Options.DatabaseOptions.LogsPath*
  name: LogsPath
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_LogsPath_
  commentId: Overload:Amiquin.Core.Options.DatabaseOptions.LogsPath
  isSpec: "True"
  fullName: Amiquin.Core.Options.DatabaseOptions.LogsPath
  nameWithType: DatabaseOptions.LogsPath
- uid: Amiquin.Core.Options.DatabaseOptions.Mode
  name: Mode
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_Mode
  commentId: P:Amiquin.Core.Options.DatabaseOptions.Mode
  fullName: Amiquin.Core.Options.DatabaseOptions.Mode
  nameWithType: DatabaseOptions.Mode
- uid: Amiquin.Core.Options.DatabaseOptions.Mode*
  name: Mode
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_Mode_
  commentId: Overload:Amiquin.Core.Options.DatabaseOptions.Mode
  isSpec: "True"
  fullName: Amiquin.Core.Options.DatabaseOptions.Mode
  nameWithType: DatabaseOptions.Mode
- uid: Amiquin.Core.Options.DatabaseOptions.SQLitePath
  name: SQLitePath
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_SQLitePath
  commentId: P:Amiquin.Core.Options.DatabaseOptions.SQLitePath
  fullName: Amiquin.Core.Options.DatabaseOptions.SQLitePath
  nameWithType: DatabaseOptions.SQLitePath
- uid: Amiquin.Core.Options.DatabaseOptions.SQLitePath*
  name: SQLitePath
  href: api/Amiquin.Core.Options.DatabaseOptions.html#Amiquin_Core_Options_DatabaseOptions_SQLitePath_
  commentId: Overload:Amiquin.Core.Options.DatabaseOptions.SQLitePath
  isSpec: "True"
  fullName: Amiquin.Core.Options.DatabaseOptions.SQLitePath
  nameWithType: DatabaseOptions.SQLitePath
- uid: Amiquin.Core.Options.ExternalOptions
  name: ExternalOptions
  href: api/Amiquin.Core.Options.ExternalOptions.html
  commentId: T:Amiquin.Core.Options.ExternalOptions
  fullName: Amiquin.Core.Options.ExternalOptions
  nameWithType: ExternalOptions
- uid: Amiquin.Core.Options.ExternalOptions.External
  name: External
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_External
  commentId: F:Amiquin.Core.Options.ExternalOptions.External
  fullName: Amiquin.Core.Options.ExternalOptions.External
  nameWithType: ExternalOptions.External
- uid: Amiquin.Core.Options.ExternalOptions.ModelName
  name: ModelName
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_ModelName
  commentId: P:Amiquin.Core.Options.ExternalOptions.ModelName
  fullName: Amiquin.Core.Options.ExternalOptions.ModelName
  nameWithType: ExternalOptions.ModelName
- uid: Amiquin.Core.Options.ExternalOptions.ModelName*
  name: ModelName
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_ModelName_
  commentId: Overload:Amiquin.Core.Options.ExternalOptions.ModelName
  isSpec: "True"
  fullName: Amiquin.Core.Options.ExternalOptions.ModelName
  nameWithType: ExternalOptions.ModelName
- uid: Amiquin.Core.Options.ExternalOptions.NewsApiUrl
  name: NewsApiUrl
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_NewsApiUrl
  commentId: P:Amiquin.Core.Options.ExternalOptions.NewsApiUrl
  fullName: Amiquin.Core.Options.ExternalOptions.NewsApiUrl
  nameWithType: ExternalOptions.NewsApiUrl
- uid: Amiquin.Core.Options.ExternalOptions.NewsApiUrl*
  name: NewsApiUrl
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_NewsApiUrl_
  commentId: Overload:Amiquin.Core.Options.ExternalOptions.NewsApiUrl
  isSpec: "True"
  fullName: Amiquin.Core.Options.ExternalOptions.NewsApiUrl
  nameWithType: ExternalOptions.NewsApiUrl
- uid: Amiquin.Core.Options.ExternalOptions.PiperCommand
  name: PiperCommand
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_PiperCommand
  commentId: P:Amiquin.Core.Options.ExternalOptions.PiperCommand
  fullName: Amiquin.Core.Options.ExternalOptions.PiperCommand
  nameWithType: ExternalOptions.PiperCommand
- uid: Amiquin.Core.Options.ExternalOptions.PiperCommand*
  name: PiperCommand
  href: api/Amiquin.Core.Options.ExternalOptions.html#Amiquin_Core_Options_ExternalOptions_PiperCommand_
  commentId: Overload:Amiquin.Core.Options.ExternalOptions.PiperCommand
  isSpec: "True"
  fullName: Amiquin.Core.Options.ExternalOptions.PiperCommand
  nameWithType: ExternalOptions.PiperCommand
- uid: Amiquin.Core.Options.IOption
  name: IOption
  href: api/Amiquin.Core.Options.IOption.html
  commentId: T:Amiquin.Core.Options.IOption
  fullName: Amiquin.Core.Options.IOption
  nameWithType: IOption
- uid: Amiquin.Core.Services.ApiClients
  name: Amiquin.Core.Services.ApiClients
  href: api/Amiquin.Core.Services.ApiClients.html
  commentId: N:Amiquin.Core.Services.ApiClients
  fullName: Amiquin.Core.Services.ApiClients
  nameWithType: Amiquin.Core.Services.ApiClients
- uid: Amiquin.Core.Services.ApiClients.INewsApiClient
  name: INewsApiClient
  href: api/Amiquin.Core.Services.ApiClients.INewsApiClient.html
  commentId: T:Amiquin.Core.Services.ApiClients.INewsApiClient
  fullName: Amiquin.Core.Services.ApiClients.INewsApiClient
  nameWithType: INewsApiClient
- uid: Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync
  name: GetNewsAsync()
  href: api/Amiquin.Core.Services.ApiClients.INewsApiClient.html#Amiquin_Core_Services_ApiClients_INewsApiClient_GetNewsAsync
  commentId: M:Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync
  fullName: Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync()
  nameWithType: INewsApiClient.GetNewsAsync()
- uid: Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync*
  name: GetNewsAsync
  href: api/Amiquin.Core.Services.ApiClients.INewsApiClient.html#Amiquin_Core_Services_ApiClients_INewsApiClient_GetNewsAsync_
  commentId: Overload:Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.INewsApiClient.GetNewsAsync
  nameWithType: INewsApiClient.GetNewsAsync
- uid: Amiquin.Core.Services.ApiClients.NewsApiClient
  name: NewsApiClient
  href: api/Amiquin.Core.Services.ApiClients.NewsApiClient.html
  commentId: T:Amiquin.Core.Services.ApiClients.NewsApiClient
  fullName: Amiquin.Core.Services.ApiClients.NewsApiClient
  nameWithType: NewsApiClient
- uid: Amiquin.Core.Services.ApiClients.NewsApiClient.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ApiClients.NewsApiClient},System.Net.Http.IHttpClientFactory)
  name: NewsApiClient(ILogger<NewsApiClient>, IHttpClientFactory)
  href: api/Amiquin.Core.Services.ApiClients.NewsApiClient.html#Amiquin_Core_Services_ApiClients_NewsApiClient__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_ApiClients_NewsApiClient__System_Net_Http_IHttpClientFactory_
  commentId: M:Amiquin.Core.Services.ApiClients.NewsApiClient.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ApiClients.NewsApiClient},System.Net.Http.IHttpClientFactory)
  name.vb: New(ILogger(Of NewsApiClient), IHttpClientFactory)
  fullName: Amiquin.Core.Services.ApiClients.NewsApiClient.NewsApiClient(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.ApiClients.NewsApiClient>, System.Net.Http.IHttpClientFactory)
  fullName.vb: Amiquin.Core.Services.ApiClients.NewsApiClient.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.ApiClients.NewsApiClient), System.Net.Http.IHttpClientFactory)
  nameWithType: NewsApiClient.NewsApiClient(ILogger<NewsApiClient>, IHttpClientFactory)
  nameWithType.vb: NewsApiClient.New(ILogger(Of NewsApiClient), IHttpClientFactory)
- uid: Amiquin.Core.Services.ApiClients.NewsApiClient.#ctor*
  name: NewsApiClient
  href: api/Amiquin.Core.Services.ApiClients.NewsApiClient.html#Amiquin_Core_Services_ApiClients_NewsApiClient__ctor_
  commentId: Overload:Amiquin.Core.Services.ApiClients.NewsApiClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.ApiClients.NewsApiClient.NewsApiClient
  fullName.vb: Amiquin.Core.Services.ApiClients.NewsApiClient.New
  nameWithType: NewsApiClient.NewsApiClient
  nameWithType.vb: NewsApiClient.New
- uid: Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync
  name: GetNewsAsync()
  href: api/Amiquin.Core.Services.ApiClients.NewsApiClient.html#Amiquin_Core_Services_ApiClients_NewsApiClient_GetNewsAsync
  commentId: M:Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync
  fullName: Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync()
  nameWithType: NewsApiClient.GetNewsAsync()
- uid: Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync*
  name: GetNewsAsync
  href: api/Amiquin.Core.Services.ApiClients.NewsApiClient.html#Amiquin_Core_Services_ApiClients_NewsApiClient_GetNewsAsync_
  commentId: Overload:Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.NewsApiClient.GetNewsAsync
  nameWithType: NewsApiClient.GetNewsAsync
- uid: Amiquin.Core.Services.ApiClients.Responses
  name: Amiquin.Core.Services.ApiClients.Responses
  href: api/Amiquin.Core.Services.ApiClients.Responses.html
  commentId: N:Amiquin.Core.Services.ApiClients.Responses
  fullName: Amiquin.Core.Services.ApiClients.Responses
  nameWithType: Amiquin.Core.Services.ApiClients.Responses
- uid: Amiquin.Core.Services.ApiClients.Responses.Data
  name: Data
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.Data
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data
  nameWithType: Data
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.FeedType
  name: FeedType
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_FeedType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.Data.FeedType
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.FeedType
  nameWithType: Data.FeedType
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.FeedType*
  name: FeedType
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_FeedType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.Data.FeedType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.FeedType
  nameWithType: Data.FeedType
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId
  name: MinNewsId
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_MinNewsId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId
  nameWithType: Data.MinNewsId
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId*
  name: MinNewsId
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_MinNewsId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.MinNewsId
  nameWithType: Data.MinNewsId
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.NewsList
  name: NewsList
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_NewsList
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.Data.NewsList
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.NewsList
  nameWithType: Data.NewsList
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.NewsList*
  name: NewsList
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_NewsList_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.Data.NewsList
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.NewsList
  nameWithType: Data.NewsList
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired
  name: ReloadRequired
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_ReloadRequired
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired
  nameWithType: Data.ReloadRequired
- uid: Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired*
  name: ReloadRequired
  href: api/Amiquin.Core.Services.ApiClients.Responses.Data.html#Amiquin_Core_Services_ApiClients_Responses_Data_ReloadRequired_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.Data.ReloadRequired
  nameWithType: Data.ReloadRequired
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse
  name: NewsApiResponse
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse
  nameWithType: NewsApiResponse
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data
  name: Data
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.html#Amiquin_Core_Services_ApiClients_Responses_NewsApiResponse_Data
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data
  nameWithType: NewsApiResponse.Data
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data*
  name: Data
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.html#Amiquin_Core_Services_ApiClients_Responses_NewsApiResponse_Data_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Data
  nameWithType: NewsApiResponse.Data
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error
  name: Error
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.html#Amiquin_Core_Services_ApiClients_Responses_NewsApiResponse_Error
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error
  nameWithType: NewsApiResponse.Error
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error*
  name: Error
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.html#Amiquin_Core_Services_ApiClients_Responses_NewsApiResponse_Error_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsApiResponse.Error
  nameWithType: NewsApiResponse.Error
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList
  name: NewsList
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.NewsList
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList
  nameWithType: NewsList
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank
  name: FixedRank
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_FixedRank
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank
  nameWithType: NewsList.FixedRank
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank*
  name: FixedRank
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_FixedRank_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.FixedRank
  nameWithType: NewsList.FixedRank
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId
  name: HashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_HashId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId
  nameWithType: NewsList.HashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId*
  name: HashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_HashId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.HashId
  nameWithType: NewsList.HashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj
  name: NewsObj
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_NewsObj
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj
  nameWithType: NewsList.NewsObj
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj*
  name: NewsObj
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_NewsObj_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsObj
  nameWithType: NewsList.NewsObj
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType
  name: NewsType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_NewsType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType
  nameWithType: NewsList.NewsType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType*
  name: NewsType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_NewsType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.NewsType
  nameWithType: NewsList.NewsType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore
  name: PScore
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_PScore
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore
  nameWithType: NewsList.PScore
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore*
  name: PScore
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_PScore_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.PScore
  nameWithType: NewsList.PScore
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta
  name: PublisherInteractionMeta
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_PublisherInteractionMeta
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta
  nameWithType: NewsList.PublisherInteractionMeta
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta*
  name: PublisherInteractionMeta
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_PublisherInteractionMeta_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.PublisherInteractionMeta
  nameWithType: NewsList.PublisherInteractionMeta
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank
  name: Rank
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Rank
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank
  nameWithType: NewsList.Rank
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank*
  name: Rank
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Rank_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Rank
  nameWithType: NewsList.Rank
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride
  name: ReadOverride
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_ReadOverride
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride
  nameWithType: NewsList.ReadOverride
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride*
  name: ReadOverride
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_ReadOverride_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.ReadOverride
  nameWithType: NewsList.ReadOverride
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl
  name: SourceUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_SourceUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl
  nameWithType: NewsList.SourceUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl*
  name: SourceUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_SourceUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.SourceUrl
  nameWithType: NewsList.SourceUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Type
  name: Type
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Type
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.Type
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Type
  nameWithType: NewsList.Type
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Type*
  name: Type
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Type_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.Type
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Type
  nameWithType: NewsList.Type
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Version
  name: Version
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Version
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsList.Version
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Version
  nameWithType: NewsList.Version
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsList.Version*
  name: Version
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsList.html#Amiquin_Core_Services_ApiClients_Responses_NewsList_Version_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsList.Version
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsList.Version
  nameWithType: NewsList.Version
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj
  name: NewsObj
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.NewsObj
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj
  nameWithType: NewsObj
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName
  name: AuthorName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_AuthorName
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName
  nameWithType: NewsObj.AuthorName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName*
  name: AuthorName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_AuthorName_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AuthorName
  nameWithType: NewsObj.AuthorName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType
  name: AutoPlayType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_AutoPlayType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType
  nameWithType: NewsObj.AutoPlayType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType*
  name: AutoPlayType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_AutoPlayType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.AutoPlayType
  nameWithType: NewsObj.AutoPlayType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline
  name: BottomHeadline
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomHeadline
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline
  nameWithType: NewsObj.BottomHeadline
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline*
  name: BottomHeadline
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomHeadline_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomHeadline
  nameWithType: NewsObj.BottomHeadline
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink
  name: BottomPanelLink
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomPanelLink
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink
  nameWithType: NewsObj.BottomPanelLink
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink*
  name: BottomPanelLink
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomPanelLink_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomPanelLink
  nameWithType: NewsObj.BottomPanelLink
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText
  name: BottomText
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomText
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText
  nameWithType: NewsObj.BottomText
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText*
  name: BottomText
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomText_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomText
  nameWithType: NewsObj.BottomText
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType
  name: BottomType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType
  nameWithType: NewsObj.BottomType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType*
  name: BottomType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_BottomType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.BottomType
  nameWithType: NewsObj.BottomType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign
  name: CapsuleCampaign
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCampaign
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign
  nameWithType: NewsObj.CapsuleCampaign
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign*
  name: CapsuleCampaign
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCampaign_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCampaign
  nameWithType: NewsObj.CapsuleCampaign
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId
  name: CapsuleCustomCardId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCustomCardId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId
  nameWithType: NewsObj.CapsuleCustomCardId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId*
  name: CapsuleCustomCardId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCustomCardId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardId
  nameWithType: NewsObj.CapsuleCustomCardId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl
  name: CapsuleCustomCardUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCustomCardUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl
  nameWithType: NewsObj.CapsuleCustomCardUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl*
  name: CapsuleCustomCardUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleCustomCardUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleCustomCardUrl
  nameWithType: NewsObj.CapsuleCustomCardUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl
  name: CapsuleImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleImageUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl
  nameWithType: NewsObj.CapsuleImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl*
  name: CapsuleImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CapsuleImageUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CapsuleImageUrl
  nameWithType: NewsObj.CapsuleImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames
  name: CategoryNames
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CategoryNames
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames
  nameWithType: NewsObj.CategoryNames
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames*
  name: CategoryNames
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CategoryNames_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CategoryNames
  nameWithType: NewsObj.CategoryNames
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content
  name: Content
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Content
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content
  nameWithType: NewsObj.Content
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content*
  name: Content
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Content_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Content
  nameWithType: NewsObj.Content
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode
  name: CountryCode
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CountryCode
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode
  nameWithType: NewsObj.CountryCode
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode*
  name: CountryCode
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CountryCode_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CountryCode
  nameWithType: NewsObj.CountryCode
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CreatedAt
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt
  nameWithType: NewsObj.CreatedAt
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CreatedAt_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CreatedAt
  nameWithType: NewsObj.CreatedAt
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference
  name: CryptoCoinPreference
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CryptoCoinPreference
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference
  nameWithType: NewsObj.CryptoCoinPreference
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference*
  name: CryptoCoinPreference
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_CryptoCoinPreference_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.CryptoCoinPreference
  nameWithType: NewsObj.CryptoCoinPreference
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts
  name: DarkerFonts
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DarkerFonts
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts
  nameWithType: NewsObj.DarkerFonts
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts*
  name: DarkerFonts
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DarkerFonts_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DarkerFonts
  nameWithType: NewsObj.DarkerFonts
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags
  name: DfpTags
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DfpTags
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags
  nameWithType: NewsObj.DfpTags
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags*
  name: DfpTags
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DfpTags_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DfpTags
  nameWithType: NewsObj.DfpTags
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd
  name: DontShowAd
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DontShowAd
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd
  nameWithType: NewsObj.DontShowAd
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd*
  name: DontShowAd
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_DontShowAd_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.DontShowAd
  nameWithType: NewsObj.DontShowAd
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount
  name: FbLikeCount
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FbLikeCount
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount
  nameWithType: NewsObj.FbLikeCount
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount*
  name: FbLikeCount
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FbLikeCount_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbLikeCount
  nameWithType: NewsObj.FbLikeCount
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId
  name: FbObjectId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FbObjectId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId
  nameWithType: NewsObj.FbObjectId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId*
  name: FbObjectId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FbObjectId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FbObjectId
  nameWithType: NewsObj.FbObjectId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls
  name: FullGalleryUrls
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FullGalleryUrls
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls
  nameWithType: NewsObj.FullGalleryUrls
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls*
  name: FullGalleryUrls
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_FullGalleryUrls_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.FullGalleryUrls
  nameWithType: NewsObj.FullGalleryUrls
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls
  name: GalleryImageUrls
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_GalleryImageUrls
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls
  nameWithType: NewsObj.GalleryImageUrls
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls*
  name: GalleryImageUrls
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_GalleryImageUrls_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.GalleryImageUrls
  nameWithType: NewsObj.GalleryImageUrls
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId
  name: HashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_HashId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId
  nameWithType: NewsObj.HashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId*
  name: HashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_HashId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.HashId
  nameWithType: NewsObj.HashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl
  name: ImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ImageUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl
  nameWithType: NewsObj.ImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl*
  name: ImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ImageUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImageUrl
  nameWithType: NewsObj.ImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important
  name: Important
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Important
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important
  nameWithType: NewsObj.Important
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important*
  name: Important
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Important_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Important
  nameWithType: NewsObj.Important
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore
  name: ImpressiveScore
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ImpressiveScore
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore
  nameWithType: NewsObj.ImpressiveScore
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore*
  name: ImpressiveScore
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ImpressiveScore_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ImpressiveScore
  nameWithType: NewsObj.ImpressiveScore
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted
  name: IsMuted
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsMuted
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted
  nameWithType: NewsObj.IsMuted
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted*
  name: IsMuted
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsMuted_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsMuted
  nameWithType: NewsObj.IsMuted
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported
  name: IsOverlaySupported
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsOverlaySupported
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported
  nameWithType: NewsObj.IsOverlaySupported
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported*
  name: IsOverlaySupported
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsOverlaySupported_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsOverlaySupported
  nameWithType: NewsObj.IsOverlaySupported
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable
  name: IsProfileClickable
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsProfileClickable
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable
  nameWithType: NewsObj.IsProfileClickable
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable*
  name: IsProfileClickable
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsProfileClickable_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsProfileClickable
  nameWithType: NewsObj.IsProfileClickable
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable
  name: IsSimilarFeedAvailable
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsSimilarFeedAvailable
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable
  nameWithType: NewsObj.IsSimilarFeedAvailable
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable*
  name: IsSimilarFeedAvailable
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsSimilarFeedAvailable_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsSimilarFeedAvailable
  nameWithType: NewsObj.IsSimilarFeedAvailable
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo
  name: IsYoutubeVideo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsYoutubeVideo
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo
  nameWithType: NewsObj.IsYoutubeVideo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo*
  name: IsYoutubeVideo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_IsYoutubeVideo_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.IsYoutubeVideo
  nameWithType: NewsObj.IsYoutubeVideo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language
  name: Language
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Language
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language
  nameWithType: NewsObj.Language
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language*
  name: Language
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Language_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Language
  nameWithType: NewsObj.Language
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType
  name: NewsType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_NewsType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType
  nameWithType: NewsObj.NewsType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType*
  name: NewsType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_NewsType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.NewsType
  nameWithType: NewsObj.NewsType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId
  name: OldHashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_OldHashId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId
  nameWithType: NewsObj.OldHashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId*
  name: OldHashId
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_OldHashId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.OldHashId
  nameWithType: NewsObj.OldHashId
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant
  name: PollTenant
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PollTenant
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant
  nameWithType: NewsObj.PollTenant
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant*
  name: PollTenant
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PollTenant_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PollTenant
  nameWithType: NewsObj.PollTenant
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime
  name: PositionExpireTime
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PositionExpireTime
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime
  nameWithType: NewsObj.PositionExpireTime
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime*
  name: PositionExpireTime
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PositionExpireTime_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionExpireTime
  nameWithType: NewsObj.PositionExpireTime
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime
  name: PositionStartTime
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PositionStartTime
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime
  nameWithType: NewsObj.PositionStartTime
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime*
  name: PositionStartTime
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PositionStartTime_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PositionStartTime
  nameWithType: NewsObj.PositionStartTime
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo
  name: PublisherInfo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PublisherInfo
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo
  nameWithType: NewsObj.PublisherInfo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo*
  name: PublisherInfo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PublisherInfo_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInfo
  nameWithType: NewsObj.PublisherInfo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta
  name: PublisherInteractionMeta
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PublisherInteractionMeta
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta
  nameWithType: NewsObj.PublisherInteractionMeta
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta*
  name: PublisherInteractionMeta
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_PublisherInteractionMeta_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.PublisherInteractionMeta
  nameWithType: NewsObj.PublisherInteractionMeta
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags
  name: RelevancyTags
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_RelevancyTags
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags
  nameWithType: NewsObj.RelevancyTags
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags*
  name: RelevancyTags
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_RelevancyTags_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.RelevancyTags
  nameWithType: NewsObj.RelevancyTags
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score
  name: Score
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Score
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score
  nameWithType: NewsObj.Score
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score*
  name: Score
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Score_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Score
  nameWithType: NewsObj.Score
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl
  name: ShortenedUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShortenedUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl
  nameWithType: NewsObj.ShortenedUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl*
  name: ShortenedUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShortenedUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShortenedUrl
  nameWithType: NewsObj.ShortenedUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage
  name: ShowCapsuleImage
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowCapsuleImage
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage
  nameWithType: NewsObj.ShowCapsuleImage
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage*
  name: ShowCapsuleImage
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowCapsuleImage_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowCapsuleImage
  nameWithType: NewsObj.ShowCapsuleImage
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly
  name: ShowInVideoFeedOnly
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowInVideoFeedOnly
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly
  nameWithType: NewsObj.ShowInVideoFeedOnly
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly*
  name: ShowInVideoFeedOnly
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowInVideoFeedOnly_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInVideoFeedOnly
  nameWithType: NewsObj.ShowInVideoFeedOnly
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName
  name: ShowInshortsBrandName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowInshortsBrandName
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName
  nameWithType: NewsObj.ShowInshortsBrandName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName*
  name: ShowInshortsBrandName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowInshortsBrandName_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowInshortsBrandName
  nameWithType: NewsObj.ShowInshortsBrandName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo
  name: ShowPublisherInfo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowPublisherInfo
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo
  nameWithType: NewsObj.ShowPublisherInfo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo*
  name: ShowPublisherInfo
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_ShowPublisherInfo_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.ShowPublisherInfo
  nameWithType: NewsObj.ShowPublisherInfo
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold
  name: SimilarThreshold
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SimilarThreshold
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold
  nameWithType: NewsObj.SimilarThreshold
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold*
  name: SimilarThreshold
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SimilarThreshold_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SimilarThreshold
  nameWithType: NewsObj.SimilarThreshold
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName
  name: SourceName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SourceName
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName
  nameWithType: NewsObj.SourceName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName*
  name: SourceName
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SourceName_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceName
  nameWithType: NewsObj.SourceName
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl
  name: SourceUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SourceUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl
  nameWithType: NewsObj.SourceUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl*
  name: SourceUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_SourceUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.SourceUrl
  nameWithType: NewsObj.SourceUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity
  name: TargetedCity
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_TargetedCity
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity
  nameWithType: NewsObj.TargetedCity
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity*
  name: TargetedCity
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_TargetedCity_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.TargetedCity
  nameWithType: NewsObj.TargetedCity
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant
  name: Tenant
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Tenant
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant
  nameWithType: NewsObj.Tenant
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant*
  name: Tenant
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Tenant_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Tenant
  nameWithType: NewsObj.Tenant
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title
  name: Title
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Title
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title
  nameWithType: NewsObj.Title
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title*
  name: Title
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Title_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Title
  nameWithType: NewsObj.Title
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers
  name: Trackers
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Trackers
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers
  nameWithType: NewsObj.Trackers
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers*
  name: Trackers
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Trackers_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Trackers
  nameWithType: NewsObj.Trackers
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version
  name: Version
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Version
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version
  nameWithType: NewsObj.Version
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version*
  name: Version
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_Version_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.Version
  nameWithType: NewsObj.Version
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType
  name: VideoAudioType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_VideoAudioType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType
  nameWithType: NewsObj.VideoAudioType
- uid: Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType*
  name: VideoAudioType
  href: api/Amiquin.Core.Services.ApiClients.Responses.NewsObj.html#Amiquin_Core_Services_ApiClients_Responses_NewsObj_VideoAudioType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.NewsObj.VideoAudioType
  nameWithType: NewsObj.VideoAudioType
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo
  name: PublisherInfo
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo
  nameWithType: PublisherInfo
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name
  name: Name
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_Name
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name
  nameWithType: PublisherInfo.Name
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name*
  name: Name
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_Name_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.Name
  nameWithType: PublisherInfo.Name
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl
  name: ProfileImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_ProfileImageUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl
  nameWithType: PublisherInfo.ProfileImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl*
  name: ProfileImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_ProfileImageUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ProfileImageUrl
  nameWithType: PublisherInfo.ProfileImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText
  name: SponsoredText
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_SponsoredText
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText
  nameWithType: PublisherInfo.SponsoredText
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText*
  name: SponsoredText
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_SponsoredText_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.SponsoredText
  nameWithType: PublisherInfo.SponsoredText
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl
  name: ThumbnailImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_ThumbnailImageUrl
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl
  nameWithType: PublisherInfo.ThumbnailImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl*
  name: ThumbnailImageUrl
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_ThumbnailImageUrl_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.ThumbnailImageUrl
  nameWithType: PublisherInfo.ThumbnailImageUrl
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId
  name: UserId
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_UserId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId
  nameWithType: PublisherInfo.UserId
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId*
  name: UserId
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_UserId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserId
  nameWithType: PublisherInfo.UserId
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType
  name: UserType
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_UserType
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType
  nameWithType: PublisherInfo.UserType
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType*
  name: UserType
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInfo_UserType_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInfo.UserType
  nameWithType: PublisherInfo.UserType
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta
  name: PublisherInteractionMeta
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html
  commentId: T:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta
  nameWithType: PublisherInteractionMeta
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed
  name: IsPublisherFollowed
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_IsPublisherFollowed
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed
  nameWithType: PublisherInteractionMeta.IsPublisherFollowed
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed*
  name: IsPublisherFollowed
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_IsPublisherFollowed_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.IsPublisherFollowed
  nameWithType: PublisherInteractionMeta.IsPublisherFollowed
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton
  name: ShowFollowButton
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_ShowFollowButton
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton
  nameWithType: PublisherInteractionMeta.ShowFollowButton
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton*
  name: ShowFollowButton
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_ShowFollowButton_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.ShowFollowButton
  nameWithType: PublisherInteractionMeta.ShowFollowButton
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId
  name: UserId
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_UserId
  commentId: P:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId
  nameWithType: PublisherInteractionMeta.UserId
- uid: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId*
  name: UserId
  href: api/Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.html#Amiquin_Core_Services_ApiClients_Responses_PublisherInteractionMeta_UserId_
  commentId: Overload:Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId
  isSpec: "True"
  fullName: Amiquin.Core.Services.ApiClients.Responses.PublisherInteractionMeta.UserId
  nameWithType: PublisherInteractionMeta.UserId
- uid: Amiquin.Core.Services.BotContext
  name: Amiquin.Core.Services.BotContext
  href: api/Amiquin.Core.Services.BotContext.html
  commentId: N:Amiquin.Core.Services.BotContext
  fullName: Amiquin.Core.Services.BotContext
  nameWithType: Amiquin.Core.Services.BotContext
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor
  name: BotContextAccessor
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html
  commentId: T:Amiquin.Core.Services.BotContext.BotContextAccessor
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor
  nameWithType: BotContextAccessor
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.#ctor
  name: BotContextAccessor()
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor__ctor
  commentId: M:Amiquin.Core.Services.BotContext.BotContextAccessor.#ctor
  name.vb: New()
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.BotContextAccessor()
  fullName.vb: Amiquin.Core.Services.BotContext.BotContextAccessor.New()
  nameWithType: BotContextAccessor.BotContextAccessor()
  nameWithType.vb: BotContextAccessor.New()
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.#ctor*
  name: BotContextAccessor
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor__ctor_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.BotContextAccessor
  fullName.vb: Amiquin.Core.Services.BotContext.BotContextAccessor.New
  nameWithType: BotContextAccessor.BotContextAccessor
  nameWithType.vb: BotContextAccessor.New
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.BotName
  name: BotName
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_BotName
  commentId: F:Amiquin.Core.Services.BotContext.BotContextAccessor.BotName
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.BotName
  nameWithType: BotContextAccessor.BotName
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.BotVersion
  name: BotVersion
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_BotVersion
  commentId: F:Amiquin.Core.Services.BotContext.BotContextAccessor.BotVersion
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.BotVersion
  nameWithType: BotContextAccessor.BotVersion
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Context
  name: Context
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Context
  commentId: P:Amiquin.Core.Services.BotContext.BotContextAccessor.Context
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Context
  nameWithType: BotContextAccessor.Context
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Context*
  name: Context
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Context_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.Context
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Context
  nameWithType: BotContextAccessor.Context
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt
  name: CreatedAt
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_CreatedAt
  commentId: P:Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt
  nameWithType: BotContextAccessor.CreatedAt
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt*
  name: CreatedAt
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_CreatedAt_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.CreatedAt
  nameWithType: BotContextAccessor.CreatedAt
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Finish
  name: Finish()
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Finish
  commentId: M:Amiquin.Core.Services.BotContext.BotContextAccessor.Finish
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Finish()
  nameWithType: BotContextAccessor.Finish()
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Finish*
  name: Finish
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Finish_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.Finish
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Finish
  nameWithType: BotContextAccessor.Finish
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt
  name: FinishedAt
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_FinishedAt
  commentId: P:Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt
  nameWithType: BotContextAccessor.FinishedAt
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt*
  name: FinishedAt
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_FinishedAt_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.FinishedAt
  nameWithType: BotContextAccessor.FinishedAt
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext,Amiquin.Core.Models.ServerMeta,Microsoft.Extensions.Configuration.IConfiguration)
  name: Initialize(ExtendedShardedInteractionContext, ServerMeta, IConfiguration)
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Initialize_Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_Amiquin_Core_Models_ServerMeta_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext,Amiquin.Core.Models.ServerMeta,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext, Amiquin.Core.Models.ServerMeta, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: BotContextAccessor.Initialize(ExtendedShardedInteractionContext, ServerMeta, IConfiguration)
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize*
  name: Initialize
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_Initialize_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.Initialize
  nameWithType: BotContextAccessor.Initialize
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId
  name: ServerId
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_ServerId
  commentId: P:Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId
  nameWithType: BotContextAccessor.ServerId
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId*
  name: ServerId
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_ServerId_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerId
  nameWithType: BotContextAccessor.ServerId
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta
  name: ServerMeta
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_ServerMeta
  commentId: P:Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta
  nameWithType: BotContextAccessor.ServerMeta
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta*
  name: ServerMeta
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_ServerMeta_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.ServerMeta
  nameWithType: BotContextAccessor.ServerMeta
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  name: SetContext(ExtendedShardedInteractionContext)
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_SetContext_Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_
  commentId: M:Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  nameWithType: BotContextAccessor.SetContext(ExtendedShardedInteractionContext)
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext*
  name: SetContext
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_SetContext_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.SetContext
  nameWithType: BotContextAccessor.SetContext
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta(Amiquin.Core.Models.ServerMeta)
  name: SetServerMeta(ServerMeta)
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_SetServerMeta_Amiquin_Core_Models_ServerMeta_
  commentId: M:Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta(Amiquin.Core.Models.ServerMeta)
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta(Amiquin.Core.Models.ServerMeta)
  nameWithType: BotContextAccessor.SetServerMeta(ServerMeta)
- uid: Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta*
  name: SetServerMeta
  href: api/Amiquin.Core.Services.BotContext.BotContextAccessor.html#Amiquin_Core_Services_BotContext_BotContextAccessor_SetServerMeta_
  commentId: Overload:Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotContext.BotContextAccessor.SetServerMeta
  nameWithType: BotContextAccessor.SetServerMeta
- uid: Amiquin.Core.Services.BotSession
  name: Amiquin.Core.Services.BotSession
  href: api/Amiquin.Core.Services.BotSession.html
  commentId: N:Amiquin.Core.Services.BotSession
  fullName: Amiquin.Core.Services.BotSession
  nameWithType: Amiquin.Core.Services.BotSession
- uid: Amiquin.Core.Services.BotSession.BotSessionService
  name: BotSessionService
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html
  commentId: T:Amiquin.Core.Services.BotSession.BotSessionService
  fullName: Amiquin.Core.Services.BotSession.BotSessionService
  nameWithType: BotSessionService
- uid: Amiquin.Core.Services.BotSession.BotSessionService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: BotSessionService(IConfiguration)
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Core.Services.BotSession.BotSessionService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotSessionService(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Amiquin.Core.Services.BotSession.BotSessionService.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: BotSessionService.BotSessionService(IConfiguration)
  nameWithType.vb: BotSessionService.New(IConfiguration)
- uid: Amiquin.Core.Services.BotSession.BotSessionService.#ctor*
  name: BotSessionService
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService__ctor_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotSessionService
  fullName.vb: Amiquin.Core.Services.BotSession.BotSessionService.New
  nameWithType: BotSessionService.BotSessionService
  nameWithType.vb: BotSessionService.New
- uid: Amiquin.Core.Services.BotSession.BotSessionService.BotName
  name: BotName
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_BotName
  commentId: P:Amiquin.Core.Services.BotSession.BotSessionService.BotName
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotName
  nameWithType: BotSessionService.BotName
- uid: Amiquin.Core.Services.BotSession.BotSessionService.BotName*
  name: BotName
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_BotName_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.BotName
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotName
  nameWithType: BotSessionService.BotName
- uid: Amiquin.Core.Services.BotSession.BotSessionService.BotVersion
  name: BotVersion
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_BotVersion
  commentId: P:Amiquin.Core.Services.BotSession.BotSessionService.BotVersion
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotVersion
  nameWithType: BotSessionService.BotVersion
- uid: Amiquin.Core.Services.BotSession.BotSessionService.BotVersion*
  name: BotVersion
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_BotVersion_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.BotVersion
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.BotVersion
  nameWithType: BotSessionService.BotVersion
- uid: Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds
  name: CurrentUpTimeInSeconds
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_CurrentUpTimeInSeconds
  commentId: P:Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds
  nameWithType: BotSessionService.CurrentUpTimeInSeconds
- uid: Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds*
  name: CurrentUpTimeInSeconds
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_CurrentUpTimeInSeconds_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.CurrentUpTimeInSeconds
  nameWithType: BotSessionService.CurrentUpTimeInSeconds
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync
  name: GetAvailableMemoryMBAsync()
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetAvailableMemoryMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync()
  nameWithType: BotSessionService.GetAvailableMemoryMBAsync()
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync*
  name: GetAvailableMemoryMBAsync
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetAvailableMemoryMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetAvailableMemoryMBAsync
  nameWithType: BotSessionService.GetAvailableMemoryMBAsync
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync
  name: GetCurrentCpuUsageAsync()
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetCurrentCpuUsageAsync
  commentId: M:Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync()
  nameWithType: BotSessionService.GetCurrentCpuUsageAsync()
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync*
  name: GetCurrentCpuUsageAsync
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetCurrentCpuUsageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetCurrentCpuUsageAsync
  nameWithType: BotSessionService.GetCurrentCpuUsageAsync
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync
  name: GetUsedMemoryMBAsync()
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetUsedMemoryMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync()
  nameWithType: BotSessionService.GetUsedMemoryMBAsync()
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync*
  name: GetUsedMemoryMBAsync
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetUsedMemoryMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryMBAsync
  nameWithType: BotSessionService.GetUsedMemoryMBAsync
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync
  name: GetUsedMemoryPercentageAsync()
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetUsedMemoryPercentageAsync
  commentId: M:Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync()
  nameWithType: BotSessionService.GetUsedMemoryPercentageAsync()
- uid: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync*
  name: GetUsedMemoryPercentageAsync
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_GetUsedMemoryPercentageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.GetUsedMemoryPercentageAsync
  nameWithType: BotSessionService.GetUsedMemoryPercentageAsync
- uid: Amiquin.Core.Services.BotSession.BotSessionService.StartedAt
  name: StartedAt
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_StartedAt
  commentId: P:Amiquin.Core.Services.BotSession.BotSessionService.StartedAt
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.StartedAt
  nameWithType: BotSessionService.StartedAt
- uid: Amiquin.Core.Services.BotSession.BotSessionService.StartedAt*
  name: StartedAt
  href: api/Amiquin.Core.Services.BotSession.BotSessionService.html#Amiquin_Core_Services_BotSession_BotSessionService_StartedAt_
  commentId: Overload:Amiquin.Core.Services.BotSession.BotSessionService.StartedAt
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.BotSessionService.StartedAt
  nameWithType: BotSessionService.StartedAt
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer
  name: IPerformanceAnalyzer
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html
  commentId: T:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer
  nameWithType: IPerformanceAnalyzer
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync
  name: GetApplicationMemoryUsagePercentageAsync()
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetApplicationMemoryUsagePercentageAsync
  commentId: M:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync()
  nameWithType: IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync()
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync*
  name: GetApplicationMemoryUsagePercentageAsync
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetApplicationMemoryUsagePercentageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync
  nameWithType: IPerformanceAnalyzer.GetApplicationMemoryUsagePercentageAsync
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync
  name: GetApplicationMemoryUsedMBAsync()
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetApplicationMemoryUsedMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync()
  nameWithType: IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync()
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync*
  name: GetApplicationMemoryUsedMBAsync
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetApplicationMemoryUsedMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync
  nameWithType: IPerformanceAnalyzer.GetApplicationMemoryUsedMBAsync
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync
  name: GetAvailableMemoryMBAsync()
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetAvailableMemoryMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync()
  nameWithType: IPerformanceAnalyzer.GetAvailableMemoryMBAsync()
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync*
  name: GetAvailableMemoryMBAsync
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetAvailableMemoryMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetAvailableMemoryMBAsync
  nameWithType: IPerformanceAnalyzer.GetAvailableMemoryMBAsync
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync
  name: GetCpuUsageAsync()
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetCpuUsageAsync
  commentId: M:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync()
  nameWithType: IPerformanceAnalyzer.GetCpuUsageAsync()
- uid: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync*
  name: GetCpuUsageAsync
  href: api/Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.html#Amiquin_Core_Services_BotSession_IPerformanceAnalyzer_GetCpuUsageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.IPerformanceAnalyzer.GetCpuUsageAsync
  nameWithType: IPerformanceAnalyzer.GetCpuUsageAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory
  name: PerformanceAnalyzerFactory
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.html
  commentId: T:Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory
  nameWithType: PerformanceAnalyzerFactory
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create
  name: Create()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerFactory_Create
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create()
  nameWithType: PerformanceAnalyzerFactory.Create()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create*
  name: Create
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerFactory_Create_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerFactory.Create
  nameWithType: PerformanceAnalyzerFactory.Create
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux
  name: PerformanceAnalyzerLinux
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html
  commentId: T:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux
  nameWithType: PerformanceAnalyzerLinux
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync
  name: GetApplicationMemoryUsagePercentageAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetApplicationMemoryUsagePercentageAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync()
  nameWithType: PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync*
  name: GetApplicationMemoryUsagePercentageAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetApplicationMemoryUsagePercentageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync
  nameWithType: PerformanceAnalyzerLinux.GetApplicationMemoryUsagePercentageAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync
  name: GetApplicationMemoryUsedMBAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetApplicationMemoryUsedMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync()
  nameWithType: PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync*
  name: GetApplicationMemoryUsedMBAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetApplicationMemoryUsedMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync
  nameWithType: PerformanceAnalyzerLinux.GetApplicationMemoryUsedMBAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync
  name: GetAvailableMemoryMBAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetAvailableMemoryMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync()
  nameWithType: PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync*
  name: GetAvailableMemoryMBAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetAvailableMemoryMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync
  nameWithType: PerformanceAnalyzerLinux.GetAvailableMemoryMBAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync
  name: GetCpuUsageAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetCpuUsageAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync()
  nameWithType: PerformanceAnalyzerLinux.GetCpuUsageAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync*
  name: GetCpuUsageAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerLinux_GetCpuUsageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerLinux.GetCpuUsageAsync
  nameWithType: PerformanceAnalyzerLinux.GetCpuUsageAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows
  name: PerformanceAnalyzerWindows
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html
  commentId: T:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows
  nameWithType: PerformanceAnalyzerWindows
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.#ctor
  name: PerformanceAnalyzerWindows()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows__ctor
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.#ctor
  name.vb: New()
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.PerformanceAnalyzerWindows()
  fullName.vb: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.New()
  nameWithType: PerformanceAnalyzerWindows.PerformanceAnalyzerWindows()
  nameWithType.vb: PerformanceAnalyzerWindows.New()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.#ctor*
  name: PerformanceAnalyzerWindows
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows__ctor_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.PerformanceAnalyzerWindows
  fullName.vb: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.New
  nameWithType: PerformanceAnalyzerWindows.PerformanceAnalyzerWindows
  nameWithType.vb: PerformanceAnalyzerWindows.New
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync
  name: GetApplicationMemoryUsagePercentageAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetApplicationMemoryUsagePercentageAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync()
  nameWithType: PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync*
  name: GetApplicationMemoryUsagePercentageAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetApplicationMemoryUsagePercentageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync
  nameWithType: PerformanceAnalyzerWindows.GetApplicationMemoryUsagePercentageAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync
  name: GetApplicationMemoryUsedMBAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetApplicationMemoryUsedMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync()
  nameWithType: PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync*
  name: GetApplicationMemoryUsedMBAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetApplicationMemoryUsedMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync
  nameWithType: PerformanceAnalyzerWindows.GetApplicationMemoryUsedMBAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync
  name: GetAvailableMemoryMBAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetAvailableMemoryMBAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync()
  nameWithType: PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync*
  name: GetAvailableMemoryMBAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetAvailableMemoryMBAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync
  nameWithType: PerformanceAnalyzerWindows.GetAvailableMemoryMBAsync
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync
  name: GetCpuUsageAsync()
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetCpuUsageAsync
  commentId: M:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync()
  nameWithType: PerformanceAnalyzerWindows.GetCpuUsageAsync()
- uid: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync*
  name: GetCpuUsageAsync
  href: api/Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.html#Amiquin_Core_Services_BotSession_PerformanceAnalyzerWindows_GetCpuUsageAsync_
  commentId: Overload:Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.BotSession.PerformanceAnalyzerWindows.GetCpuUsageAsync
  nameWithType: PerformanceAnalyzerWindows.GetCpuUsageAsync
- uid: Amiquin.Core.Services.Chat
  name: Amiquin.Core.Services.Chat
  href: api/Amiquin.Core.Services.Chat.html
  commentId: N:Amiquin.Core.Services.Chat
  fullName: Amiquin.Core.Services.Chat
  nameWithType: Amiquin.Core.Services.Chat
- uid: Amiquin.Core.Services.Chat.ChatCoreService
  name: ChatCoreService
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html
  commentId: T:Amiquin.Core.Services.Chat.ChatCoreService
  fullName: Amiquin.Core.Services.Chat.ChatCoreService
  nameWithType: ChatCoreService
- uid: Amiquin.Core.Services.Chat.ChatCoreService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.ChatCoreService},Amiquin.Core.Services.MessageCache.IMessageCacheService,OpenAI.Chat.ChatClient,Amiquin.Core.Services.Chat.IChatSemaphoreManager)
  name: ChatCoreService(ILogger<ChatCoreService>, IMessageCacheService, ChatClient, IChatSemaphoreManager)
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Chat_ChatCoreService__Amiquin_Core_Services_MessageCache_IMessageCacheService_OpenAI_Chat_ChatClient_Amiquin_Core_Services_Chat_IChatSemaphoreManager_
  commentId: M:Amiquin.Core.Services.Chat.ChatCoreService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.ChatCoreService},Amiquin.Core.Services.MessageCache.IMessageCacheService,OpenAI.Chat.ChatClient,Amiquin.Core.Services.Chat.IChatSemaphoreManager)
  name.vb: New(ILogger(Of ChatCoreService), IMessageCacheService, ChatClient, IChatSemaphoreManager)
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ChatCoreService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Chat.ChatCoreService>, Amiquin.Core.Services.MessageCache.IMessageCacheService, OpenAI.Chat.ChatClient, Amiquin.Core.Services.Chat.IChatSemaphoreManager)
  fullName.vb: Amiquin.Core.Services.Chat.ChatCoreService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Chat.ChatCoreService), Amiquin.Core.Services.MessageCache.IMessageCacheService, OpenAI.Chat.ChatClient, Amiquin.Core.Services.Chat.IChatSemaphoreManager)
  nameWithType: ChatCoreService.ChatCoreService(ILogger<ChatCoreService>, IMessageCacheService, ChatClient, IChatSemaphoreManager)
  nameWithType.vb: ChatCoreService.New(ILogger(Of ChatCoreService), IMessageCacheService, ChatClient, IChatSemaphoreManager)
- uid: Amiquin.Core.Services.Chat.ChatCoreService.#ctor*
  name: ChatCoreService
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService__ctor_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatCoreService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ChatCoreService
  fullName.vb: Amiquin.Core.Services.Chat.ChatCoreService.New
  nameWithType: ChatCoreService.ChatCoreService
  nameWithType.vb: ChatCoreService.New
- uid: Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name: ChatAsync(ulong, List<ChatMessage>, ChatMessage?)
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService_ChatAsync_System_UInt64_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__OpenAI_Chat_ChatMessage_
  commentId: M:Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name.vb: ChatAsync(ULong, List(Of ChatMessage), ChatMessage)
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync(ulong, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, OpenAI.Chat.ChatMessage?)
  fullName.vb: Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync(ULong, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), OpenAI.Chat.ChatMessage)
  nameWithType: ChatCoreService.ChatAsync(ulong, List<ChatMessage>, ChatMessage?)
  nameWithType.vb: ChatCoreService.ChatAsync(ULong, List(Of ChatMessage), ChatMessage)
- uid: Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync*
  name: ChatAsync
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService_ChatAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ChatAsync
  nameWithType: ChatCoreService.ChatAsync
- uid: Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync(System.String,OpenAI.Chat.ChatMessage,System.Int32)
  name: ExchangeMessageAsync(string, ChatMessage?, int)
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService_ExchangeMessageAsync_System_String_OpenAI_Chat_ChatMessage_System_Int32_
  commentId: M:Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync(System.String,OpenAI.Chat.ChatMessage,System.Int32)
  name.vb: ExchangeMessageAsync(String, ChatMessage, Integer)
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync(string, OpenAI.Chat.ChatMessage?, int)
  fullName.vb: Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync(String, OpenAI.Chat.ChatMessage, Integer)
  nameWithType: ChatCoreService.ExchangeMessageAsync(string, ChatMessage?, int)
  nameWithType.vb: ChatCoreService.ExchangeMessageAsync(String, ChatMessage, Integer)
- uid: Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync*
  name: ExchangeMessageAsync
  href: api/Amiquin.Core.Services.Chat.ChatCoreService.html#Amiquin_Core_Services_Chat_ChatCoreService_ExchangeMessageAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.ChatCoreService.ExchangeMessageAsync
  nameWithType: ChatCoreService.ExchangeMessageAsync
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager
  name: ChatSemaphoreManager
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html
  commentId: T:Amiquin.Core.Services.Chat.ChatSemaphoreManager
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager
  nameWithType: ChatSemaphoreManager
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.ChatSemaphoreManager})
  name: ChatSemaphoreManager(ILogger<ChatSemaphoreManager>)
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Chat_ChatSemaphoreManager__
  commentId: M:Amiquin.Core.Services.Chat.ChatSemaphoreManager.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.ChatSemaphoreManager})
  name.vb: New(ILogger(Of ChatSemaphoreManager))
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.ChatSemaphoreManager(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Chat.ChatSemaphoreManager>)
  fullName.vb: Amiquin.Core.Services.Chat.ChatSemaphoreManager.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Chat.ChatSemaphoreManager))
  nameWithType: ChatSemaphoreManager.ChatSemaphoreManager(ILogger<ChatSemaphoreManager>)
  nameWithType.vb: ChatSemaphoreManager.New(ILogger(Of ChatSemaphoreManager))
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.#ctor*
  name: ChatSemaphoreManager
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager__ctor_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatSemaphoreManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.ChatSemaphoreManager
  fullName.vb: Amiquin.Core.Services.Chat.ChatSemaphoreManager.New
  nameWithType: ChatSemaphoreManager.ChatSemaphoreManager
  nameWithType.vb: ChatSemaphoreManager.New
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore(System.UInt64)
  name: GetOrCreateInstanceSemaphore(ulong)
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager_GetOrCreateInstanceSemaphore_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore(System.UInt64)
  name.vb: GetOrCreateInstanceSemaphore(ULong)
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore(ULong)
  nameWithType: ChatSemaphoreManager.GetOrCreateInstanceSemaphore(ulong)
  nameWithType.vb: ChatSemaphoreManager.GetOrCreateInstanceSemaphore(ULong)
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore*
  name: GetOrCreateInstanceSemaphore
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager_GetOrCreateInstanceSemaphore_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateInstanceSemaphore
  nameWithType: ChatSemaphoreManager.GetOrCreateInstanceSemaphore
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore(System.UInt64)
  name: GetOrCreateVoiceSemaphore(ulong)
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager_GetOrCreateVoiceSemaphore_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore(System.UInt64)
  name.vb: GetOrCreateVoiceSemaphore(ULong)
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore(ULong)
  nameWithType: ChatSemaphoreManager.GetOrCreateVoiceSemaphore(ulong)
  nameWithType.vb: ChatSemaphoreManager.GetOrCreateVoiceSemaphore(ULong)
- uid: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore*
  name: GetOrCreateVoiceSemaphore
  href: api/Amiquin.Core.Services.Chat.ChatSemaphoreManager.html#Amiquin_Core_Services_Chat_ChatSemaphoreManager_GetOrCreateVoiceSemaphore_
  commentId: Overload:Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.ChatSemaphoreManager.GetOrCreateVoiceSemaphore
  nameWithType: ChatSemaphoreManager.GetOrCreateVoiceSemaphore
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService
  name: HistoryOptimizerService
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html
  commentId: T:Amiquin.Core.Services.Chat.HistoryOptimizerService
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService
  nameWithType: HistoryOptimizerService
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.HistoryOptimizerService},Amiquin.Core.Services.Chat.IChatCoreService,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions})
  name: HistoryOptimizerService(ILogger<HistoryOptimizerService>, IChatCoreService, IOptions<BotOptions>)
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Chat_HistoryOptimizerService__Amiquin_Core_Services_Chat_IChatCoreService_Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_BotOptions__
  commentId: M:Amiquin.Core.Services.Chat.HistoryOptimizerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.HistoryOptimizerService},Amiquin.Core.Services.Chat.IChatCoreService,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions})
  name.vb: New(ILogger(Of HistoryOptimizerService), IChatCoreService, IOptions(Of BotOptions))
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.HistoryOptimizerService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Chat.HistoryOptimizerService>, Amiquin.Core.Services.Chat.IChatCoreService, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.BotOptions>)
  fullName.vb: Amiquin.Core.Services.Chat.HistoryOptimizerService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Chat.HistoryOptimizerService), Amiquin.Core.Services.Chat.IChatCoreService, Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.BotOptions))
  nameWithType: HistoryOptimizerService.HistoryOptimizerService(ILogger<HistoryOptimizerService>, IChatCoreService, IOptions<BotOptions>)
  nameWithType.vb: HistoryOptimizerService.New(ILogger(Of HistoryOptimizerService), IChatCoreService, IOptions(Of BotOptions))
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.#ctor*
  name: HistoryOptimizerService
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService__ctor_
  commentId: Overload:Amiquin.Core.Services.Chat.HistoryOptimizerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.HistoryOptimizerService
  fullName.vb: Amiquin.Core.Services.Chat.HistoryOptimizerService.New
  nameWithType: HistoryOptimizerService.HistoryOptimizerService
  nameWithType.vb: HistoryOptimizerService.New
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory(System.Int32,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name: OptimizeMessageHistory(int, List<ChatMessage>, ChatMessage?)
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService_OptimizeMessageHistory_System_Int32_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__OpenAI_Chat_ChatMessage_
  commentId: M:Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory(System.Int32,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name.vb: OptimizeMessageHistory(Integer, List(Of ChatMessage), ChatMessage)
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory(int, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, OpenAI.Chat.ChatMessage?)
  fullName.vb: Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory(Integer, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), OpenAI.Chat.ChatMessage)
  nameWithType: HistoryOptimizerService.OptimizeMessageHistory(int, List<ChatMessage>, ChatMessage?)
  nameWithType.vb: HistoryOptimizerService.OptimizeMessageHistory(Integer, List(Of ChatMessage), ChatMessage)
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory*
  name: OptimizeMessageHistory
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService_OptimizeMessageHistory_
  commentId: Overload:Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.OptimizeMessageHistory
  nameWithType: HistoryOptimizerService.OptimizeMessageHistory
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  name: ShouldOptimizeMessageHistory(ChatTokenUsage)
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService_ShouldOptimizeMessageHistory_OpenAI_Chat_ChatTokenUsage_
  commentId: M:Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  nameWithType: HistoryOptimizerService.ShouldOptimizeMessageHistory(ChatTokenUsage)
- uid: Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory*
  name: ShouldOptimizeMessageHistory
  href: api/Amiquin.Core.Services.Chat.HistoryOptimizerService.html#Amiquin_Core_Services_Chat_HistoryOptimizerService_ShouldOptimizeMessageHistory_
  commentId: Overload:Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.HistoryOptimizerService.ShouldOptimizeMessageHistory
  nameWithType: HistoryOptimizerService.ShouldOptimizeMessageHistory
- uid: Amiquin.Core.Services.Chat.IChatCoreService
  name: IChatCoreService
  href: api/Amiquin.Core.Services.Chat.IChatCoreService.html
  commentId: T:Amiquin.Core.Services.Chat.IChatCoreService
  fullName: Amiquin.Core.Services.Chat.IChatCoreService
  nameWithType: IChatCoreService
- uid: Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name: ChatAsync(ulong, List<ChatMessage>, ChatMessage?)
  href: api/Amiquin.Core.Services.Chat.IChatCoreService.html#Amiquin_Core_Services_Chat_IChatCoreService_ChatAsync_System_UInt64_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__OpenAI_Chat_ChatMessage_
  commentId: M:Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name.vb: ChatAsync(ULong, List(Of ChatMessage), ChatMessage)
  fullName: Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync(ulong, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, OpenAI.Chat.ChatMessage?)
  fullName.vb: Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync(ULong, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), OpenAI.Chat.ChatMessage)
  nameWithType: IChatCoreService.ChatAsync(ulong, List<ChatMessage>, ChatMessage?)
  nameWithType.vb: IChatCoreService.ChatAsync(ULong, List(Of ChatMessage), ChatMessage)
- uid: Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync*
  name: ChatAsync
  href: api/Amiquin.Core.Services.Chat.IChatCoreService.html#Amiquin_Core_Services_Chat_IChatCoreService_ChatAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IChatCoreService.ChatAsync
  nameWithType: IChatCoreService.ChatAsync
- uid: Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync(System.String,OpenAI.Chat.ChatMessage,System.Int32)
  name: ExchangeMessageAsync(string, ChatMessage?, int)
  href: api/Amiquin.Core.Services.Chat.IChatCoreService.html#Amiquin_Core_Services_Chat_IChatCoreService_ExchangeMessageAsync_System_String_OpenAI_Chat_ChatMessage_System_Int32_
  commentId: M:Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync(System.String,OpenAI.Chat.ChatMessage,System.Int32)
  name.vb: ExchangeMessageAsync(String, ChatMessage, Integer)
  fullName: Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync(string, OpenAI.Chat.ChatMessage?, int)
  fullName.vb: Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync(String, OpenAI.Chat.ChatMessage, Integer)
  nameWithType: IChatCoreService.ExchangeMessageAsync(string, ChatMessage?, int)
  nameWithType.vb: IChatCoreService.ExchangeMessageAsync(String, ChatMessage, Integer)
- uid: Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync*
  name: ExchangeMessageAsync
  href: api/Amiquin.Core.Services.Chat.IChatCoreService.html#Amiquin_Core_Services_Chat_IChatCoreService_ExchangeMessageAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IChatCoreService.ExchangeMessageAsync
  nameWithType: IChatCoreService.ExchangeMessageAsync
- uid: Amiquin.Core.Services.Chat.IChatSemaphoreManager
  name: IChatSemaphoreManager
  href: api/Amiquin.Core.Services.Chat.IChatSemaphoreManager.html
  commentId: T:Amiquin.Core.Services.Chat.IChatSemaphoreManager
  fullName: Amiquin.Core.Services.Chat.IChatSemaphoreManager
  nameWithType: IChatSemaphoreManager
- uid: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore(System.UInt64)
  name: GetOrCreateInstanceSemaphore(ulong)
  href: api/Amiquin.Core.Services.Chat.IChatSemaphoreManager.html#Amiquin_Core_Services_Chat_IChatSemaphoreManager_GetOrCreateInstanceSemaphore_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore(System.UInt64)
  name.vb: GetOrCreateInstanceSemaphore(ULong)
  fullName: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore(ULong)
  nameWithType: IChatSemaphoreManager.GetOrCreateInstanceSemaphore(ulong)
  nameWithType.vb: IChatSemaphoreManager.GetOrCreateInstanceSemaphore(ULong)
- uid: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore*
  name: GetOrCreateInstanceSemaphore
  href: api/Amiquin.Core.Services.Chat.IChatSemaphoreManager.html#Amiquin_Core_Services_Chat_IChatSemaphoreManager_GetOrCreateInstanceSemaphore_
  commentId: Overload:Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateInstanceSemaphore
  nameWithType: IChatSemaphoreManager.GetOrCreateInstanceSemaphore
- uid: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore(System.UInt64)
  name: GetOrCreateVoiceSemaphore(ulong)
  href: api/Amiquin.Core.Services.Chat.IChatSemaphoreManager.html#Amiquin_Core_Services_Chat_IChatSemaphoreManager_GetOrCreateVoiceSemaphore_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore(System.UInt64)
  name.vb: GetOrCreateVoiceSemaphore(ULong)
  fullName: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore(ULong)
  nameWithType: IChatSemaphoreManager.GetOrCreateVoiceSemaphore(ulong)
  nameWithType.vb: IChatSemaphoreManager.GetOrCreateVoiceSemaphore(ULong)
- uid: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore*
  name: GetOrCreateVoiceSemaphore
  href: api/Amiquin.Core.Services.Chat.IChatSemaphoreManager.html#Amiquin_Core_Services_Chat_IChatSemaphoreManager_GetOrCreateVoiceSemaphore_
  commentId: Overload:Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IChatSemaphoreManager.GetOrCreateVoiceSemaphore
  nameWithType: IChatSemaphoreManager.GetOrCreateVoiceSemaphore
- uid: Amiquin.Core.Services.Chat.IHistoryOptimizerService
  name: IHistoryOptimizerService
  href: api/Amiquin.Core.Services.Chat.IHistoryOptimizerService.html
  commentId: T:Amiquin.Core.Services.Chat.IHistoryOptimizerService
  fullName: Amiquin.Core.Services.Chat.IHistoryOptimizerService
  nameWithType: IHistoryOptimizerService
- uid: Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory(System.Int32,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name: OptimizeMessageHistory(int, List<ChatMessage>, ChatMessage?)
  href: api/Amiquin.Core.Services.Chat.IHistoryOptimizerService.html#Amiquin_Core_Services_Chat_IHistoryOptimizerService_OptimizeMessageHistory_System_Int32_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__OpenAI_Chat_ChatMessage_
  commentId: M:Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory(System.Int32,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},OpenAI.Chat.ChatMessage)
  name.vb: OptimizeMessageHistory(Integer, List(Of ChatMessage), ChatMessage)
  fullName: Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory(int, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, OpenAI.Chat.ChatMessage?)
  fullName.vb: Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory(Integer, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), OpenAI.Chat.ChatMessage)
  nameWithType: IHistoryOptimizerService.OptimizeMessageHistory(int, List<ChatMessage>, ChatMessage?)
  nameWithType.vb: IHistoryOptimizerService.OptimizeMessageHistory(Integer, List(Of ChatMessage), ChatMessage)
- uid: Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory*
  name: OptimizeMessageHistory
  href: api/Amiquin.Core.Services.Chat.IHistoryOptimizerService.html#Amiquin_Core_Services_Chat_IHistoryOptimizerService_OptimizeMessageHistory_
  commentId: Overload:Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IHistoryOptimizerService.OptimizeMessageHistory
  nameWithType: IHistoryOptimizerService.OptimizeMessageHistory
- uid: Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  name: ShouldOptimizeMessageHistory(ChatTokenUsage)
  href: api/Amiquin.Core.Services.Chat.IHistoryOptimizerService.html#Amiquin_Core_Services_Chat_IHistoryOptimizerService_ShouldOptimizeMessageHistory_OpenAI_Chat_ChatTokenUsage_
  commentId: M:Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  fullName: Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory(OpenAI.Chat.ChatTokenUsage)
  nameWithType: IHistoryOptimizerService.ShouldOptimizeMessageHistory(ChatTokenUsage)
- uid: Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory*
  name: ShouldOptimizeMessageHistory
  href: api/Amiquin.Core.Services.Chat.IHistoryOptimizerService.html#Amiquin_Core_Services_Chat_IHistoryOptimizerService_ShouldOptimizeMessageHistory_
  commentId: Overload:Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IHistoryOptimizerService.ShouldOptimizeMessageHistory
  nameWithType: IHistoryOptimizerService.ShouldOptimizeMessageHistory
- uid: Amiquin.Core.Services.Chat.IPersonaChatService
  name: IPersonaChatService
  href: api/Amiquin.Core.Services.Chat.IPersonaChatService.html
  commentId: T:Amiquin.Core.Services.Chat.IPersonaChatService
  fullName: Amiquin.Core.Services.Chat.IPersonaChatService
  nameWithType: IPersonaChatService
- uid: Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync(System.UInt64,System.UInt64,System.UInt64,System.String)
  name: ChatAsync(ulong, ulong, ulong, string)
  href: api/Amiquin.Core.Services.Chat.IPersonaChatService.html#Amiquin_Core_Services_Chat_IPersonaChatService_ChatAsync_System_UInt64_System_UInt64_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync(System.UInt64,System.UInt64,System.UInt64,System.String)
  name.vb: ChatAsync(ULong, ULong, ULong, String)
  fullName: Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync(ulong, ulong, ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync(ULong, ULong, ULong, String)
  nameWithType: IPersonaChatService.ChatAsync(ulong, ulong, ulong, string)
  nameWithType.vb: IPersonaChatService.ChatAsync(ULong, ULong, ULong, String)
- uid: Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync*
  name: ChatAsync
  href: api/Amiquin.Core.Services.Chat.IPersonaChatService.html#Amiquin_Core_Services_Chat_IPersonaChatService_ChatAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IPersonaChatService.ChatAsync
  nameWithType: IPersonaChatService.ChatAsync
- uid: Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync(System.UInt64,System.String)
  name: ExchangeMessageAsync(ulong, string)
  href: api/Amiquin.Core.Services.Chat.IPersonaChatService.html#Amiquin_Core_Services_Chat_IPersonaChatService_ExchangeMessageAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync(System.UInt64,System.String)
  name.vb: ExchangeMessageAsync(ULong, String)
  fullName: Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync(ULong, String)
  nameWithType: IPersonaChatService.ExchangeMessageAsync(ulong, string)
  nameWithType.vb: IPersonaChatService.ExchangeMessageAsync(ULong, String)
- uid: Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync*
  name: ExchangeMessageAsync
  href: api/Amiquin.Core.Services.Chat.IPersonaChatService.html#Amiquin_Core_Services_Chat_IPersonaChatService_ExchangeMessageAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.IPersonaChatService.ExchangeMessageAsync
  nameWithType: IPersonaChatService.ExchangeMessageAsync
- uid: Amiquin.Core.Services.Chat.Model
  name: Amiquin.Core.Services.Chat.Model
  href: api/Amiquin.Core.Services.Chat.Model.html
  commentId: N:Amiquin.Core.Services.Chat.Model
  fullName: Amiquin.Core.Services.Chat.Model
  nameWithType: Amiquin.Core.Services.Chat.Model
- uid: Amiquin.Core.Services.Chat.Model.OptimizerResult
  name: OptimizerResult
  href: api/Amiquin.Core.Services.Chat.Model.OptimizerResult.html
  commentId: T:Amiquin.Core.Services.Chat.Model.OptimizerResult
  fullName: Amiquin.Core.Services.Chat.Model.OptimizerResult
  nameWithType: OptimizerResult
- uid: Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary
  name: MessagesSummary
  href: api/Amiquin.Core.Services.Chat.Model.OptimizerResult.html#Amiquin_Core_Services_Chat_Model_OptimizerResult_MessagesSummary
  commentId: P:Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary
  fullName: Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary
  nameWithType: OptimizerResult.MessagesSummary
- uid: Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary*
  name: MessagesSummary
  href: api/Amiquin.Core.Services.Chat.Model.OptimizerResult.html#Amiquin_Core_Services_Chat_Model_OptimizerResult_MessagesSummary_
  commentId: Overload:Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Model.OptimizerResult.MessagesSummary
  nameWithType: OptimizerResult.MessagesSummary
- uid: Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages
  name: RemovedMessages
  href: api/Amiquin.Core.Services.Chat.Model.OptimizerResult.html#Amiquin_Core_Services_Chat_Model_OptimizerResult_RemovedMessages
  commentId: P:Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages
  fullName: Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages
  nameWithType: OptimizerResult.RemovedMessages
- uid: Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages*
  name: RemovedMessages
  href: api/Amiquin.Core.Services.Chat.Model.OptimizerResult.html#Amiquin_Core_Services_Chat_Model_OptimizerResult_RemovedMessages_
  commentId: Overload:Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Model.OptimizerResult.RemovedMessages
  nameWithType: OptimizerResult.RemovedMessages
- uid: Amiquin.Core.Services.Chat.PersonaChatService
  name: PersonaChatService
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html
  commentId: T:Amiquin.Core.Services.Chat.PersonaChatService
  fullName: Amiquin.Core.Services.Chat.PersonaChatService
  nameWithType: PersonaChatService
- uid: Amiquin.Core.Services.Chat.PersonaChatService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.PersonaChatService},Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.Persona.IPersonaService,Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Chat.IHistoryOptimizerService,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions})
  name: PersonaChatService(ILogger<PersonaChatService>, IChatCoreService, IPersonaService, IMessageCacheService, IHistoryOptimizerService, IOptions<BotOptions>)
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Chat_PersonaChatService__Amiquin_Core_Services_Chat_IChatCoreService_Amiquin_Core_Services_Persona_IPersonaService_Amiquin_Core_Services_MessageCache_IMessageCacheService_Amiquin_Core_Services_Chat_IHistoryOptimizerService_Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_BotOptions__
  commentId: M:Amiquin.Core.Services.Chat.PersonaChatService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.PersonaChatService},Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.Persona.IPersonaService,Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Chat.IHistoryOptimizerService,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions})
  name.vb: New(ILogger(Of PersonaChatService), IChatCoreService, IPersonaService, IMessageCacheService, IHistoryOptimizerService, IOptions(Of BotOptions))
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.PersonaChatService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Chat.PersonaChatService>, Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.Persona.IPersonaService, Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Chat.IHistoryOptimizerService, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.BotOptions>)
  fullName.vb: Amiquin.Core.Services.Chat.PersonaChatService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Chat.PersonaChatService), Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.Persona.IPersonaService, Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Chat.IHistoryOptimizerService, Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.BotOptions))
  nameWithType: PersonaChatService.PersonaChatService(ILogger<PersonaChatService>, IChatCoreService, IPersonaService, IMessageCacheService, IHistoryOptimizerService, IOptions<BotOptions>)
  nameWithType.vb: PersonaChatService.New(ILogger(Of PersonaChatService), IChatCoreService, IPersonaService, IMessageCacheService, IHistoryOptimizerService, IOptions(Of BotOptions))
- uid: Amiquin.Core.Services.Chat.PersonaChatService.#ctor*
  name: PersonaChatService
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService__ctor_
  commentId: Overload:Amiquin.Core.Services.Chat.PersonaChatService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.PersonaChatService
  fullName.vb: Amiquin.Core.Services.Chat.PersonaChatService.New
  nameWithType: PersonaChatService.PersonaChatService
  nameWithType.vb: PersonaChatService.New
- uid: Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync(System.UInt64,System.UInt64,System.UInt64,System.String)
  name: ChatAsync(ulong, ulong, ulong, string)
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService_ChatAsync_System_UInt64_System_UInt64_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync(System.UInt64,System.UInt64,System.UInt64,System.String)
  name.vb: ChatAsync(ULong, ULong, ULong, String)
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync(ulong, ulong, ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync(ULong, ULong, ULong, String)
  nameWithType: PersonaChatService.ChatAsync(ulong, ulong, ulong, string)
  nameWithType.vb: PersonaChatService.ChatAsync(ULong, ULong, ULong, String)
- uid: Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync*
  name: ChatAsync
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService_ChatAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.ChatAsync
  nameWithType: PersonaChatService.ChatAsync
- uid: Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync(System.UInt64,System.String)
  name: ExchangeMessageAsync(ulong, string)
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService_ExchangeMessageAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync(System.UInt64,System.String)
  name.vb: ExchangeMessageAsync(ULong, String)
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync(ULong, String)
  nameWithType: PersonaChatService.ExchangeMessageAsync(ulong, string)
  nameWithType.vb: PersonaChatService.ExchangeMessageAsync(ULong, String)
- uid: Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync*
  name: ExchangeMessageAsync
  href: api/Amiquin.Core.Services.Chat.PersonaChatService.html#Amiquin_Core_Services_Chat_PersonaChatService_ExchangeMessageAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.PersonaChatService.ExchangeMessageAsync
  nameWithType: PersonaChatService.ExchangeMessageAsync
- uid: Amiquin.Core.Services.Chat.Toggle
  name: Amiquin.Core.Services.Chat.Toggle
  href: api/Amiquin.Core.Services.Chat.Toggle.html
  commentId: N:Amiquin.Core.Services.Chat.Toggle
  fullName: Amiquin.Core.Services.Chat.Toggle
  nameWithType: Amiquin.Core.Services.Chat.Toggle
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService
  name: IToggleService
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html
  commentId: T:Amiquin.Core.Services.Chat.Toggle.IToggleService
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService
  nameWithType: IToggleService
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync(System.UInt64)
  name: CreateServerTogglesIfNotExistsAsync(ulong)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_CreateServerTogglesIfNotExistsAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync(System.UInt64)
  name.vb: CreateServerTogglesIfNotExistsAsync(ULong)
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync(ULong)
  nameWithType: IToggleService.CreateServerTogglesIfNotExistsAsync(ulong)
  nameWithType.vb: IToggleService.CreateServerTogglesIfNotExistsAsync(ULong)
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync*
  name: CreateServerTogglesIfNotExistsAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_CreateServerTogglesIfNotExistsAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.CreateServerTogglesIfNotExistsAsync
  nameWithType: IToggleService.CreateServerTogglesIfNotExistsAsync
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId(System.UInt64)
  name: GetTogglesByServerId(ulong)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_GetTogglesByServerId_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId(System.UInt64)
  name.vb: GetTogglesByServerId(ULong)
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId(ULong)
  nameWithType: IToggleService.GetTogglesByServerId(ulong)
  nameWithType.vb: IToggleService.GetTogglesByServerId(ULong)
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId*
  name: GetTogglesByServerId
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_GetTogglesByServerId_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.GetTogglesByServerId
  nameWithType: IToggleService.GetTogglesByServerId
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync(System.UInt64,System.String)
  name: IsEnabledAsync(ulong, string)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_IsEnabledAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync(System.UInt64,System.String)
  name.vb: IsEnabledAsync(ULong, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync(ULong, String)
  nameWithType: IToggleService.IsEnabledAsync(ulong, string)
  nameWithType.vb: IToggleService.IsEnabledAsync(ULong, String)
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync*
  name: IsEnabledAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_IsEnabledAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.IsEnabledAsync
  nameWithType: IToggleService.IsEnabledAsync
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync(System.UInt64,System.String,System.Boolean,System.String)
  name: SetServerToggleAsync(ulong, string, bool, string?)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_SetServerToggleAsync_System_UInt64_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync(System.UInt64,System.String,System.Boolean,System.String)
  name.vb: SetServerToggleAsync(ULong, String, Boolean, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync(ulong, string, bool, string?)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync(ULong, String, Boolean, String)
  nameWithType: IToggleService.SetServerToggleAsync(ulong, string, bool, string?)
  nameWithType.vb: IToggleService.SetServerToggleAsync(ULong, String, Boolean, String)
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync*
  name: SetServerToggleAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_SetServerToggleAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerToggleAsync
  nameWithType: IToggleService.SetServerToggleAsync
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync(System.UInt64,System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.Boolean,System.String}})
  name: SetServerTogglesBulkAsync(ulong, Dictionary<string, (bool IsEnabled, string? Description)>)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_SetServerTogglesBulkAsync_System_UInt64_System_Collections_Generic_Dictionary_System_String_System_ValueTuple_System_Boolean_System_String___
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync(System.UInt64,System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.Boolean,System.String}})
  name.vb: SetServerTogglesBulkAsync(ULong, Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync(ulong, System.Collections.Generic.Dictionary<string, (bool IsEnabled, string? Description)>)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync(ULong, System.Collections.Generic.Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
  nameWithType: IToggleService.SetServerTogglesBulkAsync(ulong, Dictionary<string, (bool IsEnabled, string? Description)>)
  nameWithType.vb: IToggleService.SetServerTogglesBulkAsync(ULong, Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync*
  name: SetServerTogglesBulkAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_SetServerTogglesBulkAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.SetServerTogglesBulkAsync
  nameWithType: IToggleService.SetServerTogglesBulkAsync
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync(System.String,System.Boolean,System.String)
  name: UpdateAllTogglesAsync(string, bool, string?)
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_UpdateAllTogglesAsync_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync(System.String,System.Boolean,System.String)
  name.vb: UpdateAllTogglesAsync(String, Boolean, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync(string, bool, string?)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync(String, Boolean, String)
  nameWithType: IToggleService.UpdateAllTogglesAsync(string, bool, string?)
  nameWithType.vb: IToggleService.UpdateAllTogglesAsync(String, Boolean, String)
- uid: Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync*
  name: UpdateAllTogglesAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.IToggleService.html#Amiquin_Core_Services_Chat_Toggle_IToggleService_UpdateAllTogglesAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.IToggleService.UpdateAllTogglesAsync
  nameWithType: IToggleService.UpdateAllTogglesAsync
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService
  name: ToggleService
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html
  commentId: T:Amiquin.Core.Services.Chat.Toggle.ToggleService
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService
  nameWithType: ToggleService
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.Toggle.ToggleService},Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.IRepositories.IToggleRepository,Microsoft.Extensions.Caching.Memory.IMemoryCache)
  name: ToggleService(ILogger<ToggleService>, IServerMetaService, IToggleRepository, IMemoryCache)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Chat_Toggle_ToggleService__Amiquin_Core_Services_Meta_IServerMetaService_Amiquin_Core_IRepositories_IToggleRepository_Microsoft_Extensions_Caching_Memory_IMemoryCache_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Chat.Toggle.ToggleService},Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.IRepositories.IToggleRepository,Microsoft.Extensions.Caching.Memory.IMemoryCache)
  name.vb: New(ILogger(Of ToggleService), IServerMetaService, IToggleRepository, IMemoryCache)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.ToggleService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Chat.Toggle.ToggleService>, Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.IRepositories.IToggleRepository, Microsoft.Extensions.Caching.Memory.IMemoryCache)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Chat.Toggle.ToggleService), Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.IRepositories.IToggleRepository, Microsoft.Extensions.Caching.Memory.IMemoryCache)
  nameWithType: ToggleService.ToggleService(ILogger<ToggleService>, IServerMetaService, IToggleRepository, IMemoryCache)
  nameWithType.vb: ToggleService.New(ILogger(Of ToggleService), IServerMetaService, IToggleRepository, IMemoryCache)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.#ctor*
  name: ToggleService
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService__ctor_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.ToggleService
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.New
  nameWithType: ToggleService.ToggleService
  nameWithType.vb: ToggleService.New
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync(System.UInt64)
  name: CreateServerTogglesIfNotExistsAsync(ulong)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_CreateServerTogglesIfNotExistsAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync(System.UInt64)
  name.vb: CreateServerTogglesIfNotExistsAsync(ULong)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync(ULong)
  nameWithType: ToggleService.CreateServerTogglesIfNotExistsAsync(ulong)
  nameWithType.vb: ToggleService.CreateServerTogglesIfNotExistsAsync(ULong)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync*
  name: CreateServerTogglesIfNotExistsAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_CreateServerTogglesIfNotExistsAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.CreateServerTogglesIfNotExistsAsync
  nameWithType: ToggleService.CreateServerTogglesIfNotExistsAsync
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId(System.UInt64)
  name: GetTogglesByServerId(ulong)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_GetTogglesByServerId_System_UInt64_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId(System.UInt64)
  name.vb: GetTogglesByServerId(ULong)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId(ulong)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId(ULong)
  nameWithType: ToggleService.GetTogglesByServerId(ulong)
  nameWithType.vb: ToggleService.GetTogglesByServerId(ULong)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId*
  name: GetTogglesByServerId
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_GetTogglesByServerId_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.GetTogglesByServerId
  nameWithType: ToggleService.GetTogglesByServerId
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync(System.UInt64,System.String)
  name: IsEnabledAsync(ulong, string)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_IsEnabledAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync(System.UInt64,System.String)
  name.vb: IsEnabledAsync(ULong, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync(ULong, String)
  nameWithType: ToggleService.IsEnabledAsync(ulong, string)
  nameWithType.vb: ToggleService.IsEnabledAsync(ULong, String)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync*
  name: IsEnabledAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_IsEnabledAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.IsEnabledAsync
  nameWithType: ToggleService.IsEnabledAsync
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync(System.UInt64,System.String,System.Boolean,System.String)
  name: SetServerToggleAsync(ulong, string, bool, string?)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_SetServerToggleAsync_System_UInt64_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync(System.UInt64,System.String,System.Boolean,System.String)
  name.vb: SetServerToggleAsync(ULong, String, Boolean, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync(ulong, string, bool, string?)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync(ULong, String, Boolean, String)
  nameWithType: ToggleService.SetServerToggleAsync(ulong, string, bool, string?)
  nameWithType.vb: ToggleService.SetServerToggleAsync(ULong, String, Boolean, String)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync*
  name: SetServerToggleAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_SetServerToggleAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerToggleAsync
  nameWithType: ToggleService.SetServerToggleAsync
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync(System.UInt64,System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.Boolean,System.String}})
  name: SetServerTogglesBulkAsync(ulong, Dictionary<string, (bool IsEnabled, string? Description)>)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_SetServerTogglesBulkAsync_System_UInt64_System_Collections_Generic_Dictionary_System_String_System_ValueTuple_System_Boolean_System_String___
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync(System.UInt64,System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.Boolean,System.String}})
  name.vb: SetServerTogglesBulkAsync(ULong, Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync(ulong, System.Collections.Generic.Dictionary<string, (bool IsEnabled, string? Description)>)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync(ULong, System.Collections.Generic.Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
  nameWithType: ToggleService.SetServerTogglesBulkAsync(ulong, Dictionary<string, (bool IsEnabled, string? Description)>)
  nameWithType.vb: ToggleService.SetServerTogglesBulkAsync(ULong, Dictionary(Of String, (IsEnabled As Boolean, Description As String)))
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync*
  name: SetServerTogglesBulkAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_SetServerTogglesBulkAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.SetServerTogglesBulkAsync
  nameWithType: ToggleService.SetServerTogglesBulkAsync
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync(System.String,System.Boolean,System.String)
  name: UpdateAllTogglesAsync(string, bool, string?)
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_UpdateAllTogglesAsync_System_String_System_Boolean_System_String_
  commentId: M:Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync(System.String,System.Boolean,System.String)
  name.vb: UpdateAllTogglesAsync(String, Boolean, String)
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync(string, bool, string?)
  fullName.vb: Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync(String, Boolean, String)
  nameWithType: ToggleService.UpdateAllTogglesAsync(string, bool, string?)
  nameWithType.vb: ToggleService.UpdateAllTogglesAsync(String, Boolean, String)
- uid: Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync*
  name: UpdateAllTogglesAsync
  href: api/Amiquin.Core.Services.Chat.Toggle.ToggleService.html#Amiquin_Core_Services_Chat_Toggle_ToggleService_UpdateAllTogglesAsync_
  commentId: Overload:Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Chat.Toggle.ToggleService.UpdateAllTogglesAsync
  nameWithType: ToggleService.UpdateAllTogglesAsync
- uid: Amiquin.Core.Services.CommandHandler
  name: Amiquin.Core.Services.CommandHandler
  href: api/Amiquin.Core.Services.CommandHandler.html
  commentId: N:Amiquin.Core.Services.CommandHandler
  fullName: Amiquin.Core.Services.CommandHandler
  nameWithType: Amiquin.Core.Services.CommandHandler
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService
  name: CommandHandlerService
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html
  commentId: T:Amiquin.Core.Services.CommandHandler.CommandHandlerService
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService
  nameWithType: CommandHandlerService
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.CommandHandler.ICommandHandlerService},Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.IServiceProvider,Discord.WebSocket.DiscordShardedClient,Discord.Interactions.InteractionService)
  name: CommandHandlerService(ILogger<ICommandHandlerService>, IServiceScopeFactory, IServiceProvider, DiscordShardedClient, InteractionService)
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_CommandHandler_ICommandHandlerService__Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_System_IServiceProvider_Discord_WebSocket_DiscordShardedClient_Discord_Interactions_InteractionService_
  commentId: M:Amiquin.Core.Services.CommandHandler.CommandHandlerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.CommandHandler.ICommandHandlerService},Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.IServiceProvider,Discord.WebSocket.DiscordShardedClient,Discord.Interactions.InteractionService)
  name.vb: New(ILogger(Of ICommandHandlerService), IServiceScopeFactory, IServiceProvider, DiscordShardedClient, InteractionService)
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.CommandHandlerService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.CommandHandler.ICommandHandlerService>, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, System.IServiceProvider, Discord.WebSocket.DiscordShardedClient, Discord.Interactions.InteractionService)
  fullName.vb: Amiquin.Core.Services.CommandHandler.CommandHandlerService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.CommandHandler.ICommandHandlerService), Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, System.IServiceProvider, Discord.WebSocket.DiscordShardedClient, Discord.Interactions.InteractionService)
  nameWithType: CommandHandlerService.CommandHandlerService(ILogger<ICommandHandlerService>, IServiceScopeFactory, IServiceProvider, DiscordShardedClient, InteractionService)
  nameWithType.vb: CommandHandlerService.New(ILogger(Of ICommandHandlerService), IServiceScopeFactory, IServiceProvider, DiscordShardedClient, InteractionService)
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.#ctor*
  name: CommandHandlerService
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService__ctor_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.CommandHandlerService
  fullName.vb: Amiquin.Core.Services.CommandHandler.CommandHandlerService.New
  nameWithType: CommandHandlerService.CommandHandlerService
  nameWithType.vb: CommandHandlerService.New
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands
  name: Commands
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_Commands
  commentId: P:Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands
  nameWithType: CommandHandlerService.Commands
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands*
  name: Commands
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_Commands_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.Commands
  nameWithType: CommandHandlerService.Commands
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands
  name: EphemeralCommands
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_EphemeralCommands
  commentId: P:Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands
  nameWithType: CommandHandlerService.EphemeralCommands
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands*
  name: EphemeralCommands
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_EphemeralCommands_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.EphemeralCommands
  nameWithType: CommandHandlerService.EphemeralCommands
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  name: HandleCommandAsync(SocketInteraction)
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_HandleCommandAsync_Discord_WebSocket_SocketInteraction_
  commentId: M:Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  nameWithType: CommandHandlerService.HandleCommandAsync(SocketInteraction)
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync*
  name: HandleCommandAsync
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_HandleCommandAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleCommandAsync
  nameWithType: CommandHandlerService.HandleCommandAsync
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  name: HandleSlashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_HandleSlashCommandExecutedAsync_Discord_Interactions_SlashCommandInfo_Discord_IInteractionContext_Discord_Interactions_IResult_
  commentId: M:Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo, Discord.IInteractionContext, Discord.Interactions.IResult)
  nameWithType: CommandHandlerService.HandleSlashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync*
  name: HandleSlashCommandExecutedAsync
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_HandleSlashCommandExecutedAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.HandleSlashCommandExecutedAsync
  nameWithType: CommandHandlerService.HandleSlashCommandExecutedAsync
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync
  name: InitializeAsync()
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_InitializeAsync
  commentId: M:Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync()
  nameWithType: CommandHandlerService.InitializeAsync()
- uid: Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync*
  name: InitializeAsync
  href: api/Amiquin.Core.Services.CommandHandler.CommandHandlerService.html#Amiquin_Core_Services_CommandHandler_CommandHandlerService_InitializeAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.CommandHandlerService.InitializeAsync
  nameWithType: CommandHandlerService.InitializeAsync
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService
  name: ICommandHandlerService
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html
  commentId: T:Amiquin.Core.Services.CommandHandler.ICommandHandlerService
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService
  nameWithType: ICommandHandlerService
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands
  name: Commands
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_Commands
  commentId: P:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands
  nameWithType: ICommandHandlerService.Commands
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands*
  name: Commands
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_Commands_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.Commands
  nameWithType: ICommandHandlerService.Commands
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands
  name: EphemeralCommands
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_EphemeralCommands
  commentId: P:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands
  nameWithType: ICommandHandlerService.EphemeralCommands
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands*
  name: EphemeralCommands
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_EphemeralCommands_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.EphemeralCommands
  nameWithType: ICommandHandlerService.EphemeralCommands
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  name: HandleCommandAsync(SocketInteraction)
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_HandleCommandAsync_Discord_WebSocket_SocketInteraction_
  commentId: M:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync(Discord.WebSocket.SocketInteraction)
  nameWithType: ICommandHandlerService.HandleCommandAsync(SocketInteraction)
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync*
  name: HandleCommandAsync
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_HandleCommandAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleCommandAsync
  nameWithType: ICommandHandlerService.HandleCommandAsync
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  name: HandleSlashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_HandleSlashCommandExecutedAsync_Discord_Interactions_SlashCommandInfo_Discord_IInteractionContext_Discord_Interactions_IResult_
  commentId: M:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo, Discord.IInteractionContext, Discord.Interactions.IResult)
  nameWithType: ICommandHandlerService.HandleSlashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync*
  name: HandleSlashCommandExecutedAsync
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_HandleSlashCommandExecutedAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.HandleSlashCommandExecutedAsync
  nameWithType: ICommandHandlerService.HandleSlashCommandExecutedAsync
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync
  name: InitializeAsync()
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_InitializeAsync
  commentId: M:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync()
  nameWithType: ICommandHandlerService.InitializeAsync()
- uid: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync*
  name: InitializeAsync
  href: api/Amiquin.Core.Services.CommandHandler.ICommandHandlerService.html#Amiquin_Core_Services_CommandHandler_ICommandHandlerService_InitializeAsync_
  commentId: Overload:Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.CommandHandler.ICommandHandlerService.InitializeAsync
  nameWithType: ICommandHandlerService.InitializeAsync
- uid: Amiquin.Core.Services.EventHandler
  name: Amiquin.Core.Services.EventHandler
  href: api/Amiquin.Core.Services.EventHandler.html
  commentId: N:Amiquin.Core.Services.EventHandler
  fullName: Amiquin.Core.Services.EventHandler
  nameWithType: Amiquin.Core.Services.EventHandler
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService
  name: EventHandlerService
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html
  commentId: T:Amiquin.Core.Services.EventHandler.EventHandlerService
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService
  nameWithType: EventHandlerService
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.EventHandler.EventHandlerService},Amiquin.Core.Services.CommandHandler.ICommandHandlerService,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  name: EventHandlerService(ILogger<EventHandlerService>, ICommandHandlerService, IServiceScopeFactory)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_EventHandler_EventHandlerService__Amiquin_Core_Services_CommandHandler_ICommandHandlerService_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.EventHandler.EventHandlerService},Amiquin.Core.Services.CommandHandler.ICommandHandlerService,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  name.vb: New(ILogger(Of EventHandlerService), ICommandHandlerService, IServiceScopeFactory)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.EventHandlerService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.EventHandler.EventHandlerService>, Amiquin.Core.Services.CommandHandler.ICommandHandlerService, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  fullName.vb: Amiquin.Core.Services.EventHandler.EventHandlerService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.EventHandler.EventHandlerService), Amiquin.Core.Services.CommandHandler.ICommandHandlerService, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)
  nameWithType: EventHandlerService.EventHandlerService(ILogger<EventHandlerService>, ICommandHandlerService, IServiceScopeFactory)
  nameWithType.vb: EventHandlerService.New(ILogger(Of EventHandlerService), ICommandHandlerService, IServiceScopeFactory)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.#ctor*
  name: EventHandlerService
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService__ctor_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.EventHandlerService
  fullName.vb: Amiquin.Core.Services.EventHandler.EventHandlerService.New
  nameWithType: EventHandlerService.EventHandlerService
  nameWithType.vb: EventHandlerService.New
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  name: OnBotJoinedAsync(SocketGuild)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnBotJoinedAsync_Discord_WebSocket_SocketGuild_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  nameWithType: EventHandlerService.OnBotJoinedAsync(SocketGuild)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync*
  name: OnBotJoinedAsync
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnBotJoinedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnBotJoinedAsync
  nameWithType: EventHandlerService.OnBotJoinedAsync
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync(Discord.LogMessage)
  name: OnClientLogAsync(LogMessage)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnClientLogAsync_Discord_LogMessage_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync(Discord.LogMessage)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync(Discord.LogMessage)
  nameWithType: EventHandlerService.OnClientLogAsync(LogMessage)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync*
  name: OnClientLogAsync
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnClientLogAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnClientLogAsync
  nameWithType: EventHandlerService.OnClientLogAsync
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  name: OnCommandCreatedAsync(SocketInteraction)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnCommandCreatedAsync_Discord_WebSocket_SocketInteraction_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  nameWithType: EventHandlerService.OnCommandCreatedAsync(SocketInteraction)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync*
  name: OnCommandCreatedAsync
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnCommandCreatedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnCommandCreatedAsync
  nameWithType: EventHandlerService.OnCommandCreatedAsync
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  name: OnShardReadyAsync(DiscordSocketClient)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnShardReadyAsync_Discord_WebSocket_DiscordSocketClient_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  nameWithType: EventHandlerService.OnShardReadyAsync(DiscordSocketClient)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync*
  name: OnShardReadyAsync
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnShardReadyAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShardReadyAsync
  nameWithType: EventHandlerService.OnShardReadyAsync
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  name: OnShashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnShashCommandExecutedAsync_Discord_Interactions_SlashCommandInfo_Discord_IInteractionContext_Discord_Interactions_IResult_
  commentId: M:Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo, Discord.IInteractionContext, Discord.Interactions.IResult)
  nameWithType: EventHandlerService.OnShashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
- uid: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync*
  name: OnShashCommandExecutedAsync
  href: api/Amiquin.Core.Services.EventHandler.EventHandlerService.html#Amiquin_Core_Services_EventHandler_EventHandlerService_OnShashCommandExecutedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.EventHandlerService.OnShashCommandExecutedAsync
  nameWithType: EventHandlerService.OnShashCommandExecutedAsync
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService
  name: IEventHandlerService
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html
  commentId: T:Amiquin.Core.Services.EventHandler.IEventHandlerService
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService
  nameWithType: IEventHandlerService
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  name: OnBotJoinedAsync(SocketGuild)
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnBotJoinedAsync_Discord_WebSocket_SocketGuild_
  commentId: M:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync(Discord.WebSocket.SocketGuild)
  nameWithType: IEventHandlerService.OnBotJoinedAsync(SocketGuild)
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync*
  name: OnBotJoinedAsync
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnBotJoinedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnBotJoinedAsync
  nameWithType: IEventHandlerService.OnBotJoinedAsync
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync(Discord.LogMessage)
  name: OnClientLogAsync(LogMessage)
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnClientLogAsync_Discord_LogMessage_
  commentId: M:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync(Discord.LogMessage)
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync(Discord.LogMessage)
  nameWithType: IEventHandlerService.OnClientLogAsync(LogMessage)
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync*
  name: OnClientLogAsync
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnClientLogAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnClientLogAsync
  nameWithType: IEventHandlerService.OnClientLogAsync
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  name: OnCommandCreatedAsync(SocketInteraction)
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnCommandCreatedAsync_Discord_WebSocket_SocketInteraction_
  commentId: M:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync(Discord.WebSocket.SocketInteraction)
  nameWithType: IEventHandlerService.OnCommandCreatedAsync(SocketInteraction)
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync*
  name: OnCommandCreatedAsync
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnCommandCreatedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnCommandCreatedAsync
  nameWithType: IEventHandlerService.OnCommandCreatedAsync
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  name: OnShardReadyAsync(DiscordSocketClient)
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnShardReadyAsync_Discord_WebSocket_DiscordSocketClient_
  commentId: M:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync(Discord.WebSocket.DiscordSocketClient)
  nameWithType: IEventHandlerService.OnShardReadyAsync(DiscordSocketClient)
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync*
  name: OnShardReadyAsync
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnShardReadyAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShardReadyAsync
  nameWithType: IEventHandlerService.OnShardReadyAsync
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  name: OnShashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnShashCommandExecutedAsync_Discord_Interactions_SlashCommandInfo_Discord_IInteractionContext_Discord_Interactions_IResult_
  commentId: M:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo,Discord.IInteractionContext,Discord.Interactions.IResult)
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync(Discord.Interactions.SlashCommandInfo, Discord.IInteractionContext, Discord.Interactions.IResult)
  nameWithType: IEventHandlerService.OnShashCommandExecutedAsync(SlashCommandInfo, IInteractionContext, IResult)
- uid: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync*
  name: OnShashCommandExecutedAsync
  href: api/Amiquin.Core.Services.EventHandler.IEventHandlerService.html#Amiquin_Core_Services_EventHandler_IEventHandlerService_OnShashCommandExecutedAsync_
  commentId: Overload:Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.EventHandler.IEventHandlerService.OnShashCommandExecutedAsync
  nameWithType: IEventHandlerService.OnShashCommandExecutedAsync
- uid: Amiquin.Core.Services.ExternalProcessRunner
  name: Amiquin.Core.Services.ExternalProcessRunner
  href: api/Amiquin.Core.Services.ExternalProcessRunner.html
  commentId: N:Amiquin.Core.Services.ExternalProcessRunner
  fullName: Amiquin.Core.Services.ExternalProcessRunner
  nameWithType: Amiquin.Core.Services.ExternalProcessRunner
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService
  name: ExternalProcessRunnerService
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html
  commentId: T:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService
  nameWithType: ExternalProcessRunnerService
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService})
  name: ExternalProcessRunnerService(ILogger<ExternalProcessRunnerService>)
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService__
  commentId: M:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService})
  name.vb: New(ILogger(Of ExternalProcessRunnerService))
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.ExternalProcessRunnerService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService>)
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService))
  nameWithType: ExternalProcessRunnerService.ExternalProcessRunnerService(ILogger<ExternalProcessRunnerService>)
  nameWithType.vb: ExternalProcessRunnerService.New(ILogger(Of ExternalProcessRunnerService))
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.#ctor*
  name: ExternalProcessRunnerService
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService__ctor_
  commentId: Overload:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.ExternalProcessRunnerService
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.New
  nameWithType: ExternalProcessRunnerService.ExternalProcessRunnerService
  nameWithType.vb: ExternalProcessRunnerService.New
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess(System.String)
  name: CreateFfmpegProcess(string)
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService_CreateFfmpegProcess_System_String_
  commentId: M:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess(System.String)
  name.vb: CreateFfmpegProcess(String)
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess(string)
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess(String)
  nameWithType: ExternalProcessRunnerService.CreateFfmpegProcess(string)
  nameWithType.vb: ExternalProcessRunnerService.CreateFfmpegProcess(String)
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess*
  name: CreateFfmpegProcess
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService_CreateFfmpegProcess_
  commentId: Overload:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess
  isSpec: "True"
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreateFfmpegProcess
  nameWithType: ExternalProcessRunnerService.CreateFfmpegProcess
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess(System.String,System.String,System.String)
  name: CreatePiperProcess(string, string, string)
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService_CreatePiperProcess_System_String_System_String_System_String_
  commentId: M:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess(System.String,System.String,System.String)
  name.vb: CreatePiperProcess(String, String, String)
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess(string, string, string)
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess(String, String, String)
  nameWithType: ExternalProcessRunnerService.CreatePiperProcess(string, string, string)
  nameWithType.vb: ExternalProcessRunnerService.CreatePiperProcess(String, String, String)
- uid: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess*
  name: CreatePiperProcess
  href: api/Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_ExternalProcessRunnerService_CreatePiperProcess_
  commentId: Overload:Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess
  isSpec: "True"
  fullName: Amiquin.Core.Services.ExternalProcessRunner.ExternalProcessRunnerService.CreatePiperProcess
  nameWithType: ExternalProcessRunnerService.CreatePiperProcess
- uid: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService
  name: IExternalProcessRunnerService
  href: api/Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.html
  commentId: T:Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService
  fullName: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService
  nameWithType: IExternalProcessRunnerService
- uid: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess(System.String)
  name: CreateFfmpegProcess(string)
  href: api/Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_IExternalProcessRunnerService_CreateFfmpegProcess_System_String_
  commentId: M:Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess(System.String)
  name.vb: CreateFfmpegProcess(String)
  fullName: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess(string)
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess(String)
  nameWithType: IExternalProcessRunnerService.CreateFfmpegProcess(string)
  nameWithType.vb: IExternalProcessRunnerService.CreateFfmpegProcess(String)
- uid: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess*
  name: CreateFfmpegProcess
  href: api/Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_IExternalProcessRunnerService_CreateFfmpegProcess_
  commentId: Overload:Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess
  isSpec: "True"
  fullName: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreateFfmpegProcess
  nameWithType: IExternalProcessRunnerService.CreateFfmpegProcess
- uid: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess(System.String,System.String,System.String)
  name: CreatePiperProcess(string, string, string)
  href: api/Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_IExternalProcessRunnerService_CreatePiperProcess_System_String_System_String_System_String_
  commentId: M:Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess(System.String,System.String,System.String)
  name.vb: CreatePiperProcess(String, String, String)
  fullName: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess(string, string, string)
  fullName.vb: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess(String, String, String)
  nameWithType: IExternalProcessRunnerService.CreatePiperProcess(string, string, string)
  nameWithType.vb: IExternalProcessRunnerService.CreatePiperProcess(String, String, String)
- uid: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess*
  name: CreatePiperProcess
  href: api/Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.html#Amiquin_Core_Services_ExternalProcessRunner_IExternalProcessRunnerService_CreatePiperProcess_
  commentId: Overload:Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess
  isSpec: "True"
  fullName: Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService.CreatePiperProcess
  nameWithType: IExternalProcessRunnerService.CreatePiperProcess
- uid: Amiquin.Core.Services.MessageCache
  name: Amiquin.Core.Services.MessageCache
  href: api/Amiquin.Core.Services.MessageCache.html
  commentId: N:Amiquin.Core.Services.MessageCache
  fullName: Amiquin.Core.Services.MessageCache
  nameWithType: Amiquin.Core.Services.MessageCache
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService
  name: IMessageCacheService
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html
  commentId: T:Amiquin.Core.Services.MessageCache.IMessageCacheService
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService
  nameWithType: IMessageCacheService
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},System.Collections.Generic.List{Amiquin.Core.Models.Message})
  name: AddChatExchangeAsync(ulong, List<ChatMessage>, List<Message>)
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_AddChatExchangeAsync_System_UInt64_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__System_Collections_Generic_List_Amiquin_Core_Models_Message__
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},System.Collections.Generic.List{Amiquin.Core.Models.Message})
  name.vb: AddChatExchangeAsync(ULong, List(Of ChatMessage), List(Of Message))
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync(ulong, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, System.Collections.Generic.List<Amiquin.Core.Models.Message>)
  fullName.vb: Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync(ULong, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), System.Collections.Generic.List(Of Amiquin.Core.Models.Message))
  nameWithType: IMessageCacheService.AddChatExchangeAsync(ulong, List<ChatMessage>, List<Message>)
  nameWithType.vb: IMessageCacheService.AddChatExchangeAsync(ULong, List(Of ChatMessage), List(Of Message))
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync*
  name: AddChatExchangeAsync
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_AddChatExchangeAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.AddChatExchangeAsync
  nameWithType: IMessageCacheService.AddChatExchangeAsync
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce
  name: ClearMessageCachce()
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ClearMessageCachce
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce()
  nameWithType: IMessageCacheService.ClearMessageCachce()
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce*
  name: ClearMessageCachce
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ClearMessageCachce_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearMessageCachce
  nameWithType: IMessageCacheService.ClearMessageCachce
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages(System.UInt64,System.Int32)
  name: ClearOldMessages(ulong, int)
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ClearOldMessages_System_UInt64_System_Int32_
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages(System.UInt64,System.Int32)
  name.vb: ClearOldMessages(ULong, Integer)
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages(ulong, int)
  fullName.vb: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages(ULong, Integer)
  nameWithType: IMessageCacheService.ClearOldMessages(ulong, int)
  nameWithType.vb: IMessageCacheService.ClearOldMessages(ULong, Integer)
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages*
  name: ClearOldMessages
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ClearOldMessages_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ClearOldMessages
  nameWithType: IMessageCacheService.ClearOldMessages
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount(System.UInt64)
  name: GetChatMessageCount(ulong)
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetChatMessageCount_System_UInt64_
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount(System.UInt64)
  name.vb: GetChatMessageCount(ULong)
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount(ulong)
  fullName.vb: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount(ULong)
  nameWithType: IMessageCacheService.GetChatMessageCount(ulong)
  nameWithType.vb: IMessageCacheService.GetChatMessageCount(ULong)
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount*
  name: GetChatMessageCount
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetChatMessageCount_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetChatMessageCount
  nameWithType: IMessageCacheService.GetChatMessageCount
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync(System.UInt64)
  name: GetOrCreateChatMessagesAsync(ulong)
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetOrCreateChatMessagesAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync(System.UInt64)
  name.vb: GetOrCreateChatMessagesAsync(ULong)
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync(ulong)
  fullName.vb: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync(ULong)
  nameWithType: IMessageCacheService.GetOrCreateChatMessagesAsync(ulong)
  nameWithType.vb: IMessageCacheService.GetOrCreateChatMessagesAsync(ULong)
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync*
  name: GetOrCreateChatMessagesAsync
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetOrCreateChatMessagesAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetOrCreateChatMessagesAsync
  nameWithType: IMessageCacheService.GetOrCreateChatMessagesAsync
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync
  name: GetPersonaCoreMessageAsync()
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetPersonaCoreMessageAsync
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync()
  nameWithType: IMessageCacheService.GetPersonaCoreMessageAsync()
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync*
  name: GetPersonaCoreMessageAsync
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetPersonaCoreMessageAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetPersonaCoreMessageAsync
  nameWithType: IMessageCacheService.GetPersonaCoreMessageAsync
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage
  name: GetServerJoinMessage()
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetServerJoinMessage
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage()
  nameWithType: IMessageCacheService.GetServerJoinMessage()
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage*
  name: GetServerJoinMessage
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_GetServerJoinMessage_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.GetServerJoinMessage
  nameWithType: IMessageCacheService.GetServerJoinMessage
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage(System.String,System.String,System.Int32)
  name: ModifyMessage(string, string, int)
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ModifyMessage_System_String_System_String_System_Int32_
  commentId: M:Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage(System.String,System.String,System.Int32)
  name.vb: ModifyMessage(String, String, Integer)
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage(string, string, int)
  fullName.vb: Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage(String, String, Integer)
  nameWithType: IMessageCacheService.ModifyMessage(string, string, int)
  nameWithType.vb: IMessageCacheService.ModifyMessage(String, String, Integer)
- uid: Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage*
  name: ModifyMessage
  href: api/Amiquin.Core.Services.MessageCache.IMessageCacheService.html#Amiquin_Core_Services_MessageCache_IMessageCacheService_ModifyMessage_
  commentId: Overload:Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.IMessageCacheService.ModifyMessage
  nameWithType: IMessageCacheService.ModifyMessage
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService
  name: MessageCacheService
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html
  commentId: T:Amiquin.Core.Services.MessageCache.MessageCacheService
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService
  nameWithType: MessageCacheService
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.IRepositories.IMessageRepository,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions},Microsoft.Extensions.Configuration.IConfiguration)
  name: MessageCacheService(IMemoryCache, IMessageRepository, IOptions<BotOptions>, IConfiguration)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService__ctor_Microsoft_Extensions_Caching_Memory_IMemoryCache_Amiquin_Core_IRepositories_IMessageRepository_Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_BotOptions__Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.IRepositories.IMessageRepository,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.BotOptions},Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IMemoryCache, IMessageRepository, IOptions(Of BotOptions), IConfiguration)
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.MessageCacheService(Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.IRepositories.IMessageRepository, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.BotOptions>, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.New(Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.IRepositories.IMessageRepository, Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.BotOptions), Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: MessageCacheService.MessageCacheService(IMemoryCache, IMessageRepository, IOptions<BotOptions>, IConfiguration)
  nameWithType.vb: MessageCacheService.New(IMemoryCache, IMessageRepository, IOptions(Of BotOptions), IConfiguration)
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.#ctor*
  name: MessageCacheService
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService__ctor_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.MessageCacheService
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.New
  nameWithType: MessageCacheService.MessageCacheService
  nameWithType.vb: MessageCacheService.New
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},System.Collections.Generic.List{Amiquin.Core.Models.Message})
  name: AddChatExchangeAsync(ulong, List<ChatMessage>, List<Message>)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_AddChatExchangeAsync_System_UInt64_System_Collections_Generic_List_OpenAI_Chat_ChatMessage__System_Collections_Generic_List_Amiquin_Core_Models_Message__
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync(System.UInt64,System.Collections.Generic.List{OpenAI.Chat.ChatMessage},System.Collections.Generic.List{Amiquin.Core.Models.Message})
  name.vb: AddChatExchangeAsync(ULong, List(Of ChatMessage), List(Of Message))
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync(ulong, System.Collections.Generic.List<OpenAI.Chat.ChatMessage>, System.Collections.Generic.List<Amiquin.Core.Models.Message>)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync(ULong, System.Collections.Generic.List(Of OpenAI.Chat.ChatMessage), System.Collections.Generic.List(Of Amiquin.Core.Models.Message))
  nameWithType: MessageCacheService.AddChatExchangeAsync(ulong, List<ChatMessage>, List<Message>)
  nameWithType.vb: MessageCacheService.AddChatExchangeAsync(ULong, List(Of ChatMessage), List(Of Message))
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync*
  name: AddChatExchangeAsync
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_AddChatExchangeAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.AddChatExchangeAsync
  nameWithType: MessageCacheService.AddChatExchangeAsync
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce
  name: ClearMessageCachce()
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ClearMessageCachce
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce()
  nameWithType: MessageCacheService.ClearMessageCachce()
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce*
  name: ClearMessageCachce
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ClearMessageCachce_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearMessageCachce
  nameWithType: MessageCacheService.ClearMessageCachce
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages(System.UInt64,System.Int32)
  name: ClearOldMessages(ulong, int)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ClearOldMessages_System_UInt64_System_Int32_
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages(System.UInt64,System.Int32)
  name.vb: ClearOldMessages(ULong, Integer)
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages(ulong, int)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages(ULong, Integer)
  nameWithType: MessageCacheService.ClearOldMessages(ulong, int)
  nameWithType.vb: MessageCacheService.ClearOldMessages(ULong, Integer)
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages*
  name: ClearOldMessages
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ClearOldMessages_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ClearOldMessages
  nameWithType: MessageCacheService.ClearOldMessages
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount(System.UInt64)
  name: GetChatMessageCount(ulong)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetChatMessageCount_System_UInt64_
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount(System.UInt64)
  name.vb: GetChatMessageCount(ULong)
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount(ulong)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount(ULong)
  nameWithType: MessageCacheService.GetChatMessageCount(ulong)
  nameWithType.vb: MessageCacheService.GetChatMessageCount(ULong)
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount*
  name: GetChatMessageCount
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetChatMessageCount_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetChatMessageCount
  nameWithType: MessageCacheService.GetChatMessageCount
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync(System.UInt64)
  name: GetOrCreateChatMessagesAsync(ulong)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetOrCreateChatMessagesAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync(System.UInt64)
  name.vb: GetOrCreateChatMessagesAsync(ULong)
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync(ulong)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync(ULong)
  nameWithType: MessageCacheService.GetOrCreateChatMessagesAsync(ulong)
  nameWithType.vb: MessageCacheService.GetOrCreateChatMessagesAsync(ULong)
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync*
  name: GetOrCreateChatMessagesAsync
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetOrCreateChatMessagesAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetOrCreateChatMessagesAsync
  nameWithType: MessageCacheService.GetOrCreateChatMessagesAsync
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync
  name: GetPersonaCoreMessageAsync()
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetPersonaCoreMessageAsync
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync()
  nameWithType: MessageCacheService.GetPersonaCoreMessageAsync()
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync*
  name: GetPersonaCoreMessageAsync
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetPersonaCoreMessageAsync_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetPersonaCoreMessageAsync
  nameWithType: MessageCacheService.GetPersonaCoreMessageAsync
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage
  name: GetServerJoinMessage()
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetServerJoinMessage
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage()
  nameWithType: MessageCacheService.GetServerJoinMessage()
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage*
  name: GetServerJoinMessage
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_GetServerJoinMessage_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.GetServerJoinMessage
  nameWithType: MessageCacheService.GetServerJoinMessage
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage(System.String,System.String,System.Int32)
  name: ModifyMessage(string, string, int)
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ModifyMessage_System_String_System_String_System_Int32_
  commentId: M:Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage(System.String,System.String,System.Int32)
  name.vb: ModifyMessage(String, String, Integer)
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage(string, string, int)
  fullName.vb: Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage(String, String, Integer)
  nameWithType: MessageCacheService.ModifyMessage(string, string, int)
  nameWithType.vb: MessageCacheService.ModifyMessage(String, String, Integer)
- uid: Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage*
  name: ModifyMessage
  href: api/Amiquin.Core.Services.MessageCache.MessageCacheService.html#Amiquin_Core_Services_MessageCache_MessageCacheService_ModifyMessage_
  commentId: Overload:Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage
  isSpec: "True"
  fullName: Amiquin.Core.Services.MessageCache.MessageCacheService.ModifyMessage
  nameWithType: MessageCacheService.ModifyMessage
- uid: Amiquin.Core.Services.Meta
  name: Amiquin.Core.Services.Meta
  href: api/Amiquin.Core.Services.Meta.html
  commentId: N:Amiquin.Core.Services.Meta
  fullName: Amiquin.Core.Services.Meta
  nameWithType: Amiquin.Core.Services.Meta
- uid: Amiquin.Core.Services.Meta.IServerMetaService
  name: IServerMetaService
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html
  commentId: T:Amiquin.Core.Services.Meta.IServerMetaService
  fullName: Amiquin.Core.Services.Meta.IServerMetaService
  nameWithType: IServerMetaService
- uid: Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync(System.UInt64,System.String)
  name: CreateServerMetaAsync(ulong, string)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_CreateServerMetaAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync(System.UInt64,System.String)
  name.vb: CreateServerMetaAsync(ULong, String)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync(ULong, String)
  nameWithType: IServerMetaService.CreateServerMetaAsync(ulong, string)
  nameWithType.vb: IServerMetaService.CreateServerMetaAsync(ULong, String)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync*
  name: CreateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_CreateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.CreateServerMetaAsync
  nameWithType: IServerMetaService.CreateServerMetaAsync
- uid: Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync(System.UInt64)
  name: DeleteServerMetaAsync(ulong)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_DeleteServerMetaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync(System.UInt64)
  name.vb: DeleteServerMetaAsync(ULong)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync(ULong)
  nameWithType: IServerMetaService.DeleteServerMetaAsync(ulong)
  nameWithType.vb: IServerMetaService.DeleteServerMetaAsync(ULong)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync*
  name: DeleteServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_DeleteServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.DeleteServerMetaAsync
  nameWithType: IServerMetaService.DeleteServerMetaAsync
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync
  name: GetAllServerMetasAsync()
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetAllServerMetasAsync
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync()
  nameWithType: IServerMetaService.GetAllServerMetasAsync()
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync*
  name: GetAllServerMetasAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetAllServerMetasAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetAllServerMetasAsync
  nameWithType: IServerMetaService.GetAllServerMetasAsync
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  name: GetOrCreateServerMetaAsync(ExtendedShardedInteractionContext)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetOrCreateServerMetaAsync_Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  nameWithType: IServerMetaService.GetOrCreateServerMetaAsync(ExtendedShardedInteractionContext)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync*
  name: GetOrCreateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetOrCreateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetOrCreateServerMetaAsync
  nameWithType: IServerMetaService.GetOrCreateServerMetaAsync
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(System.UInt64)
  name: GetServerMetaAsync(ulong)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetServerMetaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(System.UInt64)
  name.vb: GetServerMetaAsync(ULong)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(ULong)
  nameWithType: IServerMetaService.GetServerMetaAsync(ulong)
  nameWithType.vb: IServerMetaService.GetServerMetaAsync(ULong)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(System.UInt64,System.Boolean)
  name: GetServerMetaAsync(ulong, bool)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetServerMetaAsync_System_UInt64_System_Boolean_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(System.UInt64,System.Boolean)
  name.vb: GetServerMetaAsync(ULong, Boolean)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(ulong, bool)
  fullName.vb: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync(ULong, Boolean)
  nameWithType: IServerMetaService.GetServerMetaAsync(ulong, bool)
  nameWithType.vb: IServerMetaService.GetServerMetaAsync(ULong, Boolean)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync*
  name: GetServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_GetServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.GetServerMetaAsync
  nameWithType: IServerMetaService.GetServerMetaAsync
- uid: Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  name: UpdateServerMetaAsync(ServerMeta)
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_UpdateServerMetaAsync_Amiquin_Core_Models_ServerMeta_
  commentId: M:Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  nameWithType: IServerMetaService.UpdateServerMetaAsync(ServerMeta)
- uid: Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync*
  name: UpdateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.IServerMetaService.html#Amiquin_Core_Services_Meta_IServerMetaService_UpdateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.IServerMetaService.UpdateServerMetaAsync
  nameWithType: IServerMetaService.UpdateServerMetaAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService
  name: ServerMetaService
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html
  commentId: T:Amiquin.Core.Services.Meta.ServerMetaService
  fullName: Amiquin.Core.Services.Meta.ServerMetaService
  nameWithType: ServerMetaService
- uid: Amiquin.Core.Services.Meta.ServerMetaService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Meta.IServerMetaService},Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.IRepositories.IServerMetaRepository)
  name: ServerMetaService(ILogger<IServerMetaService>, IMemoryCache, IServerMetaRepository)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Meta_IServerMetaService__Microsoft_Extensions_Caching_Memory_IMemoryCache_Amiquin_Core_IRepositories_IServerMetaRepository_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Meta.IServerMetaService},Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.IRepositories.IServerMetaRepository)
  name.vb: New(ILogger(Of IServerMetaService), IMemoryCache, IServerMetaRepository)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.ServerMetaService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Meta.IServerMetaService>, Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.IRepositories.IServerMetaRepository)
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Meta.IServerMetaService), Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.IRepositories.IServerMetaRepository)
  nameWithType: ServerMetaService.ServerMetaService(ILogger<IServerMetaService>, IMemoryCache, IServerMetaRepository)
  nameWithType.vb: ServerMetaService.New(ILogger(Of IServerMetaService), IMemoryCache, IServerMetaRepository)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.#ctor*
  name: ServerMetaService
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService__ctor_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.ServerMetaService
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.New
  nameWithType: ServerMetaService.ServerMetaService
  nameWithType.vb: ServerMetaService.New
- uid: Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync(System.UInt64,System.String)
  name: CreateServerMetaAsync(ulong, string)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_CreateServerMetaAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync(System.UInt64,System.String)
  name.vb: CreateServerMetaAsync(ULong, String)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync(ULong, String)
  nameWithType: ServerMetaService.CreateServerMetaAsync(ulong, string)
  nameWithType.vb: ServerMetaService.CreateServerMetaAsync(ULong, String)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync*
  name: CreateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_CreateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.CreateServerMetaAsync
  nameWithType: ServerMetaService.CreateServerMetaAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync(System.UInt64)
  name: DeleteServerMetaAsync(ulong)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_DeleteServerMetaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync(System.UInt64)
  name.vb: DeleteServerMetaAsync(ULong)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync(ULong)
  nameWithType: ServerMetaService.DeleteServerMetaAsync(ulong)
  nameWithType.vb: ServerMetaService.DeleteServerMetaAsync(ULong)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync*
  name: DeleteServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_DeleteServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.DeleteServerMetaAsync
  nameWithType: ServerMetaService.DeleteServerMetaAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync
  name: GetAllServerMetasAsync()
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetAllServerMetasAsync
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync()
  nameWithType: ServerMetaService.GetAllServerMetasAsync()
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync*
  name: GetAllServerMetasAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetAllServerMetasAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetAllServerMetasAsync
  nameWithType: ServerMetaService.GetAllServerMetasAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  name: GetOrCreateServerMetaAsync(ExtendedShardedInteractionContext)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetOrCreateServerMetaAsync_Amiquin_Core_DiscordExtensions_ExtendedShardedInteractionContext_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync(Amiquin.Core.DiscordExtensions.ExtendedShardedInteractionContext)
  nameWithType: ServerMetaService.GetOrCreateServerMetaAsync(ExtendedShardedInteractionContext)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync*
  name: GetOrCreateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetOrCreateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetOrCreateServerMetaAsync
  nameWithType: ServerMetaService.GetOrCreateServerMetaAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(System.UInt64)
  name: GetServerMetaAsync(ulong)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetServerMetaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(System.UInt64)
  name.vb: GetServerMetaAsync(ULong)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(ULong)
  nameWithType: ServerMetaService.GetServerMetaAsync(ulong)
  nameWithType.vb: ServerMetaService.GetServerMetaAsync(ULong)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(System.UInt64,System.Boolean)
  name: GetServerMetaAsync(ulong, bool)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetServerMetaAsync_System_UInt64_System_Boolean_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(System.UInt64,System.Boolean)
  name.vb: GetServerMetaAsync(ULong, Boolean)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(ulong, bool)
  fullName.vb: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync(ULong, Boolean)
  nameWithType: ServerMetaService.GetServerMetaAsync(ulong, bool)
  nameWithType.vb: ServerMetaService.GetServerMetaAsync(ULong, Boolean)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync*
  name: GetServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_GetServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.GetServerMetaAsync
  nameWithType: ServerMetaService.GetServerMetaAsync
- uid: Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  name: UpdateServerMetaAsync(ServerMeta)
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_UpdateServerMetaAsync_Amiquin_Core_Models_ServerMeta_
  commentId: M:Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync(Amiquin.Core.Models.ServerMeta)
  nameWithType: ServerMetaService.UpdateServerMetaAsync(ServerMeta)
- uid: Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync*
  name: UpdateServerMetaAsync
  href: api/Amiquin.Core.Services.Meta.ServerMetaService.html#Amiquin_Core_Services_Meta_ServerMetaService_UpdateServerMetaAsync_
  commentId: Overload:Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Meta.ServerMetaService.UpdateServerMetaAsync
  nameWithType: ServerMetaService.UpdateServerMetaAsync
- uid: Amiquin.Core.Services.Nacho
  name: Amiquin.Core.Services.Nacho
  href: api/Amiquin.Core.Services.Nacho.html
  commentId: N:Amiquin.Core.Services.Nacho
  fullName: Amiquin.Core.Services.Nacho
  nameWithType: Amiquin.Core.Services.Nacho
- uid: Amiquin.Core.Services.Nacho.INachoService
  name: INachoService
  href: api/Amiquin.Core.Services.Nacho.INachoService.html
  commentId: T:Amiquin.Core.Services.Nacho.INachoService
  fullName: Amiquin.Core.Services.Nacho.INachoService
  nameWithType: INachoService
- uid: Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync(System.UInt64,System.UInt64,System.Int32)
  name: AddNachoAsync(ulong, ulong, int)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_AddNachoAsync_System_UInt64_System_UInt64_System_Int32_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync(System.UInt64,System.UInt64,System.Int32)
  name.vb: AddNachoAsync(ULong, ULong, Integer)
  fullName: Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync(ulong, ulong, int)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync(ULong, ULong, Integer)
  nameWithType: INachoService.AddNachoAsync(ulong, ulong, int)
  nameWithType.vb: INachoService.AddNachoAsync(ULong, ULong, Integer)
- uid: Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync*
  name: AddNachoAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_AddNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.AddNachoAsync
  nameWithType: INachoService.AddNachoAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync(System.UInt64)
  name: GetServerNachoCountAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetServerNachoCountAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync(System.UInt64)
  name.vb: GetServerNachoCountAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync(ULong)
  nameWithType: INachoService.GetServerNachoCountAsync(ulong)
  nameWithType.vb: INachoService.GetServerNachoCountAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync*
  name: GetServerNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetServerNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetServerNachoCountAsync
  nameWithType: INachoService.GetServerNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync
  name: GetTotalNachoCountAsync()
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetTotalNachoCountAsync
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync()
  nameWithType: INachoService.GetTotalNachoCountAsync()
- uid: Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync*
  name: GetTotalNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetTotalNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetTotalNachoCountAsync
  nameWithType: INachoService.GetTotalNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync(System.UInt64)
  name: GetUserNachoCountAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetUserNachoCountAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync(System.UInt64)
  name.vb: GetUserNachoCountAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync(ULong)
  nameWithType: INachoService.GetUserNachoCountAsync(ulong)
  nameWithType.vb: INachoService.GetUserNachoCountAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync*
  name: GetUserNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_GetUserNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.GetUserNachoCountAsync
  nameWithType: INachoService.GetUserNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync(System.UInt64)
  name: RemoveAllNachoAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveAllNachoAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync(System.UInt64)
  name.vb: RemoveAllNachoAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync(ULong)
  nameWithType: INachoService.RemoveAllNachoAsync(ulong)
  nameWithType.vb: INachoService.RemoveAllNachoAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync*
  name: RemoveAllNachoAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveAllNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveAllNachoAsync
  nameWithType: INachoService.RemoveAllNachoAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync(System.UInt64)
  name: RemoveAllServerNachoAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveAllServerNachoAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync(System.UInt64)
  name.vb: RemoveAllServerNachoAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync(ULong)
  nameWithType: INachoService.RemoveAllServerNachoAsync(ulong)
  nameWithType.vb: INachoService.RemoveAllServerNachoAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync*
  name: RemoveAllServerNachoAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveAllServerNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveAllServerNachoAsync
  nameWithType: INachoService.RemoveAllServerNachoAsync
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync(System.UInt64,System.UInt64)
  name: RemoveNachoAsync(ulong, ulong)
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveNachoAsync_System_UInt64_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync(System.UInt64,System.UInt64)
  name.vb: RemoveNachoAsync(ULong, ULong)
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync(ulong, ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync(ULong, ULong)
  nameWithType: INachoService.RemoveNachoAsync(ulong, ulong)
  nameWithType.vb: INachoService.RemoveNachoAsync(ULong, ULong)
- uid: Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync*
  name: RemoveNachoAsync
  href: api/Amiquin.Core.Services.Nacho.INachoService.html#Amiquin_Core_Services_Nacho_INachoService_RemoveNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.INachoService.RemoveNachoAsync
  nameWithType: INachoService.RemoveNachoAsync
- uid: Amiquin.Core.Services.Nacho.NachoService
  name: NachoService
  href: api/Amiquin.Core.Services.Nacho.NachoService.html
  commentId: T:Amiquin.Core.Services.Nacho.NachoService
  fullName: Amiquin.Core.Services.Nacho.NachoService
  nameWithType: NachoService
- uid: Amiquin.Core.Services.Nacho.NachoService.#ctor(Amiquin.Core.IRepositories.INachoRepository)
  name: NachoService(INachoRepository)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService__ctor_Amiquin_Core_IRepositories_INachoRepository_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.#ctor(Amiquin.Core.IRepositories.INachoRepository)
  name.vb: New(INachoRepository)
  fullName: Amiquin.Core.Services.Nacho.NachoService.NachoService(Amiquin.Core.IRepositories.INachoRepository)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.New(Amiquin.Core.IRepositories.INachoRepository)
  nameWithType: NachoService.NachoService(INachoRepository)
  nameWithType.vb: NachoService.New(INachoRepository)
- uid: Amiquin.Core.Services.Nacho.NachoService.#ctor*
  name: NachoService
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService__ctor_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Nacho.NachoService.NachoService
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.New
  nameWithType: NachoService.NachoService
  nameWithType.vb: NachoService.New
- uid: Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync(System.UInt64,System.UInt64,System.Int32)
  name: AddNachoAsync(ulong, ulong, int)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_AddNachoAsync_System_UInt64_System_UInt64_System_Int32_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync(System.UInt64,System.UInt64,System.Int32)
  name.vb: AddNachoAsync(ULong, ULong, Integer)
  fullName: Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync(ulong, ulong, int)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync(ULong, ULong, Integer)
  nameWithType: NachoService.AddNachoAsync(ulong, ulong, int)
  nameWithType.vb: NachoService.AddNachoAsync(ULong, ULong, Integer)
- uid: Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync*
  name: AddNachoAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_AddNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.AddNachoAsync
  nameWithType: NachoService.AddNachoAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync(System.UInt64)
  name: GetServerNachoCountAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetServerNachoCountAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync(System.UInt64)
  name.vb: GetServerNachoCountAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync(ULong)
  nameWithType: NachoService.GetServerNachoCountAsync(ulong)
  nameWithType.vb: NachoService.GetServerNachoCountAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync*
  name: GetServerNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetServerNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetServerNachoCountAsync
  nameWithType: NachoService.GetServerNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync
  name: GetTotalNachoCountAsync()
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetTotalNachoCountAsync
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync()
  nameWithType: NachoService.GetTotalNachoCountAsync()
- uid: Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync*
  name: GetTotalNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetTotalNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetTotalNachoCountAsync
  nameWithType: NachoService.GetTotalNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync(System.UInt64)
  name: GetUserNachoCountAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetUserNachoCountAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync(System.UInt64)
  name.vb: GetUserNachoCountAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync(ULong)
  nameWithType: NachoService.GetUserNachoCountAsync(ulong)
  nameWithType.vb: NachoService.GetUserNachoCountAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync*
  name: GetUserNachoCountAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_GetUserNachoCountAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.GetUserNachoCountAsync
  nameWithType: NachoService.GetUserNachoCountAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync(System.UInt64)
  name: RemoveAllNachoAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveAllNachoAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync(System.UInt64)
  name.vb: RemoveAllNachoAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync(ULong)
  nameWithType: NachoService.RemoveAllNachoAsync(ulong)
  nameWithType.vb: NachoService.RemoveAllNachoAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync*
  name: RemoveAllNachoAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveAllNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveAllNachoAsync
  nameWithType: NachoService.RemoveAllNachoAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync(System.UInt64)
  name: RemoveAllServerNachoAsync(ulong)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveAllServerNachoAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync(System.UInt64)
  name.vb: RemoveAllServerNachoAsync(ULong)
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync(ULong)
  nameWithType: NachoService.RemoveAllServerNachoAsync(ulong)
  nameWithType.vb: NachoService.RemoveAllServerNachoAsync(ULong)
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync*
  name: RemoveAllServerNachoAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveAllServerNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveAllServerNachoAsync
  nameWithType: NachoService.RemoveAllServerNachoAsync
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync(System.UInt64,System.UInt64)
  name: RemoveNachoAsync(ulong, ulong)
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveNachoAsync_System_UInt64_System_UInt64_
  commentId: M:Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync(System.UInt64,System.UInt64)
  name.vb: RemoveNachoAsync(ULong, ULong)
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync(ulong, ulong)
  fullName.vb: Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync(ULong, ULong)
  nameWithType: NachoService.RemoveNachoAsync(ulong, ulong)
  nameWithType.vb: NachoService.RemoveNachoAsync(ULong, ULong)
- uid: Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync*
  name: RemoveNachoAsync
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService_RemoveNachoAsync_
  commentId: Overload:Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Nacho.NachoService.RemoveNachoAsync
  nameWithType: NachoService.RemoveNachoAsync
- uid: Amiquin.Core.Services.Nacho.NachoService._nachoRepository
  name: _nachoRepository
  href: api/Amiquin.Core.Services.Nacho.NachoService.html#Amiquin_Core_Services_Nacho_NachoService__nachoRepository
  commentId: F:Amiquin.Core.Services.Nacho.NachoService._nachoRepository
  fullName: Amiquin.Core.Services.Nacho.NachoService._nachoRepository
  nameWithType: NachoService._nachoRepository
- uid: Amiquin.Core.Services.Persona
  name: Amiquin.Core.Services.Persona
  href: api/Amiquin.Core.Services.Persona.html
  commentId: N:Amiquin.Core.Services.Persona
  fullName: Amiquin.Core.Services.Persona
  nameWithType: Amiquin.Core.Services.Persona
- uid: Amiquin.Core.Services.Persona.IPersonaService
  name: IPersonaService
  href: api/Amiquin.Core.Services.Persona.IPersonaService.html
  commentId: T:Amiquin.Core.Services.Persona.IPersonaService
  fullName: Amiquin.Core.Services.Persona.IPersonaService
  nameWithType: IPersonaService
- uid: Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync(System.UInt64,System.String)
  name: AddSummaryAsync(ulong, string)
  href: api/Amiquin.Core.Services.Persona.IPersonaService.html#Amiquin_Core_Services_Persona_IPersonaService_AddSummaryAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync(System.UInt64,System.String)
  name.vb: AddSummaryAsync(ULong, String)
  fullName: Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync(ULong, String)
  nameWithType: IPersonaService.AddSummaryAsync(ulong, string)
  nameWithType.vb: IPersonaService.AddSummaryAsync(ULong, String)
- uid: Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync*
  name: AddSummaryAsync
  href: api/Amiquin.Core.Services.Persona.IPersonaService.html#Amiquin_Core_Services_Persona_IPersonaService_AddSummaryAsync_
  commentId: Overload:Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Persona.IPersonaService.AddSummaryAsync
  nameWithType: IPersonaService.AddSummaryAsync
- uid: Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync(System.UInt64)
  name: GetPersonaAsync(ulong)
  href: api/Amiquin.Core.Services.Persona.IPersonaService.html#Amiquin_Core_Services_Persona_IPersonaService_GetPersonaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync(System.UInt64)
  name.vb: GetPersonaAsync(ULong)
  fullName: Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync(ULong)
  nameWithType: IPersonaService.GetPersonaAsync(ulong)
  nameWithType.vb: IPersonaService.GetPersonaAsync(ULong)
- uid: Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync*
  name: GetPersonaAsync
  href: api/Amiquin.Core.Services.Persona.IPersonaService.html#Amiquin_Core_Services_Persona_IPersonaService_GetPersonaAsync_
  commentId: Overload:Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Persona.IPersonaService.GetPersonaAsync
  nameWithType: IPersonaService.GetPersonaAsync
- uid: Amiquin.Core.Services.Persona.PersonaService
  name: PersonaService
  href: api/Amiquin.Core.Services.Persona.PersonaService.html
  commentId: T:Amiquin.Core.Services.Persona.PersonaService
  fullName: Amiquin.Core.Services.Persona.PersonaService
  nameWithType: PersonaService
- uid: Amiquin.Core.Services.Persona.PersonaService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Persona.PersonaService},Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.ApiClients.INewsApiClient,Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.Services.Chat.IChatSemaphoreManager,Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.Services.BotContext.BotContextAccessor,Microsoft.Extensions.Configuration.IConfiguration)
  name: PersonaService(ILogger<PersonaService>, IMessageCacheService, IChatCoreService, INewsApiClient, IMemoryCache, IChatSemaphoreManager, IServerMetaService, BotContextAccessor, IConfiguration)
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Persona_PersonaService__Amiquin_Core_Services_MessageCache_IMessageCacheService_Amiquin_Core_Services_Chat_IChatCoreService_Amiquin_Core_Services_ApiClients_INewsApiClient_Microsoft_Extensions_Caching_Memory_IMemoryCache_Amiquin_Core_Services_Chat_IChatSemaphoreManager_Amiquin_Core_Services_Meta_IServerMetaService_Amiquin_Core_Services_BotContext_BotContextAccessor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Core.Services.Persona.PersonaService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Persona.PersonaService},Amiquin.Core.Services.MessageCache.IMessageCacheService,Amiquin.Core.Services.Chat.IChatCoreService,Amiquin.Core.Services.ApiClients.INewsApiClient,Microsoft.Extensions.Caching.Memory.IMemoryCache,Amiquin.Core.Services.Chat.IChatSemaphoreManager,Amiquin.Core.Services.Meta.IServerMetaService,Amiquin.Core.Services.BotContext.BotContextAccessor,Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(ILogger(Of PersonaService), IMessageCacheService, IChatCoreService, INewsApiClient, IMemoryCache, IChatSemaphoreManager, IServerMetaService, BotContextAccessor, IConfiguration)
  fullName: Amiquin.Core.Services.Persona.PersonaService.PersonaService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Persona.PersonaService>, Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.ApiClients.INewsApiClient, Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.Services.Chat.IChatSemaphoreManager, Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.Services.BotContext.BotContextAccessor, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Amiquin.Core.Services.Persona.PersonaService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Persona.PersonaService), Amiquin.Core.Services.MessageCache.IMessageCacheService, Amiquin.Core.Services.Chat.IChatCoreService, Amiquin.Core.Services.ApiClients.INewsApiClient, Microsoft.Extensions.Caching.Memory.IMemoryCache, Amiquin.Core.Services.Chat.IChatSemaphoreManager, Amiquin.Core.Services.Meta.IServerMetaService, Amiquin.Core.Services.BotContext.BotContextAccessor, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: PersonaService.PersonaService(ILogger<PersonaService>, IMessageCacheService, IChatCoreService, INewsApiClient, IMemoryCache, IChatSemaphoreManager, IServerMetaService, BotContextAccessor, IConfiguration)
  nameWithType.vb: PersonaService.New(ILogger(Of PersonaService), IMessageCacheService, IChatCoreService, INewsApiClient, IMemoryCache, IChatSemaphoreManager, IServerMetaService, BotContextAccessor, IConfiguration)
- uid: Amiquin.Core.Services.Persona.PersonaService.#ctor*
  name: PersonaService
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService__ctor_
  commentId: Overload:Amiquin.Core.Services.Persona.PersonaService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Persona.PersonaService.PersonaService
  fullName.vb: Amiquin.Core.Services.Persona.PersonaService.New
  nameWithType: PersonaService.PersonaService
  nameWithType.vb: PersonaService.New
- uid: Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync(System.UInt64,System.String)
  name: AddSummaryAsync(ulong, string)
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService_AddSummaryAsync_System_UInt64_System_String_
  commentId: M:Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync(System.UInt64,System.String)
  name.vb: AddSummaryAsync(ULong, String)
  fullName: Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync(ulong, string)
  fullName.vb: Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync(ULong, String)
  nameWithType: PersonaService.AddSummaryAsync(ulong, string)
  nameWithType.vb: PersonaService.AddSummaryAsync(ULong, String)
- uid: Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync*
  name: AddSummaryAsync
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService_AddSummaryAsync_
  commentId: Overload:Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Persona.PersonaService.AddSummaryAsync
  nameWithType: PersonaService.AddSummaryAsync
- uid: Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync(System.UInt64)
  name: GetPersonaAsync(ulong)
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService_GetPersonaAsync_System_UInt64_
  commentId: M:Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync(System.UInt64)
  name.vb: GetPersonaAsync(ULong)
  fullName: Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync(ulong)
  fullName.vb: Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync(ULong)
  nameWithType: PersonaService.GetPersonaAsync(ulong)
  nameWithType.vb: PersonaService.GetPersonaAsync(ULong)
- uid: Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync*
  name: GetPersonaAsync
  href: api/Amiquin.Core.Services.Persona.PersonaService.html#Amiquin_Core_Services_Persona_PersonaService_GetPersonaAsync_
  commentId: Overload:Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Persona.PersonaService.GetPersonaAsync
  nameWithType: PersonaService.GetPersonaAsync
- uid: Amiquin.Core.Services.ServerInteraction
  name: Amiquin.Core.Services.ServerInteraction
  href: api/Amiquin.Core.Services.ServerInteraction.html
  commentId: N:Amiquin.Core.Services.ServerInteraction
  fullName: Amiquin.Core.Services.ServerInteraction
  nameWithType: Amiquin.Core.Services.ServerInteraction
- uid: Amiquin.Core.Services.ServerInteraction.IServerInteractionService
  name: IServerInteractionService
  href: api/Amiquin.Core.Services.ServerInteraction.IServerInteractionService.html
  commentId: T:Amiquin.Core.Services.ServerInteraction.IServerInteractionService
  fullName: Amiquin.Core.Services.ServerInteraction.IServerInteractionService
  nameWithType: IServerInteractionService
- uid: Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  name: SendJoinMessageAsync(SocketGuild)
  href: api/Amiquin.Core.Services.ServerInteraction.IServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_IServerInteractionService_SendJoinMessageAsync_Discord_WebSocket_SocketGuild_
  commentId: M:Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  fullName: Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  nameWithType: IServerInteractionService.SendJoinMessageAsync(SocketGuild)
- uid: Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync*
  name: SendJoinMessageAsync
  href: api/Amiquin.Core.Services.ServerInteraction.IServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_IServerInteractionService_SendJoinMessageAsync_
  commentId: Overload:Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.ServerInteraction.IServerInteractionService.SendJoinMessageAsync
  nameWithType: IServerInteractionService.SendJoinMessageAsync
- uid: Amiquin.Core.Services.ServerInteraction.ServerInteractionService
  name: ServerInteractionService
  href: api/Amiquin.Core.Services.ServerInteraction.ServerInteractionService.html
  commentId: T:Amiquin.Core.Services.ServerInteraction.ServerInteractionService
  fullName: Amiquin.Core.Services.ServerInteraction.ServerInteractionService
  nameWithType: ServerInteractionService
- uid: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.#ctor(Amiquin.Core.Services.MessageCache.IMessageCacheService,Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ServerInteraction.ServerInteractionService},Microsoft.Extensions.Configuration.IConfiguration)
  name: ServerInteractionService(IMessageCacheService, ILogger<ServerInteractionService>, IConfiguration)
  href: api/Amiquin.Core.Services.ServerInteraction.ServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_ServerInteractionService__ctor_Amiquin_Core_Services_MessageCache_IMessageCacheService_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_ServerInteraction_ServerInteractionService__Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Core.Services.ServerInteraction.ServerInteractionService.#ctor(Amiquin.Core.Services.MessageCache.IMessageCacheService,Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.ServerInteraction.ServerInteractionService},Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IMessageCacheService, ILogger(Of ServerInteractionService), IConfiguration)
  fullName: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.ServerInteractionService(Amiquin.Core.Services.MessageCache.IMessageCacheService, Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.ServerInteraction.ServerInteractionService>, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.New(Amiquin.Core.Services.MessageCache.IMessageCacheService, Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.ServerInteraction.ServerInteractionService), Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServerInteractionService.ServerInteractionService(IMessageCacheService, ILogger<ServerInteractionService>, IConfiguration)
  nameWithType.vb: ServerInteractionService.New(IMessageCacheService, ILogger(Of ServerInteractionService), IConfiguration)
- uid: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.#ctor*
  name: ServerInteractionService
  href: api/Amiquin.Core.Services.ServerInteraction.ServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_ServerInteractionService__ctor_
  commentId: Overload:Amiquin.Core.Services.ServerInteraction.ServerInteractionService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.ServerInteractionService
  fullName.vb: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.New
  nameWithType: ServerInteractionService.ServerInteractionService
  nameWithType.vb: ServerInteractionService.New
- uid: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  name: SendJoinMessageAsync(SocketGuild)
  href: api/Amiquin.Core.Services.ServerInteraction.ServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_ServerInteractionService_SendJoinMessageAsync_Discord_WebSocket_SocketGuild_
  commentId: M:Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  fullName: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync(Discord.WebSocket.SocketGuild)
  nameWithType: ServerInteractionService.SendJoinMessageAsync(SocketGuild)
- uid: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync*
  name: SendJoinMessageAsync
  href: api/Amiquin.Core.Services.ServerInteraction.ServerInteractionService.html#Amiquin_Core_Services_ServerInteraction_ServerInteractionService_SendJoinMessageAsync_
  commentId: Overload:Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.ServerInteraction.ServerInteractionService.SendJoinMessageAsync
  nameWithType: ServerInteractionService.SendJoinMessageAsync
- uid: Amiquin.Core.Services.StatisticsCollector
  name: Amiquin.Core.Services.StatisticsCollector
  href: api/Amiquin.Core.Services.StatisticsCollector.html
  commentId: N:Amiquin.Core.Services.StatisticsCollector
  fullName: Amiquin.Core.Services.StatisticsCollector
  nameWithType: Amiquin.Core.Services.StatisticsCollector
- uid: Amiquin.Core.Services.StatisticsCollector.IStatisticsCollector
  name: IStatisticsCollector
  href: api/Amiquin.Core.Services.StatisticsCollector.IStatisticsCollector.html
  commentId: T:Amiquin.Core.Services.StatisticsCollector.IStatisticsCollector
  fullName: Amiquin.Core.Services.StatisticsCollector.IStatisticsCollector
  nameWithType: IStatisticsCollector
- uid: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector
  name: StatisticsCollector
  href: api/Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.html
  commentId: T:Amiquin.Core.Services.StatisticsCollector.StatisticsCollector
  fullName: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector
  nameWithType: StatisticsCollector
- uid: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.html#Amiquin_Core_Services_StatisticsCollector_StatisticsCollector_FrequencyInSeconds
  commentId: P:Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds
  fullName: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds
  nameWithType: StatisticsCollector.FrequencyInSeconds
- uid: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds*
  name: FrequencyInSeconds
  href: api/Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.html#Amiquin_Core_Services_StatisticsCollector_StatisticsCollector_FrequencyInSeconds_
  commentId: Overload:Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds
  isSpec: "True"
  fullName: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.FrequencyInSeconds
  nameWithType: StatisticsCollector.FrequencyInSeconds
- uid: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  name: RunAsync(IServiceScopeFactory, CancellationToken)
  href: api/Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.html#Amiquin_Core_Services_StatisticsCollector_StatisticsCollector_RunAsync_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_System_Threading_CancellationToken_
  commentId: M:Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,System.Threading.CancellationToken)
  fullName: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, System.Threading.CancellationToken)
  nameWithType: StatisticsCollector.RunAsync(IServiceScopeFactory, CancellationToken)
- uid: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync*
  name: RunAsync
  href: api/Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.html#Amiquin_Core_Services_StatisticsCollector_StatisticsCollector_RunAsync_
  commentId: Overload:Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.StatisticsCollector.StatisticsCollector.RunAsync
  nameWithType: StatisticsCollector.RunAsync
- uid: Amiquin.Core.Services.Voice
  name: Amiquin.Core.Services.Voice
  href: api/Amiquin.Core.Services.Voice.html
  commentId: N:Amiquin.Core.Services.Voice
  fullName: Amiquin.Core.Services.Voice
  nameWithType: Amiquin.Core.Services.Voice
- uid: Amiquin.Core.Services.Voice.IVoiceService
  name: IVoiceService
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html
  commentId: T:Amiquin.Core.Services.Voice.IVoiceService
  fullName: Amiquin.Core.Services.Voice.IVoiceService
  nameWithType: IVoiceService
- uid: Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync(System.String)
  name: CreateTextToSpeechAudioAsync(string)
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_CreateTextToSpeechAudioAsync_System_String_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync(System.String)
  name.vb: CreateTextToSpeechAudioAsync(String)
  fullName: Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync(string)
  fullName.vb: Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync(String)
  nameWithType: IVoiceService.CreateTextToSpeechAudioAsync(string)
  nameWithType.vb: IVoiceService.CreateTextToSpeechAudioAsync(String)
- uid: Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync*
  name: CreateTextToSpeechAudioAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_CreateTextToSpeechAudioAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceService.CreateTextToSpeechAudioAsync
  nameWithType: IVoiceService.CreateTextToSpeechAudioAsync
- uid: Amiquin.Core.Services.Voice.IVoiceService.JoinAsync(Discord.IVoiceChannel)
  name: JoinAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_JoinAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceService.JoinAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.IVoiceService.JoinAsync(Discord.IVoiceChannel)
  nameWithType: IVoiceService.JoinAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.IVoiceService.JoinAsync*
  name: JoinAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_JoinAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceService.JoinAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceService.JoinAsync
  nameWithType: IVoiceService.JoinAsync
- uid: Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync(Discord.IVoiceChannel)
  name: LeaveAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_LeaveAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync(Discord.IVoiceChannel)
  nameWithType: IVoiceService.LeaveAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync*
  name: LeaveAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_LeaveAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceService.LeaveAsync
  nameWithType: IVoiceService.LeaveAsync
- uid: Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name: SpeakAsync(IVoiceChannel, string)
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_SpeakAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name.vb: SpeakAsync(IVoiceChannel, String)
  fullName: Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync(Discord.IVoiceChannel, String)
  nameWithType: IVoiceService.SpeakAsync(IVoiceChannel, string)
  nameWithType.vb: IVoiceService.SpeakAsync(IVoiceChannel, String)
- uid: Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync*
  name: SpeakAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_SpeakAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceService.SpeakAsync
  nameWithType: IVoiceService.SpeakAsync
- uid: Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name: StreamAudioAsync(IVoiceChannel, string)
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_StreamAudioAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name.vb: StreamAudioAsync(IVoiceChannel, String)
  fullName: Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync(Discord.IVoiceChannel, String)
  nameWithType: IVoiceService.StreamAudioAsync(IVoiceChannel, string)
  nameWithType.vb: IVoiceService.StreamAudioAsync(IVoiceChannel, String)
- uid: Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync*
  name: StreamAudioAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceService.html#Amiquin_Core_Services_Voice_IVoiceService_StreamAudioAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceService.StreamAudioAsync
  nameWithType: IVoiceService.StreamAudioAsync
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager
  name: IVoiceStateManager
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html
  commentId: T:Amiquin.Core.Services.Voice.IVoiceStateManager
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager
  nameWithType: IVoiceStateManager
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  name: ConnectVoiceChannelAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_ConnectVoiceChannelAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  nameWithType: IVoiceStateManager.ConnectVoiceChannelAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync*
  name: ConnectVoiceChannelAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_ConnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.ConnectVoiceChannelAsync
  nameWithType: IVoiceStateManager.ConnectVoiceChannelAsync
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  name: DisconnectVoiceChannelAsync(IVoiceChannel?)
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_DisconnectVoiceChannelAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  name.vb: DisconnectVoiceChannelAsync(IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel?)
  fullName.vb: Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  nameWithType: IVoiceStateManager.DisconnectVoiceChannelAsync(IVoiceChannel?)
  nameWithType.vb: IVoiceStateManager.DisconnectVoiceChannelAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync*
  name: DisconnectVoiceChannelAsync
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_DisconnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.DisconnectVoiceChannelAsync
  nameWithType: IVoiceStateManager.DisconnectVoiceChannelAsync
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice(System.UInt64)
  name: GetAmiquinVoice(ulong)
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_GetAmiquinVoice_System_UInt64_
  commentId: M:Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice(System.UInt64)
  name.vb: GetAmiquinVoice(ULong)
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice(ulong)
  fullName.vb: Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice(ULong)
  nameWithType: IVoiceStateManager.GetAmiquinVoice(ulong)
  nameWithType.vb: IVoiceStateManager.GetAmiquinVoice(ULong)
- uid: Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice*
  name: GetAmiquinVoice
  href: api/Amiquin.Core.Services.Voice.IVoiceStateManager.html#Amiquin_Core_Services_Voice_IVoiceStateManager_GetAmiquinVoice_
  commentId: Overload:Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.IVoiceStateManager.GetAmiquinVoice
  nameWithType: IVoiceStateManager.GetAmiquinVoice
- uid: Amiquin.Core.Services.Voice.Models
  name: Amiquin.Core.Services.Voice.Models
  href: api/Amiquin.Core.Services.Voice.Models.html
  commentId: N:Amiquin.Core.Services.Voice.Models
  fullName: Amiquin.Core.Services.Voice.Models
  nameWithType: Amiquin.Core.Services.Voice.Models
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice
  name: AmiquinVoice
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html
  commentId: T:Amiquin.Core.Services.Voice.Models.AmiquinVoice
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice
  nameWithType: AmiquinVoice
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient
  name: AudioClient
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_AudioClient
  commentId: P:Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient
  nameWithType: AmiquinVoice.AudioClient
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient*
  name: AudioClient
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_AudioClient_
  commentId: Overload:Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioClient
  nameWithType: AmiquinVoice.AudioClient
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream
  name: AudioOutStream
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_AudioOutStream
  commentId: P:Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream
  nameWithType: AmiquinVoice.AudioOutStream
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream*
  name: AudioOutStream
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_AudioOutStream_
  commentId: Overload:Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.AudioOutStream
  nameWithType: AmiquinVoice.AudioOutStream
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel
  name: VoiceChannel
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_VoiceChannel
  commentId: P:Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel
  nameWithType: AmiquinVoice.VoiceChannel
- uid: Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel*
  name: VoiceChannel
  href: api/Amiquin.Core.Services.Voice.Models.AmiquinVoice.html#Amiquin_Core_Services_Voice_Models_AmiquinVoice_VoiceChannel_
  commentId: Overload:Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.Models.AmiquinVoice.VoiceChannel
  nameWithType: AmiquinVoice.VoiceChannel
- uid: Amiquin.Core.Services.Voice.Models.TTSMessage
  name: TTSMessage
  href: api/Amiquin.Core.Services.Voice.Models.TTSMessage.html
  commentId: T:Amiquin.Core.Services.Voice.Models.TTSMessage
  fullName: Amiquin.Core.Services.Voice.Models.TTSMessage
  nameWithType: TTSMessage
- uid: Amiquin.Core.Services.Voice.Models.TTSMessage.Text
  name: Text
  href: api/Amiquin.Core.Services.Voice.Models.TTSMessage.html#Amiquin_Core_Services_Voice_Models_TTSMessage_Text
  commentId: P:Amiquin.Core.Services.Voice.Models.TTSMessage.Text
  fullName: Amiquin.Core.Services.Voice.Models.TTSMessage.Text
  nameWithType: TTSMessage.Text
- uid: Amiquin.Core.Services.Voice.Models.TTSMessage.Text*
  name: Text
  href: api/Amiquin.Core.Services.Voice.Models.TTSMessage.html#Amiquin_Core_Services_Voice_Models_TTSMessage_Text_
  commentId: Overload:Amiquin.Core.Services.Voice.Models.TTSMessage.Text
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.Models.TTSMessage.Text
  nameWithType: TTSMessage.Text
- uid: Amiquin.Core.Services.Voice.VoiceService
  name: VoiceService
  href: api/Amiquin.Core.Services.Voice.VoiceService.html
  commentId: T:Amiquin.Core.Services.Voice.VoiceService
  fullName: Amiquin.Core.Services.Voice.VoiceService
  nameWithType: VoiceService
- uid: Amiquin.Core.Services.Voice.VoiceService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Voice.VoiceService},Amiquin.Core.Services.Voice.IVoiceStateManager,Microsoft.Extensions.Configuration.IConfiguration,Amiquin.Core.Services.Chat.IChatSemaphoreManager,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.ExternalOptions},Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService)
  name: VoiceService(ILogger<VoiceService>, IVoiceStateManager, IConfiguration, IChatSemaphoreManager, IOptions<ExternalOptions>, IExternalProcessRunnerService)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Voice_VoiceService__Amiquin_Core_Services_Voice_IVoiceStateManager_Microsoft_Extensions_Configuration_IConfiguration_Amiquin_Core_Services_Chat_IChatSemaphoreManager_Microsoft_Extensions_Options_IOptions_Amiquin_Core_Options_ExternalOptions__Amiquin_Core_Services_ExternalProcessRunner_IExternalProcessRunnerService_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Voice.VoiceService},Amiquin.Core.Services.Voice.IVoiceStateManager,Microsoft.Extensions.Configuration.IConfiguration,Amiquin.Core.Services.Chat.IChatSemaphoreManager,Microsoft.Extensions.Options.IOptions{Amiquin.Core.Options.ExternalOptions},Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService)
  name.vb: New(ILogger(Of VoiceService), IVoiceStateManager, IConfiguration, IChatSemaphoreManager, IOptions(Of ExternalOptions), IExternalProcessRunnerService)
  fullName: Amiquin.Core.Services.Voice.VoiceService.VoiceService(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Voice.VoiceService>, Amiquin.Core.Services.Voice.IVoiceStateManager, Microsoft.Extensions.Configuration.IConfiguration, Amiquin.Core.Services.Chat.IChatSemaphoreManager, Microsoft.Extensions.Options.IOptions<Amiquin.Core.Options.ExternalOptions>, Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceService.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Voice.VoiceService), Amiquin.Core.Services.Voice.IVoiceStateManager, Microsoft.Extensions.Configuration.IConfiguration, Amiquin.Core.Services.Chat.IChatSemaphoreManager, Microsoft.Extensions.Options.IOptions(Of Amiquin.Core.Options.ExternalOptions), Amiquin.Core.Services.ExternalProcessRunner.IExternalProcessRunnerService)
  nameWithType: VoiceService.VoiceService(ILogger<VoiceService>, IVoiceStateManager, IConfiguration, IChatSemaphoreManager, IOptions<ExternalOptions>, IExternalProcessRunnerService)
  nameWithType.vb: VoiceService.New(ILogger(Of VoiceService), IVoiceStateManager, IConfiguration, IChatSemaphoreManager, IOptions(Of ExternalOptions), IExternalProcessRunnerService)
- uid: Amiquin.Core.Services.Voice.VoiceService.#ctor*
  name: VoiceService
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService__ctor_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Voice.VoiceService.VoiceService
  fullName.vb: Amiquin.Core.Services.Voice.VoiceService.New
  nameWithType: VoiceService.VoiceService
  nameWithType.vb: VoiceService.New
- uid: Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync(System.String)
  name: CreateTextToSpeechAudioAsync(string)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_CreateTextToSpeechAudioAsync_System_String_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync(System.String)
  name.vb: CreateTextToSpeechAudioAsync(String)
  fullName: Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync(string)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync(String)
  nameWithType: VoiceService.CreateTextToSpeechAudioAsync(string)
  nameWithType.vb: VoiceService.CreateTextToSpeechAudioAsync(String)
- uid: Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync*
  name: CreateTextToSpeechAudioAsync
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_CreateTextToSpeechAudioAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceService.CreateTextToSpeechAudioAsync
  nameWithType: VoiceService.CreateTextToSpeechAudioAsync
- uid: Amiquin.Core.Services.Voice.VoiceService.JoinAsync(Discord.IVoiceChannel)
  name: JoinAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_JoinAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.JoinAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.VoiceService.JoinAsync(Discord.IVoiceChannel)
  nameWithType: VoiceService.JoinAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.VoiceService.JoinAsync*
  name: JoinAsync
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_JoinAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.JoinAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceService.JoinAsync
  nameWithType: VoiceService.JoinAsync
- uid: Amiquin.Core.Services.Voice.VoiceService.LeaveAsync(Discord.IVoiceChannel)
  name: LeaveAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_LeaveAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.LeaveAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.VoiceService.LeaveAsync(Discord.IVoiceChannel)
  nameWithType: VoiceService.LeaveAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.VoiceService.LeaveAsync*
  name: LeaveAsync
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_LeaveAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.LeaveAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceService.LeaveAsync
  nameWithType: VoiceService.LeaveAsync
- uid: Amiquin.Core.Services.Voice.VoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name: SpeakAsync(IVoiceChannel, string)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_SpeakAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name.vb: SpeakAsync(IVoiceChannel, String)
  fullName: Amiquin.Core.Services.Voice.VoiceService.SpeakAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceService.SpeakAsync(Discord.IVoiceChannel, String)
  nameWithType: VoiceService.SpeakAsync(IVoiceChannel, string)
  nameWithType.vb: VoiceService.SpeakAsync(IVoiceChannel, String)
- uid: Amiquin.Core.Services.Voice.VoiceService.SpeakAsync*
  name: SpeakAsync
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_SpeakAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.SpeakAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceService.SpeakAsync
  nameWithType: VoiceService.SpeakAsync
- uid: Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name: StreamAudioAsync(IVoiceChannel, string)
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_StreamAudioAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name.vb: StreamAudioAsync(IVoiceChannel, String)
  fullName: Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync(Discord.IVoiceChannel, String)
  nameWithType: VoiceService.StreamAudioAsync(IVoiceChannel, string)
  nameWithType.vb: VoiceService.StreamAudioAsync(IVoiceChannel, String)
- uid: Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync*
  name: StreamAudioAsync
  href: api/Amiquin.Core.Services.Voice.VoiceService.html#Amiquin_Core_Services_Voice_VoiceService_StreamAudioAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceService.StreamAudioAsync
  nameWithType: VoiceService.StreamAudioAsync
- uid: Amiquin.Core.Services.Voice.VoiceStateManager
  name: VoiceStateManager
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html
  commentId: T:Amiquin.Core.Services.Voice.VoiceStateManager
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager
  nameWithType: VoiceStateManager
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Voice.VoiceStateManager})
  name: VoiceStateManager(ILogger<VoiceStateManager>)
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager__ctor_Microsoft_Extensions_Logging_ILogger_Amiquin_Core_Services_Voice_VoiceStateManager__
  commentId: M:Amiquin.Core.Services.Voice.VoiceStateManager.#ctor(Microsoft.Extensions.Logging.ILogger{Amiquin.Core.Services.Voice.VoiceStateManager})
  name.vb: New(ILogger(Of VoiceStateManager))
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.VoiceStateManager(Microsoft.Extensions.Logging.ILogger<Amiquin.Core.Services.Voice.VoiceStateManager>)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceStateManager.New(Microsoft.Extensions.Logging.ILogger(Of Amiquin.Core.Services.Voice.VoiceStateManager))
  nameWithType: VoiceStateManager.VoiceStateManager(ILogger<VoiceStateManager>)
  nameWithType.vb: VoiceStateManager.New(ILogger(Of VoiceStateManager))
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.#ctor*
  name: VoiceStateManager
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager__ctor_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceStateManager.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.VoiceStateManager
  fullName.vb: Amiquin.Core.Services.Voice.VoiceStateManager.New
  nameWithType: VoiceStateManager.VoiceStateManager
  nameWithType.vb: VoiceStateManager.New
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  name: ConnectVoiceChannelAsync(IVoiceChannel)
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_ConnectVoiceChannelAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync(Discord.IVoiceChannel)
  nameWithType: VoiceStateManager.ConnectVoiceChannelAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync*
  name: ConnectVoiceChannelAsync
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_ConnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.ConnectVoiceChannelAsync
  nameWithType: VoiceStateManager.ConnectVoiceChannelAsync
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  name: DisconnectVoiceChannelAsync(IVoiceChannel?)
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_DisconnectVoiceChannelAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  name.vb: DisconnectVoiceChannelAsync(IVoiceChannel)
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel?)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync(Discord.IVoiceChannel)
  nameWithType: VoiceStateManager.DisconnectVoiceChannelAsync(IVoiceChannel?)
  nameWithType.vb: VoiceStateManager.DisconnectVoiceChannelAsync(IVoiceChannel)
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync*
  name: DisconnectVoiceChannelAsync
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_DisconnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.DisconnectVoiceChannelAsync
  nameWithType: VoiceStateManager.DisconnectVoiceChannelAsync
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice(System.UInt64)
  name: GetAmiquinVoice(ulong)
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_GetAmiquinVoice_System_UInt64_
  commentId: M:Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice(System.UInt64)
  name.vb: GetAmiquinVoice(ULong)
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice(ulong)
  fullName.vb: Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice(ULong)
  nameWithType: VoiceStateManager.GetAmiquinVoice(ulong)
  nameWithType.vb: VoiceStateManager.GetAmiquinVoice(ULong)
- uid: Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice*
  name: GetAmiquinVoice
  href: api/Amiquin.Core.Services.Voice.VoiceStateManager.html#Amiquin_Core_Services_Voice_VoiceStateManager_GetAmiquinVoice_
  commentId: Overload:Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice
  isSpec: "True"
  fullName: Amiquin.Core.Services.Voice.VoiceStateManager.GetAmiquinVoice
  nameWithType: VoiceStateManager.GetAmiquinVoice
- uid: Amiquin.Core.Utilities
  name: Amiquin.Core.Utilities
  href: api/Amiquin.Core.Utilities.html
  commentId: N:Amiquin.Core.Utilities
  fullName: Amiquin.Core.Utilities
  nameWithType: Amiquin.Core.Utilities
- uid: Amiquin.Core.Utilities.DiscordUtilities
  name: DiscordUtilities
  href: api/Amiquin.Core.Utilities.DiscordUtilities.html
  commentId: T:Amiquin.Core.Utilities.DiscordUtilities
  fullName: Amiquin.Core.Utilities.DiscordUtilities
  nameWithType: DiscordUtilities
- uid: Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage(System.String,System.Func{System.String,System.Int32,System.Int32,Discord.Embed})
  name: ChunkMessage(string, Func<string, int, int, Embed>)
  href: api/Amiquin.Core.Utilities.DiscordUtilities.html#Amiquin_Core_Utilities_DiscordUtilities_ChunkMessage_System_String_System_Func_System_String_System_Int32_System_Int32_Discord_Embed__
  commentId: M:Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage(System.String,System.Func{System.String,System.Int32,System.Int32,Discord.Embed})
  name.vb: ChunkMessage(String, Func(Of String, Integer, Integer, Embed))
  fullName: Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage(string, System.Func<string, int, int, Discord.Embed>)
  fullName.vb: Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage(String, System.Func(Of String, Integer, Integer, Discord.Embed))
  nameWithType: DiscordUtilities.ChunkMessage(string, Func<string, int, int, Embed>)
  nameWithType.vb: DiscordUtilities.ChunkMessage(String, Func(Of String, Integer, Integer, Embed))
- uid: Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage*
  name: ChunkMessage
  href: api/Amiquin.Core.Utilities.DiscordUtilities.html#Amiquin_Core_Utilities_DiscordUtilities_ChunkMessage_
  commentId: Overload:Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.DiscordUtilities.ChunkMessage
  nameWithType: DiscordUtilities.ChunkMessage
- uid: Amiquin.Core.Utilities.GeneralUtilities
  name: GeneralUtilities
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html
  commentId: T:Amiquin.Core.Utilities.GeneralUtilities
  fullName: Amiquin.Core.Utilities.GeneralUtilities
  nameWithType: GeneralUtilities
- uid: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime(System.DateTime)
  name: GetFormattedDateTime(DateTime)
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_GetFormattedDateTime_System_DateTime_
  commentId: M:Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime(System.DateTime)
  name.vb: GetFormattedDateTime(Date)
  fullName: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime(System.DateTime)
  fullName.vb: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime(Date)
  nameWithType: GeneralUtilities.GetFormattedDateTime(DateTime)
  nameWithType.vb: GeneralUtilities.GetFormattedDateTime(Date)
- uid: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime*
  name: GetFormattedDateTime
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_GetFormattedDateTime_
  commentId: Overload:Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedDateTime
  nameWithType: GeneralUtilities.GetFormattedDateTime
- uid: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan(System.TimeSpan)
  name: GetFormattedTimeSpan(TimeSpan)
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_GetFormattedTimeSpan_System_TimeSpan_
  commentId: M:Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan(System.TimeSpan)
  fullName: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan(System.TimeSpan)
  nameWithType: GeneralUtilities.GetFormattedTimeSpan(TimeSpan)
- uid: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan*
  name: GetFormattedTimeSpan
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_GetFormattedTimeSpan_
  commentId: Overload:Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.GeneralUtilities.GetFormattedTimeSpan
  nameWithType: GeneralUtilities.GetFormattedTimeSpan
- uid: Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode
  name: IsDebugMode()
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_IsDebugMode
  commentId: M:Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode
  fullName: Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode()
  nameWithType: GeneralUtilities.IsDebugMode()
- uid: Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode*
  name: IsDebugMode
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_IsDebugMode_
  commentId: Overload:Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.GeneralUtilities.IsDebugMode
  nameWithType: GeneralUtilities.IsDebugMode
- uid: Amiquin.Core.Utilities.GeneralUtilities.IsLinux
  name: IsLinux()
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_IsLinux
  commentId: M:Amiquin.Core.Utilities.GeneralUtilities.IsLinux
  fullName: Amiquin.Core.Utilities.GeneralUtilities.IsLinux()
  nameWithType: GeneralUtilities.IsLinux()
- uid: Amiquin.Core.Utilities.GeneralUtilities.IsLinux*
  name: IsLinux
  href: api/Amiquin.Core.Utilities.GeneralUtilities.html#Amiquin_Core_Utilities_GeneralUtilities_IsLinux_
  commentId: Overload:Amiquin.Core.Utilities.GeneralUtilities.IsLinux
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.GeneralUtilities.IsLinux
  nameWithType: GeneralUtilities.IsLinux
- uid: Amiquin.Core.Utilities.ProgressUtilities
  name: ProgressUtilities
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html
  commentId: T:Amiquin.Core.Utilities.ProgressUtilities
  fullName: Amiquin.Core.Utilities.ProgressUtilities
  nameWithType: ProgressUtilities
- uid: Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar(System.Double,System.Int32)
  name: GenerateConsoleProgressBar(double, int)
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GenerateConsoleProgressBar_System_Double_System_Int32_
  commentId: M:Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar(System.Double,System.Int32)
  name.vb: GenerateConsoleProgressBar(Double, Integer)
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar(double, int)
  fullName.vb: Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar(Double, Integer)
  nameWithType: ProgressUtilities.GenerateConsoleProgressBar(double, int)
  nameWithType.vb: ProgressUtilities.GenerateConsoleProgressBar(Double, Integer)
- uid: Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar*
  name: GenerateConsoleProgressBar
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GenerateConsoleProgressBar_
  commentId: Overload:Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GenerateConsoleProgressBar
  nameWithType: ProgressUtilities.GenerateConsoleProgressBar
- uid: Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar(System.Double,System.Int32)
  name: GenerateNachoProgressBar(double, int)
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GenerateNachoProgressBar_System_Double_System_Int32_
  commentId: M:Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar(System.Double,System.Int32)
  name.vb: GenerateNachoProgressBar(Double, Integer)
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar(double, int)
  fullName.vb: Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar(Double, Integer)
  nameWithType: ProgressUtilities.GenerateNachoProgressBar(double, int)
  nameWithType.vb: ProgressUtilities.GenerateNachoProgressBar(Double, Integer)
- uid: Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar*
  name: GenerateNachoProgressBar
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GenerateNachoProgressBar_
  commentId: Overload:Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GenerateNachoProgressBar
  nameWithType: ProgressUtilities.GenerateNachoProgressBar
- uid: Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage(System.Int32,System.Int32)
  name: GetCompletionPercentage(int, int)
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GetCompletionPercentage_System_Int32_System_Int32_
  commentId: M:Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage(System.Int32,System.Int32)
  name.vb: GetCompletionPercentage(Integer, Integer)
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage(int, int)
  fullName.vb: Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage(Integer, Integer)
  nameWithType: ProgressUtilities.GetCompletionPercentage(int, int)
  nameWithType.vb: ProgressUtilities.GetCompletionPercentage(Integer, Integer)
- uid: Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage*
  name: GetCompletionPercentage
  href: api/Amiquin.Core.Utilities.ProgressUtilities.html#Amiquin_Core_Utilities_ProgressUtilities_GetCompletionPercentage_
  commentId: Overload:Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.ProgressUtilities.GetCompletionPercentage
  nameWithType: ProgressUtilities.GetCompletionPercentage
- uid: Amiquin.Core.Utilities.Reflection
  name: Reflection
  href: api/Amiquin.Core.Utilities.Reflection.html
  commentId: T:Amiquin.Core.Utilities.Reflection
  fullName: Amiquin.Core.Utilities.Reflection
  nameWithType: Reflection
- uid: Amiquin.Core.Utilities.Reflection.ConvertTo(System.Reflection.PropertyInfo,System.String)
  name: ConvertTo(PropertyInfo, string)
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_ConvertTo_System_Reflection_PropertyInfo_System_String_
  commentId: M:Amiquin.Core.Utilities.Reflection.ConvertTo(System.Reflection.PropertyInfo,System.String)
  name.vb: ConvertTo(PropertyInfo, String)
  fullName: Amiquin.Core.Utilities.Reflection.ConvertTo(System.Reflection.PropertyInfo, string)
  fullName.vb: Amiquin.Core.Utilities.Reflection.ConvertTo(System.Reflection.PropertyInfo, String)
  nameWithType: Reflection.ConvertTo(PropertyInfo, string)
  nameWithType.vb: Reflection.ConvertTo(PropertyInfo, String)
- uid: Amiquin.Core.Utilities.Reflection.ConvertTo*
  name: ConvertTo
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_ConvertTo_
  commentId: Overload:Amiquin.Core.Utilities.Reflection.ConvertTo
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.Reflection.ConvertTo
  nameWithType: Reflection.ConvertTo
- uid: Amiquin.Core.Utilities.Reflection.ConvertTo``1(System.String)
  name: ConvertTo<T>(string)
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_ConvertTo__1_System_String_
  commentId: M:Amiquin.Core.Utilities.Reflection.ConvertTo``1(System.String)
  name.vb: ConvertTo(Of T)(String)
  fullName: Amiquin.Core.Utilities.Reflection.ConvertTo<T>(string)
  fullName.vb: Amiquin.Core.Utilities.Reflection.ConvertTo(Of T)(String)
  nameWithType: Reflection.ConvertTo<T>(string)
  nameWithType.vb: Reflection.ConvertTo(Of T)(String)
- uid: Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands
  name: GetAllEphemeralCommands()
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_GetAllEphemeralCommands
  commentId: M:Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands
  fullName: Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands()
  nameWithType: Reflection.GetAllEphemeralCommands()
- uid: Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands*
  name: GetAllEphemeralCommands
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_GetAllEphemeralCommands_
  commentId: Overload:Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.Reflection.GetAllEphemeralCommands
  nameWithType: Reflection.GetAllEphemeralCommands
- uid: Amiquin.Core.Utilities.Reflection.GetOptionTypes
  name: GetOptionTypes()
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_GetOptionTypes
  commentId: M:Amiquin.Core.Utilities.Reflection.GetOptionTypes
  fullName: Amiquin.Core.Utilities.Reflection.GetOptionTypes()
  nameWithType: Reflection.GetOptionTypes()
- uid: Amiquin.Core.Utilities.Reflection.GetOptionTypes*
  name: GetOptionTypes
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_GetOptionTypes_
  commentId: Overload:Amiquin.Core.Utilities.Reflection.GetOptionTypes
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.Reflection.GetOptionTypes
  nameWithType: Reflection.GetOptionTypes
- uid: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(System.Object)
  name: IsExtendedPrimitiveType(object)
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_IsExtendedPrimitiveType_System_Object_
  commentId: M:Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(System.Object)
  name.vb: IsExtendedPrimitiveType(Object)
  fullName: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(object)
  fullName.vb: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(Object)
  nameWithType: Reflection.IsExtendedPrimitiveType(object)
  nameWithType.vb: Reflection.IsExtendedPrimitiveType(Object)
- uid: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(System.Reflection.PropertyInfo)
  name: IsExtendedPrimitiveType(PropertyInfo)
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_IsExtendedPrimitiveType_System_Reflection_PropertyInfo_
  commentId: M:Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(System.Reflection.PropertyInfo)
  fullName: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType(System.Reflection.PropertyInfo)
  nameWithType: Reflection.IsExtendedPrimitiveType(PropertyInfo)
- uid: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType*
  name: IsExtendedPrimitiveType
  href: api/Amiquin.Core.Utilities.Reflection.html#Amiquin_Core_Utilities_Reflection_IsExtendedPrimitiveType_
  commentId: Overload:Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.Reflection.IsExtendedPrimitiveType
  nameWithType: Reflection.IsExtendedPrimitiveType
- uid: Amiquin.Core.Utilities.StringModifier
  name: StringModifier
  href: api/Amiquin.Core.Utilities.StringModifier.html
  commentId: T:Amiquin.Core.Utilities.StringModifier
  fullName: Amiquin.Core.Utilities.StringModifier
  nameWithType: StringModifier
- uid: Amiquin.Core.Utilities.StringModifier.Anomify(System.String,System.Int32)
  name: Anomify(string, int)
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_Anomify_System_String_System_Int32_
  commentId: M:Amiquin.Core.Utilities.StringModifier.Anomify(System.String,System.Int32)
  name.vb: Anomify(String, Integer)
  fullName: Amiquin.Core.Utilities.StringModifier.Anomify(string, int)
  fullName.vb: Amiquin.Core.Utilities.StringModifier.Anomify(String, Integer)
  nameWithType: StringModifier.Anomify(string, int)
  nameWithType.vb: StringModifier.Anomify(String, Integer)
- uid: Amiquin.Core.Utilities.StringModifier.Anomify*
  name: Anomify
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_Anomify_
  commentId: Overload:Amiquin.Core.Utilities.StringModifier.Anomify
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.StringModifier.Anomify
  nameWithType: StringModifier.Anomify
- uid: Amiquin.Core.Utilities.StringModifier.Chunkify(System.String,System.Int32)
  name: Chunkify(string, int)
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_Chunkify_System_String_System_Int32_
  commentId: M:Amiquin.Core.Utilities.StringModifier.Chunkify(System.String,System.Int32)
  name.vb: Chunkify(String, Integer)
  fullName: Amiquin.Core.Utilities.StringModifier.Chunkify(string, int)
  fullName.vb: Amiquin.Core.Utilities.StringModifier.Chunkify(String, Integer)
  nameWithType: StringModifier.Chunkify(string, int)
  nameWithType.vb: StringModifier.Chunkify(String, Integer)
- uid: Amiquin.Core.Utilities.StringModifier.Chunkify*
  name: Chunkify
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_Chunkify_
  commentId: Overload:Amiquin.Core.Utilities.StringModifier.Chunkify
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.StringModifier.Chunkify
  nameWithType: StringModifier.Chunkify
- uid: Amiquin.Core.Utilities.StringModifier.CreateCacheKey(System.String,System.String)
  name: CreateCacheKey(string, string)
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_CreateCacheKey_System_String_System_String_
  commentId: M:Amiquin.Core.Utilities.StringModifier.CreateCacheKey(System.String,System.String)
  name.vb: CreateCacheKey(String, String)
  fullName: Amiquin.Core.Utilities.StringModifier.CreateCacheKey(string, string)
  fullName.vb: Amiquin.Core.Utilities.StringModifier.CreateCacheKey(String, String)
  nameWithType: StringModifier.CreateCacheKey(string, string)
  nameWithType.vb: StringModifier.CreateCacheKey(String, String)
- uid: Amiquin.Core.Utilities.StringModifier.CreateCacheKey*
  name: CreateCacheKey
  href: api/Amiquin.Core.Utilities.StringModifier.html#Amiquin_Core_Utilities_StringModifier_CreateCacheKey_
  commentId: Overload:Amiquin.Core.Utilities.StringModifier.CreateCacheKey
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.StringModifier.CreateCacheKey
  nameWithType: StringModifier.CreateCacheKey
- uid: Amiquin.Core.Utilities.Tokenizer
  name: Tokenizer
  href: api/Amiquin.Core.Utilities.Tokenizer.html
  commentId: T:Amiquin.Core.Utilities.Tokenizer
  fullName: Amiquin.Core.Utilities.Tokenizer
  nameWithType: Tokenizer
- uid: Amiquin.Core.Utilities.Tokenizer.CountTokensAsync(System.String)
  name: CountTokensAsync(string)
  href: api/Amiquin.Core.Utilities.Tokenizer.html#Amiquin_Core_Utilities_Tokenizer_CountTokensAsync_System_String_
  commentId: M:Amiquin.Core.Utilities.Tokenizer.CountTokensAsync(System.String)
  name.vb: CountTokensAsync(String)
  fullName: Amiquin.Core.Utilities.Tokenizer.CountTokensAsync(string)
  fullName.vb: Amiquin.Core.Utilities.Tokenizer.CountTokensAsync(String)
  nameWithType: Tokenizer.CountTokensAsync(string)
  nameWithType.vb: Tokenizer.CountTokensAsync(String)
- uid: Amiquin.Core.Utilities.Tokenizer.CountTokensAsync*
  name: CountTokensAsync
  href: api/Amiquin.Core.Utilities.Tokenizer.html#Amiquin_Core_Utilities_Tokenizer_CountTokensAsync_
  commentId: Overload:Amiquin.Core.Utilities.Tokenizer.CountTokensAsync
  isSpec: "True"
  fullName: Amiquin.Core.Utilities.Tokenizer.CountTokensAsync
  nameWithType: Tokenizer.CountTokensAsync
- uid: Amiquin.Infrastructure
  name: Amiquin.Infrastructure
  href: api/Amiquin.Infrastructure.html
  commentId: N:Amiquin.Infrastructure
  fullName: Amiquin.Infrastructure
  nameWithType: Amiquin.Infrastructure
- uid: Amiquin.Infrastructure.AmiquinContext
  name: AmiquinContext
  href: api/Amiquin.Infrastructure.AmiquinContext.html
  commentId: T:Amiquin.Infrastructure.AmiquinContext
  fullName: Amiquin.Infrastructure.AmiquinContext
  nameWithType: AmiquinContext
- uid: Amiquin.Infrastructure.AmiquinContext.#ctor
  name: AmiquinContext()
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext__ctor
  commentId: M:Amiquin.Infrastructure.AmiquinContext.#ctor
  name.vb: New()
  fullName: Amiquin.Infrastructure.AmiquinContext.AmiquinContext()
  fullName.vb: Amiquin.Infrastructure.AmiquinContext.New()
  nameWithType: AmiquinContext.AmiquinContext()
  nameWithType.vb: AmiquinContext.New()
- uid: Amiquin.Infrastructure.AmiquinContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Amiquin.Infrastructure.AmiquinContext})
  name: AmiquinContext(DbContextOptions<AmiquinContext>)
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Amiquin_Infrastructure_AmiquinContext__
  commentId: M:Amiquin.Infrastructure.AmiquinContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Amiquin.Infrastructure.AmiquinContext})
  name.vb: New(DbContextOptions(Of AmiquinContext))
  fullName: Amiquin.Infrastructure.AmiquinContext.AmiquinContext(Microsoft.EntityFrameworkCore.DbContextOptions<Amiquin.Infrastructure.AmiquinContext>)
  fullName.vb: Amiquin.Infrastructure.AmiquinContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Amiquin.Infrastructure.AmiquinContext))
  nameWithType: AmiquinContext.AmiquinContext(DbContextOptions<AmiquinContext>)
  nameWithType.vb: AmiquinContext.New(DbContextOptions(Of AmiquinContext))
- uid: Amiquin.Infrastructure.AmiquinContext.#ctor*
  name: AmiquinContext
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext__ctor_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.AmiquinContext.AmiquinContext
  fullName.vb: Amiquin.Infrastructure.AmiquinContext.New
  nameWithType: AmiquinContext.AmiquinContext
  nameWithType.vb: AmiquinContext.New
- uid: Amiquin.Infrastructure.AmiquinContext.BotStatistics
  name: BotStatistics
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_BotStatistics
  commentId: P:Amiquin.Infrastructure.AmiquinContext.BotStatistics
  fullName: Amiquin.Infrastructure.AmiquinContext.BotStatistics
  nameWithType: AmiquinContext.BotStatistics
- uid: Amiquin.Infrastructure.AmiquinContext.BotStatistics*
  name: BotStatistics
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_BotStatistics_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.BotStatistics
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.BotStatistics
  nameWithType: AmiquinContext.BotStatistics
- uid: Amiquin.Infrastructure.AmiquinContext.CommandLogs
  name: CommandLogs
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_CommandLogs
  commentId: P:Amiquin.Infrastructure.AmiquinContext.CommandLogs
  fullName: Amiquin.Infrastructure.AmiquinContext.CommandLogs
  nameWithType: AmiquinContext.CommandLogs
- uid: Amiquin.Infrastructure.AmiquinContext.CommandLogs*
  name: CommandLogs
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_CommandLogs_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.CommandLogs
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.CommandLogs
  nameWithType: AmiquinContext.CommandLogs
- uid: Amiquin.Infrastructure.AmiquinContext.Messages
  name: Messages
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_Messages
  commentId: P:Amiquin.Infrastructure.AmiquinContext.Messages
  fullName: Amiquin.Infrastructure.AmiquinContext.Messages
  nameWithType: AmiquinContext.Messages
- uid: Amiquin.Infrastructure.AmiquinContext.Messages*
  name: Messages
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_Messages_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.Messages
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.Messages
  nameWithType: AmiquinContext.Messages
- uid: Amiquin.Infrastructure.AmiquinContext.NachoPacks
  name: NachoPacks
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_NachoPacks
  commentId: P:Amiquin.Infrastructure.AmiquinContext.NachoPacks
  fullName: Amiquin.Infrastructure.AmiquinContext.NachoPacks
  nameWithType: AmiquinContext.NachoPacks
- uid: Amiquin.Infrastructure.AmiquinContext.NachoPacks*
  name: NachoPacks
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_NachoPacks_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.NachoPacks
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.NachoPacks
  nameWithType: AmiquinContext.NachoPacks
- uid: Amiquin.Infrastructure.AmiquinContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  name: OnConfiguring(DbContextOptionsBuilder)
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_OnConfiguring_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_
  commentId: M:Amiquin.Infrastructure.AmiquinContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  fullName: Amiquin.Infrastructure.AmiquinContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  nameWithType: AmiquinContext.OnConfiguring(DbContextOptionsBuilder)
- uid: Amiquin.Infrastructure.AmiquinContext.OnConfiguring*
  name: OnConfiguring
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_OnConfiguring_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.OnConfiguring
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.OnConfiguring
  nameWithType: AmiquinContext.OnConfiguring
- uid: Amiquin.Infrastructure.AmiquinContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Amiquin.Infrastructure.AmiquinContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Amiquin.Infrastructure.AmiquinContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AmiquinContext.OnModelCreating(ModelBuilder)
- uid: Amiquin.Infrastructure.AmiquinContext.OnModelCreating*
  name: OnModelCreating
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_OnModelCreating_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.OnModelCreating
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.OnModelCreating
  nameWithType: AmiquinContext.OnModelCreating
- uid: Amiquin.Infrastructure.AmiquinContext.ServerMetas
  name: ServerMetas
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_ServerMetas
  commentId: P:Amiquin.Infrastructure.AmiquinContext.ServerMetas
  fullName: Amiquin.Infrastructure.AmiquinContext.ServerMetas
  nameWithType: AmiquinContext.ServerMetas
- uid: Amiquin.Infrastructure.AmiquinContext.ServerMetas*
  name: ServerMetas
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_ServerMetas_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.ServerMetas
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.ServerMetas
  nameWithType: AmiquinContext.ServerMetas
- uid: Amiquin.Infrastructure.AmiquinContext.Toggles
  name: Toggles
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_Toggles
  commentId: P:Amiquin.Infrastructure.AmiquinContext.Toggles
  fullName: Amiquin.Infrastructure.AmiquinContext.Toggles
  nameWithType: AmiquinContext.Toggles
- uid: Amiquin.Infrastructure.AmiquinContext.Toggles*
  name: Toggles
  href: api/Amiquin.Infrastructure.AmiquinContext.html#Amiquin_Infrastructure_AmiquinContext_Toggles_
  commentId: Overload:Amiquin.Infrastructure.AmiquinContext.Toggles
  isSpec: "True"
  fullName: Amiquin.Infrastructure.AmiquinContext.Toggles
  nameWithType: AmiquinContext.Toggles
- uid: Amiquin.Infrastructure.Repositories
  name: Amiquin.Infrastructure.Repositories
  href: api/Amiquin.Infrastructure.Repositories.html
  commentId: N:Amiquin.Infrastructure.Repositories
  fullName: Amiquin.Infrastructure.Repositories
  nameWithType: Amiquin.Infrastructure.Repositories
- uid: Amiquin.Infrastructure.Repositories.BotStatisticsRepository
  name: BotStatisticsRepository
  href: api/Amiquin.Infrastructure.Repositories.BotStatisticsRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.BotStatisticsRepository
  fullName: Amiquin.Infrastructure.Repositories.BotStatisticsRepository
  nameWithType: BotStatisticsRepository
- uid: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: BotStatisticsRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.BotStatisticsRepository.html#Amiquin_Infrastructure_Repositories_BotStatisticsRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.BotStatisticsRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.BotStatisticsRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: BotStatisticsRepository.BotStatisticsRepository(AmiquinContext)
  nameWithType.vb: BotStatisticsRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.#ctor*
  name: BotStatisticsRepository
  href: api/Amiquin.Infrastructure.Repositories.BotStatisticsRepository.html#Amiquin_Infrastructure_Repositories_BotStatisticsRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.BotStatisticsRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.BotStatisticsRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.BotStatisticsRepository.New
  nameWithType: BotStatisticsRepository.BotStatisticsRepository
  nameWithType.vb: BotStatisticsRepository.New
- uid: Amiquin.Infrastructure.Repositories.CommandLogRepository
  name: CommandLogRepository
  href: api/Amiquin.Infrastructure.Repositories.CommandLogRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.CommandLogRepository
  fullName: Amiquin.Infrastructure.Repositories.CommandLogRepository
  nameWithType: CommandLogRepository
- uid: Amiquin.Infrastructure.Repositories.CommandLogRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: CommandLogRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.CommandLogRepository.html#Amiquin_Infrastructure_Repositories_CommandLogRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.CommandLogRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.CommandLogRepository.CommandLogRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.CommandLogRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: CommandLogRepository.CommandLogRepository(AmiquinContext)
  nameWithType.vb: CommandLogRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.CommandLogRepository.#ctor*
  name: CommandLogRepository
  href: api/Amiquin.Infrastructure.Repositories.CommandLogRepository.html#Amiquin_Infrastructure_Repositories_CommandLogRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.CommandLogRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.CommandLogRepository.CommandLogRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.CommandLogRepository.New
  nameWithType: CommandLogRepository.CommandLogRepository
  nameWithType.vb: CommandLogRepository.New
- uid: Amiquin.Infrastructure.Repositories.MessageRepository
  name: MessageRepository
  href: api/Amiquin.Infrastructure.Repositories.MessageRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.MessageRepository
  fullName: Amiquin.Infrastructure.Repositories.MessageRepository
  nameWithType: MessageRepository
- uid: Amiquin.Infrastructure.Repositories.MessageRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: MessageRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.MessageRepository.html#Amiquin_Infrastructure_Repositories_MessageRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.MessageRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.MessageRepository.MessageRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.MessageRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: MessageRepository.MessageRepository(AmiquinContext)
  nameWithType.vb: MessageRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.MessageRepository.#ctor*
  name: MessageRepository
  href: api/Amiquin.Infrastructure.Repositories.MessageRepository.html#Amiquin_Infrastructure_Repositories_MessageRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.MessageRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.MessageRepository.MessageRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.MessageRepository.New
  nameWithType: MessageRepository.MessageRepository
  nameWithType.vb: MessageRepository.New
- uid: Amiquin.Infrastructure.Repositories.NachoRepository
  name: NachoRepository
  href: api/Amiquin.Infrastructure.Repositories.NachoRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.NachoRepository
  fullName: Amiquin.Infrastructure.Repositories.NachoRepository
  nameWithType: NachoRepository
- uid: Amiquin.Infrastructure.Repositories.NachoRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: NachoRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.NachoRepository.html#Amiquin_Infrastructure_Repositories_NachoRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.NachoRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.NachoRepository.NachoRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.NachoRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: NachoRepository.NachoRepository(AmiquinContext)
  nameWithType.vb: NachoRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.NachoRepository.#ctor*
  name: NachoRepository
  href: api/Amiquin.Infrastructure.Repositories.NachoRepository.html#Amiquin_Infrastructure_Repositories_NachoRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.NachoRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.NachoRepository.NachoRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.NachoRepository.New
  nameWithType: NachoRepository.NachoRepository
  nameWithType.vb: NachoRepository.New
- uid: Amiquin.Infrastructure.Repositories.ServerMetaRepository
  name: ServerMetaRepository
  href: api/Amiquin.Infrastructure.Repositories.ServerMetaRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.ServerMetaRepository
  fullName: Amiquin.Infrastructure.Repositories.ServerMetaRepository
  nameWithType: ServerMetaRepository
- uid: Amiquin.Infrastructure.Repositories.ServerMetaRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: ServerMetaRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.ServerMetaRepository.html#Amiquin_Infrastructure_Repositories_ServerMetaRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.ServerMetaRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.ServerMetaRepository.ServerMetaRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.ServerMetaRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: ServerMetaRepository.ServerMetaRepository(AmiquinContext)
  nameWithType.vb: ServerMetaRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.ServerMetaRepository.#ctor*
  name: ServerMetaRepository
  href: api/Amiquin.Infrastructure.Repositories.ServerMetaRepository.html#Amiquin_Infrastructure_Repositories_ServerMetaRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.ServerMetaRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.ServerMetaRepository.ServerMetaRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.ServerMetaRepository.New
  nameWithType: ServerMetaRepository.ServerMetaRepository
  nameWithType.vb: ServerMetaRepository.New
- uid: Amiquin.Infrastructure.Repositories.ToggleRepository
  name: ToggleRepository
  href: api/Amiquin.Infrastructure.Repositories.ToggleRepository.html
  commentId: T:Amiquin.Infrastructure.Repositories.ToggleRepository
  fullName: Amiquin.Infrastructure.Repositories.ToggleRepository
  nameWithType: ToggleRepository
- uid: Amiquin.Infrastructure.Repositories.ToggleRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name: ToggleRepository(AmiquinContext)
  href: api/Amiquin.Infrastructure.Repositories.ToggleRepository.html#Amiquin_Infrastructure_Repositories_ToggleRepository__ctor_Amiquin_Infrastructure_AmiquinContext_
  commentId: M:Amiquin.Infrastructure.Repositories.ToggleRepository.#ctor(Amiquin.Infrastructure.AmiquinContext)
  name.vb: New(AmiquinContext)
  fullName: Amiquin.Infrastructure.Repositories.ToggleRepository.ToggleRepository(Amiquin.Infrastructure.AmiquinContext)
  fullName.vb: Amiquin.Infrastructure.Repositories.ToggleRepository.New(Amiquin.Infrastructure.AmiquinContext)
  nameWithType: ToggleRepository.ToggleRepository(AmiquinContext)
  nameWithType.vb: ToggleRepository.New(AmiquinContext)
- uid: Amiquin.Infrastructure.Repositories.ToggleRepository.#ctor*
  name: ToggleRepository
  href: api/Amiquin.Infrastructure.Repositories.ToggleRepository.html#Amiquin_Infrastructure_Repositories_ToggleRepository__ctor_
  commentId: Overload:Amiquin.Infrastructure.Repositories.ToggleRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Infrastructure.Repositories.ToggleRepository.ToggleRepository
  fullName.vb: Amiquin.Infrastructure.Repositories.ToggleRepository.New
  nameWithType: ToggleRepository.ToggleRepository
  nameWithType.vb: ToggleRepository.New
- uid: Amiquin.Infrastructure.Setup
  name: Setup
  href: api/Amiquin.Infrastructure.Setup.html
  commentId: T:Amiquin.Infrastructure.Setup
  fullName: Amiquin.Infrastructure.Setup
  nameWithType: Setup
- uid: Amiquin.Infrastructure.Setup.AddAmiquinContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddAmiquinContext(IServiceCollection, IConfiguration)
  href: api/Amiquin.Infrastructure.Setup.html#Amiquin_Infrastructure_Setup_AddAmiquinContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Infrastructure.Setup.AddAmiquinContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Amiquin.Infrastructure.Setup.AddAmiquinContext(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: Setup.AddAmiquinContext(IServiceCollection, IConfiguration)
- uid: Amiquin.Infrastructure.Setup.AddAmiquinContext*
  name: AddAmiquinContext
  href: api/Amiquin.Infrastructure.Setup.html#Amiquin_Infrastructure_Setup_AddAmiquinContext_
  commentId: Overload:Amiquin.Infrastructure.Setup.AddAmiquinContext
  isSpec: "True"
  fullName: Amiquin.Infrastructure.Setup.AddAmiquinContext
  nameWithType: Setup.AddAmiquinContext
- uid: Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddAmiquinMySqlContext(IServiceCollection, IConfiguration)
  href: api/Amiquin.Infrastructure.Setup.html#Amiquin_Infrastructure_Setup_AddAmiquinMySqlContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: Setup.AddAmiquinMySqlContext(IServiceCollection, IConfiguration)
- uid: Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext*
  name: AddAmiquinMySqlContext
  href: api/Amiquin.Infrastructure.Setup.html#Amiquin_Infrastructure_Setup_AddAmiquinMySqlContext_
  commentId: Overload:Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext
  isSpec: "True"
  fullName: Amiquin.Infrastructure.Setup.AddAmiquinMySqlContext
  nameWithType: Setup.AddAmiquinMySqlContext
- uid: Amiquin.IntegrationTests.Fixtures
  name: Amiquin.IntegrationTests.Fixtures
  href: api/Amiquin.IntegrationTests.Fixtures.html
  commentId: N:Amiquin.IntegrationTests.Fixtures
  fullName: Amiquin.IntegrationTests.Fixtures
  nameWithType: Amiquin.IntegrationTests.Fixtures
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture
  name: DatabaseFixture
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html
  commentId: T:Amiquin.IntegrationTests.Fixtures.DatabaseFixture
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture
  nameWithType: DatabaseFixture
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.#ctor
  name: DatabaseFixture()
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture__ctor
  commentId: M:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.#ctor
  name.vb: New()
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DatabaseFixture()
  fullName.vb: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.New()
  nameWithType: DatabaseFixture.DatabaseFixture()
  nameWithType.vb: DatabaseFixture.New()
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.#ctor*
  name: DatabaseFixture
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DatabaseFixture
  fullName.vb: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.New
  nameWithType: DatabaseFixture.DatabaseFixture
  nameWithType.vb: DatabaseFixture.New
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync
  name: CleanupAsync()
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_CleanupAsync
  commentId: M:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync()
  nameWithType: DatabaseFixture.CleanupAsync()
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync*
  name: CleanupAsync
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_CleanupAsync_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.CleanupAsync
  nameWithType: DatabaseFixture.CleanupAsync
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext
  name: DbContext
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_DbContext
  commentId: P:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext
  nameWithType: DatabaseFixture.DbContext
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext*
  name: DbContext
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_DbContext_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.DbContext
  nameWithType: DatabaseFixture.DbContext
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose
  name: Dispose()
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_Dispose
  commentId: M:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose()
  nameWithType: DatabaseFixture.Dispose()
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose*
  name: Dispose
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_Dispose_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.Dispose
  nameWithType: DatabaseFixture.Dispose
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync
  name: SeedTestDataAsync()
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_SeedTestDataAsync
  commentId: M:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync()
  nameWithType: DatabaseFixture.SeedTestDataAsync()
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync*
  name: SeedTestDataAsync
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_SeedTestDataAsync_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.SeedTestDataAsync
  nameWithType: DatabaseFixture.SeedTestDataAsync
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider
  name: ServiceProvider
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_ServiceProvider
  commentId: P:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider
  nameWithType: DatabaseFixture.ServiceProvider
- uid: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider*
  name: ServiceProvider
  href: api/Amiquin.IntegrationTests.Fixtures.DatabaseFixture.html#Amiquin_IntegrationTests_Fixtures_DatabaseFixture_ServiceProvider_
  commentId: Overload:Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Fixtures.DatabaseFixture.ServiceProvider
  nameWithType: DatabaseFixture.ServiceProvider
- uid: Amiquin.IntegrationTests.Services
  name: Amiquin.IntegrationTests.Services
  href: api/Amiquin.IntegrationTests.Services.html
  commentId: N:Amiquin.IntegrationTests.Services
  fullName: Amiquin.IntegrationTests.Services
  nameWithType: Amiquin.IntegrationTests.Services
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests
  name: MessageCacheServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html
  commentId: T:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests
  nameWithType: MessageCacheServiceIntegrationTests
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name: MessageCacheServiceIntegrationTests(DatabaseFixture)
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests__ctor_Amiquin_IntegrationTests_Fixtures_DatabaseFixture_
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name.vb: New(DatabaseFixture)
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessageCacheServiceIntegrationTests(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  fullName.vb: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.New(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  nameWithType: MessageCacheServiceIntegrationTests.MessageCacheServiceIntegrationTests(DatabaseFixture)
  nameWithType.vb: MessageCacheServiceIntegrationTests.New(DatabaseFixture)
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.#ctor*
  name: MessageCacheServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessageCacheServiceIntegrationTests
  fullName.vb: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.New
  nameWithType: MessageCacheServiceIntegrationTests.MessageCacheServiceIntegrationTests
  nameWithType.vb: MessageCacheServiceIntegrationTests.New
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  name: AddChatExchangeAsync_ShouldPersistMessagesToDatabase()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase()
  nameWithType: MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase*
  name: AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_AddChatExchangeAsync_ShouldPersistMessagesToDatabase_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase
  nameWithType: MessageCacheServiceIntegrationTests.AddChatExchangeAsync_ShouldPersistMessagesToDatabase
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  name: ClearMessageCachce_ShouldRemoveSpecificCacheKeys()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys()
  nameWithType: MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys*
  name: ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ClearMessageCachce_ShouldRemoveSpecificCacheKeys_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys
  nameWithType: MessageCacheServiceIntegrationTests.ClearMessageCachce_ShouldRemoveSpecificCacheKeys
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  name: ClearOldMessages_ShouldRemoveOldestMessagesFromCache()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache()
  nameWithType: MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache*
  name: ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ClearOldMessages_ShouldRemoveOldestMessagesFromCache_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache
  nameWithType: MessageCacheServiceIntegrationTests.ClearOldMessages_ShouldRemoveOldestMessagesFromCache
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  name: GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount()
  nameWithType: MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount*
  name: GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
  nameWithType: MessageCacheServiceIntegrationTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCorrectCount
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  name: GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
  nameWithType: MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero*
  name: GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  nameWithType: MessageCacheServiceIntegrationTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  name: GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase()
  nameWithType: MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase*
  name: GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
  nameWithType: MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithExistingMessages_ShouldReturnMessagesFromDatabase
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  name: GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList()
  nameWithType: MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList*
  name: GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
  nameWithType: MessageCacheServiceIntegrationTests.GetOrCreateChatMessagesAsync_WithNoExistingMessages_ShouldReturnEmptyList
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances
  name: MessagePersistence_ShouldWorkAcrossServiceInstances()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_MessagePersistence_ShouldWorkAcrossServiceInstances
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances()
  nameWithType: MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances*
  name: MessagePersistence_ShouldWorkAcrossServiceInstances
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_MessagePersistence_ShouldWorkAcrossServiceInstances_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances
  nameWithType: MessageCacheServiceIntegrationTests.MessagePersistence_ShouldWorkAcrossServiceInstances
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue
  name: ModifyMessage_ShouldUpdateCacheWithNewValue()
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ModifyMessage_ShouldUpdateCacheWithNewValue
  commentId: M:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue()
  nameWithType: MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue()
- uid: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue*
  name: ModifyMessage_ShouldUpdateCacheWithNewValue
  href: api/Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_MessageCacheServiceIntegrationTests_ModifyMessage_ShouldUpdateCacheWithNewValue_
  commentId: Overload:Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue
  nameWithType: MessageCacheServiceIntegrationTests.ModifyMessage_ShouldUpdateCacheWithNewValue
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests
  name: NachoServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html
  commentId: T:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests
  nameWithType: NachoServiceIntegrationTests
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name: NachoServiceIntegrationTests(DatabaseFixture)
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests__ctor_Amiquin_IntegrationTests_Fixtures_DatabaseFixture_
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name.vb: New(DatabaseFixture)
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.NachoServiceIntegrationTests(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  fullName.vb: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.New(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  nameWithType: NachoServiceIntegrationTests.NachoServiceIntegrationTests(DatabaseFixture)
  nameWithType.vb: NachoServiceIntegrationTests.New(DatabaseFixture)
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.#ctor*
  name: NachoServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.NachoServiceIntegrationTests
  fullName.vb: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.New
  nameWithType: NachoServiceIntegrationTests.NachoServiceIntegrationTests
  nameWithType.vb: NachoServiceIntegrationTests.New
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  name: AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException*
  name: AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_ExceedingDailyLimit_ShouldThrowException_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount
  name: AddNachoAsync_ShouldAddNachoAndIncrementCount()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_ShouldAddNachoAndIncrementCount
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount()
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount*
  name: AddNachoAsync_ShouldAddNachoAndIncrementCount
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_ShouldAddNachoAndIncrementCount_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_ShouldAddNachoAndIncrementCount
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  name: AddNachoAsync_WithDefaultCount_ShouldAddOneNacho()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho()
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho*
  name: AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_WithDefaultCount_ShouldAddOneNacho_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_WithDefaultCount_ShouldAddOneNacho
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException
  name: AddNachoAsync_WithNegativeCount_ShouldThrowException()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_WithNegativeCount_ShouldThrowException
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException()
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException*
  name: AddNachoAsync_WithNegativeCount_ShouldThrowException
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_AddNachoAsync_WithNegativeCount_ShouldThrowException_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException
  nameWithType: NachoServiceIntegrationTests.AddNachoAsync_WithNegativeCount_ShouldThrowException
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay
  name: DailyLimitReset_ShouldAllowNewNachosNextDay()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_DailyLimitReset_ShouldAllowNewNachosNextDay
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay()
  nameWithType: NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay*
  name: DailyLimitReset_ShouldAllowNewNachosNextDay
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_DailyLimitReset_ShouldAllowNewNachosNextDay_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay
  nameWithType: NachoServiceIntegrationTests.DailyLimitReset_ShouldAllowNewNachosNextDay
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  name: GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer()
  nameWithType: NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer*
  name: GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
  nameWithType: NachoServiceIntegrationTests.GetServerNachoCountAsync_WithMultipleUsers_ShouldReturnTotalForServer
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  name: GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos()
  nameWithType: NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos*
  name: GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
  nameWithType: NachoServiceIntegrationTests.GetTotalNachoCountAsync_ShouldReturnSumOfAllNachos
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  name: GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser()
  nameWithType: NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser*
  name: GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
  nameWithType: NachoServiceIntegrationTests.GetUserNachoCountAsync_WithMultipleServers_ShouldReturnTotalForUser
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  name: RemoveAllNachoAsync_ShouldRemoveAllNachosForUser()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser()
  nameWithType: NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser*
  name: RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveAllNachoAsync_ShouldRemoveAllNachosForUser_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
  nameWithType: NachoServiceIntegrationTests.RemoveAllNachoAsync_ShouldRemoveAllNachosForUser
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  name: RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer()
  nameWithType: NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer*
  name: RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
  nameWithType: NachoServiceIntegrationTests.RemoveAllServerNachoAsync_ShouldRemoveAllNachosForServer
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  name: RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
  nameWithType: NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho*
  name: RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  nameWithType: NachoServiceIntegrationTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  name: RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow()
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  commentId: M:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow()
  nameWithType: NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow()
- uid: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow*
  name: RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  href: api/Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_NachoServiceIntegrationTests_RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow_
  commentId: Overload:Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
  nameWithType: NachoServiceIntegrationTests.RemoveNachoAsync_WithNonExistentNacho_ShouldNotThrow
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests
  name: ServerMetaServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html
  commentId: T:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests
  nameWithType: ServerMetaServiceIntegrationTests
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name: ServerMetaServiceIntegrationTests(DatabaseFixture)
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests__ctor_Amiquin_IntegrationTests_Fixtures_DatabaseFixture_
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name.vb: New(DatabaseFixture)
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.ServerMetaServiceIntegrationTests(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  fullName.vb: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.New(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  nameWithType: ServerMetaServiceIntegrationTests.ServerMetaServiceIntegrationTests(DatabaseFixture)
  nameWithType.vb: ServerMetaServiceIntegrationTests.New(DatabaseFixture)
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.#ctor*
  name: ServerMetaServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.ServerMetaServiceIntegrationTests
  fullName.vb: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.New
  nameWithType: ServerMetaServiceIntegrationTests.ServerMetaServiceIntegrationTests
  nameWithType.vb: ServerMetaServiceIntegrationTests.New
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  name: CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta()
  nameWithType: ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta*
  name: CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
  nameWithType: ServerMetaServiceIntegrationTests.CreateServerMetaAsync_ShouldCreateAndReturnNewServerMeta
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta
  name: DeleteServerMetaAsync_ShouldRemoveServerMeta()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_DeleteServerMetaAsync_ShouldRemoveServerMeta
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta()
  nameWithType: ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta*
  name: DeleteServerMetaAsync_ShouldRemoveServerMeta
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_DeleteServerMetaAsync_ShouldRemoveServerMeta_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta
  nameWithType: ServerMetaServiceIntegrationTests.DeleteServerMetaAsync_ShouldRemoveServerMeta
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas
  name: GetAllServerMetasAsync_ShouldReturnAllServerMetas()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetAllServerMetasAsync_ShouldReturnAllServerMetas
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas()
  nameWithType: ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas*
  name: GetAllServerMetasAsync_ShouldReturnAllServerMetas
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetAllServerMetasAsync_ShouldReturnAllServerMetas_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas
  nameWithType: ServerMetaServiceIntegrationTests.GetAllServerMetasAsync_ShouldReturnAllServerMetas
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  name: GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta()
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta*
  name: GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithExistingServer_ShouldReturnServerMeta
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  name: GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles*
  name: GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  name: GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull()
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull*
  name: GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
  nameWithType: ServerMetaServiceIntegrationTests.GetServerMetaAsync_WithNonExistentServer_ShouldReturnNull
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  name: UpdateServerMetaAsync_ShouldUpdateExistingServerMeta()
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  commentId: M:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta()
  nameWithType: ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta()
- uid: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta*
  name: UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  href: api/Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServerMetaServiceIntegrationTests_UpdateServerMetaAsync_ShouldUpdateExistingServerMeta_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
  nameWithType: ServerMetaServiceIntegrationTests.UpdateServerMetaAsync_ShouldUpdateExistingServerMeta
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests
  name: ServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html
  commentId: T:Amiquin.IntegrationTests.Services.ServiceIntegrationTests
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests
  nameWithType: ServiceIntegrationTests
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name: ServiceIntegrationTests(DatabaseFixture)
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests__ctor_Amiquin_IntegrationTests_Fixtures_DatabaseFixture_
  commentId: M:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name.vb: New(DatabaseFixture)
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServiceIntegrationTests(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  fullName.vb: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.New(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  nameWithType: ServiceIntegrationTests.ServiceIntegrationTests(DatabaseFixture)
  nameWithType.vb: ServiceIntegrationTests.New(DatabaseFixture)
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.#ctor*
  name: ServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServiceIntegrationTests
  fullName.vb: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.New
  nameWithType: ServiceIntegrationTests.ServiceIntegrationTests
  nameWithType.vb: ServiceIntegrationTests.New
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency
  name: BulkOperations_ShouldMaintainDataConsistency()
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_BulkOperations_ShouldMaintainDataConsistency
  commentId: M:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency()
  nameWithType: ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency()
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency*
  name: BulkOperations_ShouldMaintainDataConsistency
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_BulkOperations_ShouldMaintainDataConsistency_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency
  nameWithType: ServiceIntegrationTests.BulkOperations_ShouldMaintainDataConsistency
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd
  name: CompleteServerWorkflow_ShouldWorkEndToEnd()
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_CompleteServerWorkflow_ShouldWorkEndToEnd
  commentId: M:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd()
  nameWithType: ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd()
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd*
  name: CompleteServerWorkflow_ShouldWorkEndToEnd
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_CompleteServerWorkflow_ShouldWorkEndToEnd_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd
  nameWithType: ServiceIntegrationTests.CompleteServerWorkflow_ShouldWorkEndToEnd
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly
  name: MultiServerScenario_ShouldIsolateDataCorrectly()
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_MultiServerScenario_ShouldIsolateDataCorrectly
  commentId: M:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly()
  nameWithType: ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly()
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly*
  name: MultiServerScenario_ShouldIsolateDataCorrectly
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_MultiServerScenario_ShouldIsolateDataCorrectly_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly
  nameWithType: ServiceIntegrationTests.MultiServerScenario_ShouldIsolateDataCorrectly
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior
  name: ServerDeactivation_ShouldAffectToggleBehavior()
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_ServerDeactivation_ShouldAffectToggleBehavior
  commentId: M:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior()
  nameWithType: ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior()
- uid: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior*
  name: ServerDeactivation_ShouldAffectToggleBehavior
  href: api/Amiquin.IntegrationTests.Services.ServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ServiceIntegrationTests_ServerDeactivation_ShouldAffectToggleBehavior_
  commentId: Overload:Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior
  nameWithType: ServiceIntegrationTests.ServerDeactivation_ShouldAffectToggleBehavior
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests
  name: ToggleServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html
  commentId: T:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests
  nameWithType: ToggleServiceIntegrationTests
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name: ToggleServiceIntegrationTests(DatabaseFixture)
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests__ctor_Amiquin_IntegrationTests_Fixtures_DatabaseFixture_
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.#ctor(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  name.vb: New(DatabaseFixture)
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.ToggleServiceIntegrationTests(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  fullName.vb: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.New(Amiquin.IntegrationTests.Fixtures.DatabaseFixture)
  nameWithType: ToggleServiceIntegrationTests.ToggleServiceIntegrationTests(DatabaseFixture)
  nameWithType.vb: ToggleServiceIntegrationTests.New(DatabaseFixture)
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.#ctor*
  name: ToggleServiceIntegrationTests
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests__ctor_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.ToggleServiceIntegrationTests
  fullName.vb: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.New
  nameWithType: ToggleServiceIntegrationTests.ToggleServiceIntegrationTests
  nameWithType.vb: ToggleServiceIntegrationTests.New
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  name: CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate()
  nameWithType: ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate*
  name: CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
  nameWithType: ToggleServiceIntegrationTests.CreateServerTogglesIfNotExistsAsync_WithExistingToggles_ShouldNotDuplicate
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles
  name: GetTogglesByServerId_ShouldReturnAllServerToggles()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_GetTogglesByServerId_ShouldReturnAllServerToggles
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles()
  nameWithType: ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles*
  name: GetTogglesByServerId_ShouldReturnAllServerToggles
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_GetTogglesByServerId_ShouldReturnAllServerToggles_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles
  nameWithType: ToggleServiceIntegrationTests.GetTogglesByServerId_ShouldReturnAllServerToggles
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  name: IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse()
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse*
  name: IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndDisabledToggle_ShouldReturnFalse
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  name: IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue()
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue*
  name: IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithActiveServerAndEnabledToggle_ShouldReturnTrue
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  name: IsEnabledAsync_WithInactiveServer_ShouldReturnFalse()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse()
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse*
  name: IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithInactiveServer_ShouldReturnFalse_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithInactiveServer_ShouldReturnFalse
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  name: IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue()
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue*
  name: IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
  nameWithType: ToggleServiceIntegrationTests.IsEnabledAsync_WithNonExistentServer_ShouldReturnTrue
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  name: SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle()
  nameWithType: ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle*
  name: SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
  nameWithType: ToggleServiceIntegrationTests.SetServerToggleAsync_WithExistingToggle_ShouldUpdateToggle
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  name: SetServerToggleAsync_WithNewToggle_ShouldCreateToggle()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle()
  nameWithType: ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle*
  name: SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerToggleAsync_WithNewToggle_ShouldCreateToggle_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
  nameWithType: ToggleServiceIntegrationTests.SetServerToggleAsync_WithNewToggle_ShouldCreateToggle
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  name: SetServerTogglesBulkAsync_ShouldCreateMultipleToggles()
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  commentId: M:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles()
  nameWithType: ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles()
- uid: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles*
  name: SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  href: api/Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.html#Amiquin_IntegrationTests_Services_ToggleServiceIntegrationTests_SetServerTogglesBulkAsync_ShouldCreateMultipleToggles_
  commentId: Overload:Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  isSpec: "True"
  fullName: Amiquin.IntegrationTests.Services.ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
  nameWithType: ToggleServiceIntegrationTests.SetServerTogglesBulkAsync_ShouldCreateMultipleToggles
- uid: Amiquin.MySql.Migrations
  name: Amiquin.MySql.Migrations
  href: api/Amiquin.MySql.Migrations.html
  commentId: N:Amiquin.MySql.Migrations
  fullName: Amiquin.MySql.Migrations
  nameWithType: Amiquin.MySql.Migrations
- uid: Amiquin.MySql.Migrations.Init_MySql
  name: Init_MySql
  href: api/Amiquin.MySql.Migrations.Init_MySql.html
  commentId: T:Amiquin.MySql.Migrations.Init_MySql
  fullName: Amiquin.MySql.Migrations.Init_MySql
  nameWithType: Init_MySql
- uid: Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Init_MySql.BuildTargetModel(ModelBuilder)
- uid: Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel*
  name: BuildTargetModel
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_BuildTargetModel_
  commentId: Overload:Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.Init_MySql.BuildTargetModel
  nameWithType: Init_MySql.BuildTargetModel
- uid: Amiquin.MySql.Migrations.Init_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.MySql.Migrations.Init_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.MySql.Migrations.Init_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init_MySql.Down(MigrationBuilder)
- uid: Amiquin.MySql.Migrations.Init_MySql.Down*
  name: Down
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_Down_
  commentId: Overload:Amiquin.MySql.Migrations.Init_MySql.Down
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.Init_MySql.Down
  nameWithType: Init_MySql.Down
- uid: Amiquin.MySql.Migrations.Init_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.MySql.Migrations.Init_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.MySql.Migrations.Init_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init_MySql.Up(MigrationBuilder)
- uid: Amiquin.MySql.Migrations.Init_MySql.Up*
  name: Up
  href: api/Amiquin.MySql.Migrations.Init_MySql.html#Amiquin_MySql_Migrations_Init_MySql_Up_
  commentId: Overload:Amiquin.MySql.Migrations.Init_MySql.Up
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.Init_MySql.Up
  nameWithType: Init_MySql.Up
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql
  name: RemovedToggleScope_MySql
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html
  commentId: T:Amiquin.MySql.Migrations.RemovedToggleScope_MySql
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql
  nameWithType: RemovedToggleScope_MySql
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: RemovedToggleScope_MySql.BuildTargetModel(ModelBuilder)
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel*
  name: BuildTargetModel
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_BuildTargetModel_
  commentId: Overload:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.BuildTargetModel
  nameWithType: RemovedToggleScope_MySql.BuildTargetModel
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: RemovedToggleScope_MySql.Down(MigrationBuilder)
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down*
  name: Down
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_Down_
  commentId: Overload:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Down
  nameWithType: RemovedToggleScope_MySql.Down
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: RemovedToggleScope_MySql.Up(MigrationBuilder)
- uid: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up*
  name: Up
  href: api/Amiquin.MySql.Migrations.RemovedToggleScope_MySql.html#Amiquin_MySql_Migrations_RemovedToggleScope_MySql_Up_
  commentId: Overload:Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up
  isSpec: "True"
  fullName: Amiquin.MySql.Migrations.RemovedToggleScope_MySql.Up
  nameWithType: RemovedToggleScope_MySql.Up
- uid: Amiquin.Sqlite.Migrations
  name: Amiquin.Sqlite.Migrations
  href: api/Amiquin.Sqlite.Migrations.html
  commentId: N:Amiquin.Sqlite.Migrations
  fullName: Amiquin.Sqlite.Migrations
  nameWithType: Amiquin.Sqlite.Migrations
- uid: Amiquin.Sqlite.Migrations.Init_SQLite
  name: Init_SQLite
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html
  commentId: T:Amiquin.Sqlite.Migrations.Init_SQLite
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite
  nameWithType: Init_SQLite
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Init_SQLite.BuildTargetModel(ModelBuilder)
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel*
  name: BuildTargetModel
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_BuildTargetModel_
  commentId: Overload:Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.BuildTargetModel
  nameWithType: Init_SQLite.BuildTargetModel
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.Init_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init_SQLite.Down(MigrationBuilder)
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.Down*
  name: Down
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_Down_
  commentId: Overload:Amiquin.Sqlite.Migrations.Init_SQLite.Down
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.Down
  nameWithType: Init_SQLite.Down
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.Init_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Init_SQLite.Up(MigrationBuilder)
- uid: Amiquin.Sqlite.Migrations.Init_SQLite.Up*
  name: Up
  href: api/Amiquin.Sqlite.Migrations.Init_SQLite.html#Amiquin_Sqlite_Migrations_Init_SQLite_Up_
  commentId: Overload:Amiquin.Sqlite.Migrations.Init_SQLite.Up
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.Init_SQLite.Up
  nameWithType: Init_SQLite.Up
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite
  name: RemovedToggleScope_SQLite
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html
  commentId: T:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite
  nameWithType: RemovedToggleScope_SQLite
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: RemovedToggleScope_SQLite.BuildTargetModel(ModelBuilder)
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel*
  name: BuildTargetModel
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_BuildTargetModel_
  commentId: Overload:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.BuildTargetModel
  nameWithType: RemovedToggleScope_SQLite.BuildTargetModel
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: RemovedToggleScope_SQLite.Down(MigrationBuilder)
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down*
  name: Down
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_Down_
  commentId: Overload:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Down
  nameWithType: RemovedToggleScope_SQLite.Down
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: RemovedToggleScope_SQLite.Up(MigrationBuilder)
- uid: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up*
  name: Up
  href: api/Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.html#Amiquin_Sqlite_Migrations_RemovedToggleScope_SQLite_Up_
  commentId: Overload:Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up
  isSpec: "True"
  fullName: Amiquin.Sqlite.Migrations.RemovedToggleScope_SQLite.Up
  nameWithType: RemovedToggleScope_SQLite.Up
- uid: Amiquin.Tests.Services
  name: Amiquin.Tests.Services
  href: api/Amiquin.Tests.Services.html
  commentId: N:Amiquin.Tests.Services
  fullName: Amiquin.Tests.Services
  nameWithType: Amiquin.Tests.Services
- uid: Amiquin.Tests.Services.ExternalProcessRunner
  name: Amiquin.Tests.Services.ExternalProcessRunner
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.html
  commentId: N:Amiquin.Tests.Services.ExternalProcessRunner
  fullName: Amiquin.Tests.Services.ExternalProcessRunner
  nameWithType: Amiquin.Tests.Services.ExternalProcessRunner
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests
  name: ExternalProcessRunnerServiceTests
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html
  commentId: T:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests
  nameWithType: ExternalProcessRunnerServiceTests
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.#ctor
  name: ExternalProcessRunnerServiceTests()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.ExternalProcessRunnerServiceTests()
  fullName.vb: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.New()
  nameWithType: ExternalProcessRunnerServiceTests.ExternalProcessRunnerServiceTests()
  nameWithType.vb: ExternalProcessRunnerServiceTests.New()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.#ctor*
  name: ExternalProcessRunnerServiceTests
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.ExternalProcessRunnerServiceTests
  fullName.vb: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.New
  nameWithType: ExternalProcessRunnerServiceTests.ExternalProcessRunnerServiceTests
  nameWithType.vb: ExternalProcessRunnerServiceTests.New
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation
  name: CreateFfmpegProcess_ShouldLogCorrectInformation()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_ShouldLogCorrectInformation
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation()
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation*
  name: CreateFfmpegProcess_ShouldLogCorrectInformation
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_ShouldLogCorrectInformation_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldLogCorrectInformation
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  name: CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration()
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration*
  name: CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_ShouldReturnProcessWithCorrectConfiguration
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(System.String)
  name: CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(string?)
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess_System_String_
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(System.String)
  name.vb: CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(String)
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(string?)
  fullName.vb: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(String)
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(string?)
  nameWithType.vb: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess(String)
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess*
  name: CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithEmptyOrNullPath_ShouldStillCreateProcess
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  name: CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly()
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly*
  name: CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
  nameWithType: ExternalProcessRunnerServiceTests.CreateFfmpegProcess_WithSpecialCharactersInPath_ShouldHandleCorrectly
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation
  name: CreatePiperProcess_ShouldLogCorrectInformation()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_ShouldLogCorrectInformation
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation()
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation*
  name: CreatePiperProcess_ShouldLogCorrectInformation
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_ShouldLogCorrectInformation_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldLogCorrectInformation
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  name: CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration()
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration*
  name: CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_ShouldReturnProcessWithCorrectConfiguration
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(System.String)
  name: CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(string?)
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess_System_String_
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(System.String)
  name.vb: CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(String)
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(string?)
  fullName.vb: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(String)
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(string?)
  nameWithType.vb: ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess(String)
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess*
  name: CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_WithEmptyOrNullPaths_ShouldStillCreateProcess
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  name: CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly()
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  commentId: M:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly()
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly()
- uid: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly*
  name: CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  href: api/Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.html#Amiquin_Tests_Services_ExternalProcessRunner_ExternalProcessRunnerServiceTests_CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly_
  commentId: Overload:Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ExternalProcessRunner.ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
  nameWithType: ExternalProcessRunnerServiceTests.CreatePiperProcess_WithSpecialCharactersInPaths_ShouldHandleCorrectly
- uid: Amiquin.Tests.Services.MessageCacheServiceTests
  name: MessageCacheServiceTests
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html
  commentId: T:Amiquin.Tests.Services.MessageCacheServiceTests
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests
  nameWithType: MessageCacheServiceTests
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.#ctor
  name: MessageCacheServiceTests()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.MessageCacheServiceTests()
  fullName.vb: Amiquin.Tests.Services.MessageCacheServiceTests.New()
  nameWithType: MessageCacheServiceTests.MessageCacheServiceTests()
  nameWithType.vb: MessageCacheServiceTests.New()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.#ctor*
  name: MessageCacheServiceTests
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.MessageCacheServiceTests
  fullName.vb: Amiquin.Tests.Services.MessageCacheServiceTests.New
  nameWithType: MessageCacheServiceTests.MessageCacheServiceTests
  nameWithType.vb: MessageCacheServiceTests.New
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  name: AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages()
  nameWithType: MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages*
  name: AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
  nameWithType: MessageCacheServiceTests.AddChatExchangeAsync_WithExistingCache_ShouldReplaceMessages
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages
  name: ClearMessageCache_ShouldRemoveAllCachedMessages()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearMessageCache_ShouldRemoveAllCachedMessages
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages()
  nameWithType: MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages*
  name: ClearMessageCache_ShouldRemoveAllCachedMessages
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearMessageCache_ShouldRemoveAllCachedMessages_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages
  nameWithType: MessageCacheServiceTests.ClearMessageCache_ShouldRemoveAllCachedMessages
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  name: ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages()
  nameWithType: MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages*
  name: ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
  nameWithType: MessageCacheServiceTests.ClearOldMessages_WithCachedMessages_ShouldKeepOnlyRecentMessages
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  name: ClearOldMessages_WithNoCachedMessages_ShouldNotThrow()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow()
  nameWithType: MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow*
  name: ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_ClearOldMessages_WithNoCachedMessages_ShouldNotThrow_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
  nameWithType: MessageCacheServiceTests.ClearOldMessages_WithNoCachedMessages_ShouldNotThrow
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  name: GetChatMessageCount_WithCachedMessages_ShouldReturnCount()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount()
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount*
  name: GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithCachedMessages_ShouldReturnCount_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithCachedMessages_ShouldReturnCount
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  name: GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero*
  name: GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithNoCachedMessages_ShouldReturnZero
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  name: GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero()
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero*
  name: GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
  nameWithType: MessageCacheServiceTests.GetChatMessageCount_WithNullCachedMessages_ShouldReturnZero
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  name: GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages()
  nameWithType: MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages*
  name: GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
  nameWithType: MessageCacheServiceTests.GetOrCreateChatMessagesAsync_ShouldCreateAndCacheMessages
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  name: GetPersonaCoreMessageAsync_ShouldReturnCachedMessage()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage()
  nameWithType: MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage*
  name: GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetPersonaCoreMessageAsync_ShouldReturnCachedMessage_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
  nameWithType: MessageCacheServiceTests.GetPersonaCoreMessageAsync_ShouldReturnCachedMessage
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  name: GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull()
  nameWithType: MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull*
  name: GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
  nameWithType: MessageCacheServiceTests.GetPersonaCoreMessageAsync_WithNoCache_ShouldReturnNull
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage
  name: GetServerJoinMessage_ShouldReturnCachedMessage()
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetServerJoinMessage_ShouldReturnCachedMessage
  commentId: M:Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage()
  nameWithType: MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage()
- uid: Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage*
  name: GetServerJoinMessage_ShouldReturnCachedMessage
  href: api/Amiquin.Tests.Services.MessageCacheServiceTests.html#Amiquin_Tests_Services_MessageCacheServiceTests_GetServerJoinMessage_ShouldReturnCachedMessage_
  commentId: Overload:Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage
  isSpec: "True"
  fullName: Amiquin.Tests.Services.MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage
  nameWithType: MessageCacheServiceTests.GetServerJoinMessage_ShouldReturnCachedMessage
- uid: Amiquin.Tests.Services.NachoServiceTests
  name: NachoServiceTests
  href: api/Amiquin.Tests.Services.NachoServiceTests.html
  commentId: T:Amiquin.Tests.Services.NachoServiceTests
  fullName: Amiquin.Tests.Services.NachoServiceTests
  nameWithType: NachoServiceTests
- uid: Amiquin.Tests.Services.NachoServiceTests.#ctor
  name: NachoServiceTests()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.NachoServiceTests.NachoServiceTests()
  fullName.vb: Amiquin.Tests.Services.NachoServiceTests.New()
  nameWithType: NachoServiceTests.NachoServiceTests()
  nameWithType.vb: NachoServiceTests.New()
- uid: Amiquin.Tests.Services.NachoServiceTests.#ctor*
  name: NachoServiceTests
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.NachoServiceTests.NachoServiceTests
  fullName.vb: Amiquin.Tests.Services.NachoServiceTests.New
  nameWithType: NachoServiceTests.NachoServiceTests
  nameWithType.vb: NachoServiceTests.New
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  name: AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
  nameWithType: NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException()
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException*
  name: AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_ExceedingDailyLimit_ShouldThrowException_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
  nameWithType: NachoServiceTests.AddNachoAsync_ExceedingDailyLimit_ShouldThrowException
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  name: AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit()
  nameWithType: NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit()
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit*
  name: AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
  nameWithType: NachoServiceTests.AddNachoAsync_WithPreviousDayNachos_ShouldNotCountTowardsLimit
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho
  name: AddNachoAsync_WithValidInput_ShouldAddNacho()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithValidInput_ShouldAddNacho
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho()
  nameWithType: NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho()
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho*
  name: AddNachoAsync_WithValidInput_ShouldAddNacho
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithValidInput_ShouldAddNacho_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho
  nameWithType: NachoServiceTests.AddNachoAsync_WithValidInput_ShouldAddNacho
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException
  name: AddNachoAsync_WithZeroCount_ShouldThrowException()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithZeroCount_ShouldThrowException
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException()
  nameWithType: NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException()
- uid: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException*
  name: AddNachoAsync_WithZeroCount_ShouldThrowException
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_AddNachoAsync_WithZeroCount_ShouldThrowException_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException
  nameWithType: NachoServiceTests.AddNachoAsync_WithZeroCount_ShouldThrowException
- uid: Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount
  name: GetServerNachoCountAsync_ShouldReturnCorrectCount()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetServerNachoCountAsync_ShouldReturnCorrectCount
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount()
  nameWithType: NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount()
- uid: Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount*
  name: GetServerNachoCountAsync_ShouldReturnCorrectCount
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetServerNachoCountAsync_ShouldReturnCorrectCount_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount
  nameWithType: NachoServiceTests.GetServerNachoCountAsync_ShouldReturnCorrectCount
- uid: Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount
  name: GetTotalNachoCountAsync_ShouldReturnTotalCount()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetTotalNachoCountAsync_ShouldReturnTotalCount
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount()
  nameWithType: NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount()
- uid: Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount*
  name: GetTotalNachoCountAsync_ShouldReturnTotalCount
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetTotalNachoCountAsync_ShouldReturnTotalCount_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount
  nameWithType: NachoServiceTests.GetTotalNachoCountAsync_ShouldReturnTotalCount
- uid: Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount
  name: GetUserNachoCountAsync_ShouldReturnCorrectCount()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetUserNachoCountAsync_ShouldReturnCorrectCount
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount()
  nameWithType: NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount()
- uid: Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount*
  name: GetUserNachoCountAsync_ShouldReturnCorrectCount
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_GetUserNachoCountAsync_ShouldReturnCorrectCount_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount
  nameWithType: NachoServiceTests.GetUserNachoCountAsync_ShouldReturnCorrectCount
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  name: RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll()
  nameWithType: NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll()
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll*
  name: RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
  nameWithType: NachoServiceTests.RemoveAllNachoAsync_WithExistingNachos_ShouldRemoveAll
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  name: RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll()
  nameWithType: NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll()
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll*
  name: RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
  nameWithType: NachoServiceTests.RemoveAllServerNachoAsync_WithExistingNachos_ShouldRemoveAll
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  name: RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
  nameWithType: NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho()
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho*
  name: RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
  nameWithType: NachoServiceTests.RemoveNachoAsync_WithExistingNacho_ShouldRemoveNacho
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  name: RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove()
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  commentId: M:Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove()
  nameWithType: NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove()
- uid: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove*
  name: RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  href: api/Amiquin.Tests.Services.NachoServiceTests.html#Amiquin_Tests_Services_NachoServiceTests_RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove_
  commentId: Overload:Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  isSpec: "True"
  fullName: Amiquin.Tests.Services.NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
  nameWithType: NachoServiceTests.RemoveNachoAsync_WithNonExistingNacho_ShouldNotCallRemove
- uid: Amiquin.Tests.Services.Persona
  name: Amiquin.Tests.Services.Persona
  href: api/Amiquin.Tests.Services.Persona.html
  commentId: N:Amiquin.Tests.Services.Persona
  fullName: Amiquin.Tests.Services.Persona
  nameWithType: Amiquin.Tests.Services.Persona
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests
  name: PersonaServiceTests
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html
  commentId: T:Amiquin.Tests.Services.Persona.PersonaServiceTests
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests
  nameWithType: PersonaServiceTests
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.#ctor
  name: PersonaServiceTests()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.PersonaServiceTests()
  fullName.vb: Amiquin.Tests.Services.Persona.PersonaServiceTests.New()
  nameWithType: PersonaServiceTests.PersonaServiceTests()
  nameWithType.vb: PersonaServiceTests.New()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.#ctor*
  name: PersonaServiceTests
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.PersonaServiceTests
  fullName.vb: Amiquin.Tests.Services.Persona.PersonaServiceTests.New
  nameWithType: PersonaServiceTests.PersonaServiceTests
  nameWithType.vb: PersonaServiceTests.New
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  name: AddSummaryAsync_WithExistingPersona_ShouldAppendSummary()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary()
  nameWithType: PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary*
  name: AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_AddSummaryAsync_WithExistingPersona_ShouldAppendSummary_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
  nameWithType: PersonaServiceTests.AddSummaryAsync_WithExistingPersona_ShouldAppendSummary
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  name: AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary()
  nameWithType: PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary*
  name: AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
  nameWithType: PersonaServiceTests.AddSummaryAsync_WithNoExistingPersona_ShouldCreateAndAppendSummary
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  name: GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue()
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue*
  name: GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithCachedPersona_ShouldReturnCachedValue
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  name: GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully()
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully*
  name: GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithNewsApiError_ShouldHandleGracefully
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  name: GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona()
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona*
  name: GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithNoServerPersona_ShouldReturnDefaultPersona
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  name: GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood()
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  commentId: M:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood()
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood()
- uid: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood*
  name: GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  href: api/Amiquin.Tests.Services.Persona.PersonaServiceTests.html#Amiquin_Tests_Services_Persona_PersonaServiceTests_GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood_
  commentId: Overload:Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Persona.PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
  nameWithType: PersonaServiceTests.GetPersonaAsync_WithServerPersona_ShouldReturnServerPersonaWithMood
- uid: Amiquin.Tests.Services.ServerMeta
  name: Amiquin.Tests.Services.ServerMeta
  href: api/Amiquin.Tests.Services.ServerMeta.html
  commentId: N:Amiquin.Tests.Services.ServerMeta
  fullName: Amiquin.Tests.Services.ServerMeta
  nameWithType: Amiquin.Tests.Services.ServerMeta
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests
  name: ServerMetaServiceTests
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html
  commentId: T:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests
  nameWithType: ServerMetaServiceTests
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.#ctor
  name: ServerMetaServiceTests()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.ServerMetaServiceTests()
  fullName.vb: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.New()
  nameWithType: ServerMetaServiceTests.ServerMetaServiceTests()
  nameWithType.vb: ServerMetaServiceTests.New()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.#ctor*
  name: ServerMetaServiceTests
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.ServerMetaServiceTests
  fullName.vb: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.New
  nameWithType: ServerMetaServiceTests.ServerMetaServiceTests
  nameWithType.vb: ServerMetaServiceTests.New
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  name: DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache()
  nameWithType: ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache*
  name: DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
  nameWithType: ServerMetaServiceTests.DeleteServerMetaAsync_ShouldRemoveServerMetaAndClearCache
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  name: GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData()
  nameWithType: ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData*
  name: GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
  nameWithType: ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithExistingServerMeta_ShouldReturnExistingData
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  name: GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta()
  nameWithType: ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta*
  name: GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
  nameWithType: ServerMetaServiceTests.GetOrCreateServerMetaAsync_WithNoExistingServerMeta_ShouldCreateNewServerMeta
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  name: GetServerMetaAsync_WithCachedData_ShouldReturnCachedData()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData()
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData*
  name: GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithCachedData_ShouldReturnCachedData_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithCachedData_ShouldReturnCachedData
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  name: GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles*
  name: GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithIncludeToggles_ShouldLoadToggles
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  name: GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository()
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  commentId: M:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository()
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository()
- uid: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository*
  name: GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  href: api/Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.html#Amiquin_Tests_Services_ServerMeta_ServerMetaServiceTests_GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository_
  commentId: Overload:Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  isSpec: "True"
  fullName: Amiquin.Tests.Services.ServerMeta.ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
  nameWithType: ServerMetaServiceTests.GetServerMetaAsync_WithNoCachedData_ShouldFetchFromRepository
- uid: Amiquin.Tests.Services.Voice
  name: Amiquin.Tests.Services.Voice
  href: api/Amiquin.Tests.Services.Voice.html
  commentId: N:Amiquin.Tests.Services.Voice
  fullName: Amiquin.Tests.Services.Voice
  nameWithType: Amiquin.Tests.Services.Voice
- uid: Amiquin.Tests.Services.Voice.MockVoiceService
  name: MockVoiceService
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html
  commentId: T:Amiquin.Tests.Services.Voice.MockVoiceService
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService
  nameWithType: MockVoiceService
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync(System.String)
  name: CreateTextToSpeechAudioAsync(string)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_CreateTextToSpeechAudioAsync_System_String_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync(System.String)
  name.vb: CreateTextToSpeechAudioAsync(String)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync(string)
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync(String)
  nameWithType: MockVoiceService.CreateTextToSpeechAudioAsync(string)
  nameWithType.vb: MockVoiceService.CreateTextToSpeechAudioAsync(String)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync*
  name: CreateTextToSpeechAudioAsync
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_CreateTextToSpeechAudioAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsync
  nameWithType: MockVoiceService.CreateTextToSpeechAudioAsync
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
  name: CreateTextToSpeechAudioAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_CreateTextToSpeechAudioAsyncCallCount
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
  nameWithType: MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount*
  name: CreateTextToSpeechAudioAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_CreateTextToSpeechAudioAsyncCallCount_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
  nameWithType: MockVoiceService.CreateTextToSpeechAudioAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo(System.UInt64)
  name: IsConnectedTo(ulong)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_IsConnectedTo_System_UInt64_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo(System.UInt64)
  name.vb: IsConnectedTo(ULong)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo(ulong)
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo(ULong)
  nameWithType: MockVoiceService.IsConnectedTo(ulong)
  nameWithType.vb: MockVoiceService.IsConnectedTo(ULong)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo*
  name: IsConnectedTo
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_IsConnectedTo_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.IsConnectedTo
  nameWithType: MockVoiceService.IsConnectedTo
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync(Discord.IVoiceChannel)
  name: JoinAsync(IVoiceChannel)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_JoinAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync(Discord.IVoiceChannel)
  nameWithType: MockVoiceService.JoinAsync(IVoiceChannel)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync*
  name: JoinAsync
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_JoinAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsync
  nameWithType: MockVoiceService.JoinAsync
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount
  name: JoinAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_JoinAsyncCallCount
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount
  nameWithType: MockVoiceService.JoinAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount*
  name: JoinAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_JoinAsyncCallCount_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.JoinAsyncCallCount
  nameWithType: MockVoiceService.JoinAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath
  name: LastFilePath
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastFilePath
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath
  nameWithType: MockVoiceService.LastFilePath
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath*
  name: LastFilePath
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastFilePath_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastFilePath
  nameWithType: MockVoiceService.LastFilePath
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastText
  name: LastText
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastText
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.LastText
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastText
  nameWithType: MockVoiceService.LastText
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastText*
  name: LastText
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastText_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.LastText
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastText
  nameWithType: MockVoiceService.LastText
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel
  name: LastVoiceChannel
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastVoiceChannel
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel
  nameWithType: MockVoiceService.LastVoiceChannel
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel*
  name: LastVoiceChannel
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LastVoiceChannel_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LastVoiceChannel
  nameWithType: MockVoiceService.LastVoiceChannel
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync(Discord.IVoiceChannel)
  name: LeaveAsync(IVoiceChannel)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LeaveAsync_Discord_IVoiceChannel_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync(Discord.IVoiceChannel)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync(Discord.IVoiceChannel)
  nameWithType: MockVoiceService.LeaveAsync(IVoiceChannel)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync*
  name: LeaveAsync
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LeaveAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsync
  nameWithType: MockVoiceService.LeaveAsync
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount
  name: LeaveAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LeaveAsyncCallCount
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount
  nameWithType: MockVoiceService.LeaveAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount*
  name: LeaveAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_LeaveAsyncCallCount_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.LeaveAsyncCallCount
  nameWithType: MockVoiceService.LeaveAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.Reset
  name: Reset()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_Reset
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.Reset
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.Reset()
  nameWithType: MockVoiceService.Reset()
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.Reset*
  name: Reset
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_Reset_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.Reset
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.Reset
  nameWithType: MockVoiceService.Reset
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name: SpeakAsync(IVoiceChannel, string)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_SpeakAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync(Discord.IVoiceChannel,System.String)
  name.vb: SpeakAsync(IVoiceChannel, String)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync(Discord.IVoiceChannel, String)
  nameWithType: MockVoiceService.SpeakAsync(IVoiceChannel, string)
  nameWithType.vb: MockVoiceService.SpeakAsync(IVoiceChannel, String)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync*
  name: SpeakAsync
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_SpeakAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsync
  nameWithType: MockVoiceService.SpeakAsync
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount
  name: SpeakAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_SpeakAsyncCallCount
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount
  nameWithType: MockVoiceService.SpeakAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount*
  name: SpeakAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_SpeakAsyncCallCount_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.SpeakAsyncCallCount
  nameWithType: MockVoiceService.SpeakAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name: StreamAudioAsync(IVoiceChannel, string)
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_StreamAudioAsync_Discord_IVoiceChannel_System_String_
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync(Discord.IVoiceChannel,System.String)
  name.vb: StreamAudioAsync(IVoiceChannel, String)
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync(Discord.IVoiceChannel, string)
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync(Discord.IVoiceChannel, String)
  nameWithType: MockVoiceService.StreamAudioAsync(IVoiceChannel, string)
  nameWithType.vb: MockVoiceService.StreamAudioAsync(IVoiceChannel, String)
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync*
  name: StreamAudioAsync
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_StreamAudioAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsync
  nameWithType: MockVoiceService.StreamAudioAsync
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount
  name: StreamAudioAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_StreamAudioAsyncCallCount
  commentId: P:Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount
  nameWithType: MockVoiceService.StreamAudioAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount*
  name: StreamAudioAsyncCallCount
  href: api/Amiquin.Tests.Services.Voice.MockVoiceService.html#Amiquin_Tests_Services_Voice_MockVoiceService_StreamAudioAsyncCallCount_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceService.StreamAudioAsyncCallCount
  nameWithType: MockVoiceService.StreamAudioAsyncCallCount
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests
  name: MockVoiceServiceTests
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html
  commentId: T:Amiquin.Tests.Services.Voice.MockVoiceServiceTests
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests
  nameWithType: MockVoiceServiceTests
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.#ctor
  name: MockVoiceServiceTests()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.MockVoiceServiceTests()
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.New()
  nameWithType: MockVoiceServiceTests.MockVoiceServiceTests()
  nameWithType.vb: MockVoiceServiceTests.New()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.#ctor*
  name: MockVoiceServiceTests
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.MockVoiceServiceTests
  fullName.vb: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.New
  nameWithType: MockVoiceServiceTests.MockVoiceServiceTests
  nameWithType.vb: MockVoiceServiceTests.New
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  name: CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter()
  nameWithType: MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter*
  name: CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
  nameWithType: MockVoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldReturnFakePathAndIncrementCounter
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState
  name: IsConnectedTo_ShouldReturnCorrectConnectionState()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_IsConnectedTo_ShouldReturnCorrectConnectionState
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState()
  nameWithType: MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState*
  name: IsConnectedTo_ShouldReturnCorrectConnectionState
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_IsConnectedTo_ShouldReturnCorrectConnectionState_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState
  nameWithType: MockVoiceServiceTests.IsConnectedTo_ShouldReturnCorrectConnectionState
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter
  name: JoinAsync_ShouldTrackChannelAndIncrementCounter()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_JoinAsync_ShouldTrackChannelAndIncrementCounter
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter()
  nameWithType: MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter*
  name: JoinAsync_ShouldTrackChannelAndIncrementCounter
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_JoinAsync_ShouldTrackChannelAndIncrementCounter_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter
  nameWithType: MockVoiceServiceTests.JoinAsync_ShouldTrackChannelAndIncrementCounter
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  name: LeaveAsync_ShouldRemoveChannelAndIncrementCounter()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter()
  nameWithType: MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter*
  name: LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_LeaveAsync_ShouldRemoveChannelAndIncrementCounter_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter
  nameWithType: MockVoiceServiceTests.LeaveAsync_ShouldRemoveChannelAndIncrementCounter
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues
  name: Reset_ShouldClearAllCountersAndTrackedValues()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_Reset_ShouldClearAllCountersAndTrackedValues
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues()
  nameWithType: MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues*
  name: Reset_ShouldClearAllCountersAndTrackedValues
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_Reset_ShouldClearAllCountersAndTrackedValues_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues
  nameWithType: MockVoiceServiceTests.Reset_ShouldClearAllCountersAndTrackedValues
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  name: SpeakAsync_ShouldCallCreateAndStreamAudioMethods()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods()
  nameWithType: MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods*
  name: SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_SpeakAsync_ShouldCallCreateAndStreamAudioMethods_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods
  nameWithType: MockVoiceServiceTests.SpeakAsync_ShouldCallCreateAndStreamAudioMethods
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  name: StreamAudioAsync_ShouldTrackParametersAndIncrementCounter()
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  commentId: M:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter()
  nameWithType: MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter()
- uid: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter*
  name: StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  href: api/Amiquin.Tests.Services.Voice.MockVoiceServiceTests.html#Amiquin_Tests_Services_Voice_MockVoiceServiceTests_StreamAudioAsync_ShouldTrackParametersAndIncrementCounter_
  commentId: Overload:Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
  nameWithType: MockVoiceServiceTests.StreamAudioAsync_ShouldTrackParametersAndIncrementCounter
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests
  name: VoiceServiceTests
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html
  commentId: T:Amiquin.Tests.Services.Voice.VoiceServiceTests
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests
  nameWithType: VoiceServiceTests
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.#ctor
  name: VoiceServiceTests()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests__ctor
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.#ctor
  name.vb: New()
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.VoiceServiceTests()
  fullName.vb: Amiquin.Tests.Services.Voice.VoiceServiceTests.New()
  nameWithType: VoiceServiceTests.VoiceServiceTests()
  nameWithType.vb: VoiceServiceTests.New()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.#ctor*
  name: VoiceServiceTests
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests__ctor_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.VoiceServiceTests
  fullName.vb: Amiquin.Tests.Services.Voice.VoiceServiceTests.New
  nameWithType: VoiceServiceTests.VoiceServiceTests
  nameWithType.vb: VoiceServiceTests.New
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  name: CreateTextToSpeechAudioAsync_ShouldCreateAudioFile()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile()
  nameWithType: VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile*
  name: CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_CreateTextToSpeechAudioAsync_ShouldCreateAudioFile_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
  nameWithType: VoiceServiceTests.CreateTextToSpeechAudioAsync_ShouldCreateAudioFile
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync
  name: JoinAsync_ShouldCallConnectVoiceChannelAsync()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_JoinAsync_ShouldCallConnectVoiceChannelAsync
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync()
  nameWithType: VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync*
  name: JoinAsync_ShouldCallConnectVoiceChannelAsync
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_JoinAsync_ShouldCallConnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync
  nameWithType: VoiceServiceTests.JoinAsync_ShouldCallConnectVoiceChannelAsync
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  name: LeaveAsync_ShouldCallDisconnectVoiceChannelAsync()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync()
  nameWithType: VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync*
  name: LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_LeaveAsync_ShouldCallDisconnectVoiceChannelAsync_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
  nameWithType: VoiceServiceTests.LeaveAsync_ShouldCallDisconnectVoiceChannelAsync
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt
  name: SpeakAsync_ShouldCreateAudioAndStreamIt()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_SpeakAsync_ShouldCreateAudioAndStreamIt
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt()
  nameWithType: VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt*
  name: SpeakAsync_ShouldCreateAudioAndStreamIt
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_SpeakAsync_ShouldCreateAudioAndStreamIt_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt
  nameWithType: VoiceServiceTests.SpeakAsync_ShouldCreateAudioAndStreamIt
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  name: StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn()
  nameWithType: VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn*
  name: StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
  nameWithType: VoiceServiceTests.StreamAudioAsync_FailedToCreateFfmpegProcess_ShouldLogErrorAndReturn
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  name: StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn()
  nameWithType: VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn*
  name: StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
  nameWithType: VoiceServiceTests.StreamAudioAsync_FfmpegStartThrowsException_ShouldLogErrorAndReturn
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  name: StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn()
  nameWithType: VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn*
  name: StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
  nameWithType: VoiceServiceTests.StreamAudioAsync_NullFfmpegOutputStream_ShouldLogErrorAndReturn
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  name: StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn()
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn*
  name: StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithNullAmiquinVoice_ShouldLogErrorAndReturn
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  name: StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn()
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn*
  name: StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithNullAudioClient_ShouldLogErrorAndReturn
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  name: StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio()
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  commentId: M:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio()
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio()
- uid: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio*
  name: StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  href: api/Amiquin.Tests.Services.Voice.VoiceServiceTests.html#Amiquin_Tests_Services_Voice_VoiceServiceTests_StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio_
  commentId: Overload:Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  isSpec: "True"
  fullName: Amiquin.Tests.Services.Voice.VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
  nameWithType: VoiceServiceTests.StreamAudioAsync_WithValidAudioClient_ShouldStreamAudio
